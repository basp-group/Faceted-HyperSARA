
                            < M A T L A B (R) >
                  Copyright 1984-2018 The MathWorks, Inc.
                   R2018a (9.4.0.813654) 64-bit (glnxa64)
                             February 23, 2018

 
To get started, type one of these: helpwin, helpdesk, or demo.
For product information, visit www.mathworks.com.
 

irtdir =

    '/lustre/home/sc004/aa61/HyperSARA_dist_Full/irt'

Path setup for irt appears to have succeeded.
/*----------------------------------------------------------------*/
 example: Simulation of wide band radio interferometric data
/*----------------------------------------------------------------*/

n_src =

    11


ans =

     9


T =

   100


hrs =

     6


ans =

     0     1


bmax =

    3.1416


ans =

     0     1


bmax =

    3.1416


ans =

       35100           1

Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 2s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 2s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 2s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 2s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
norm it n=2 norm=55231.1356
norm it n=3 norm=224419.4607
norm it n=4 norm=259236.0951
norm it n=5 norm=277689.5441
norm it n=6 norm=289803.0908
norm it n=7 norm=298829.5135
norm it n=8 norm=306056.6454
norm it n=9 norm=312102.9056
norm it n=10 norm=317312.0017
norm it n=11 norm=321897.5122
norm it n=12 norm=326003.5138
norm it n=13 norm=329732.7839
norm it n=14 norm=333161.1805
norm it n=15 norm=336345.6597
norm it n=16 norm=339329.1632
norm it n=17 norm=342143.8638
norm it n=18 norm=344813.4945
norm it n=19 norm=347355.1297
norm it n=20 norm=349780.6185
norm it n=21 norm=352097.7777
norm it n=22 norm=354311.404
norm it n=23 norm=356424.1385
norm it n=24 norm=358437.1982
norm it n=25 norm=360350.9841
norm it n=26 norm=362165.5694
norm it n=27 norm=363881.075
norm it n=28 norm=365497.9389
norm it n=29 norm=367017.0911
norm it n=30 norm=368440.0463
norm it n=31 norm=369768.9306
norm it n=32 norm=371006.4564
norm it n=33 norm=372155.8614
norm it n=34 norm=373220.8245
norm it n=35 norm=374205.3697
norm it n=36 norm=375113.7677
norm it n=37 norm=375950.4412
norm it n=38 norm=376719.8784
norm it n=39 norm=377426.5575
norm it n=40 norm=378074.8836
norm it n=41 norm=378669.1377
norm it n=42 norm=379213.4372
norm it n=43 norm=379711.7074
norm it n=44 norm=380167.6622
norm it n=45 norm=380584.7923
norm it n=46 norm=380966.3606
norm it n=47 norm=381315.4016
norm it n=48 norm=381634.7265
norm it n=49 norm=381926.9295
norm it n=50 norm=382194.3978
norm it n=51 norm=382439.3219
norm it n=52 norm=382663.7075
norm it n=53 norm=382869.3877
norm it n=54 norm=383058.035
norm it n=55 norm=383231.1734
norm it n=56 norm=383390.1903
norm it n=57 norm=383536.3472
norm it n=58 norm=383670.7906
norm it n=59 norm=383794.5621
norm it n=60 norm=383908.6072
norm it n=61 norm=384013.7842
norm it n=62 norm=384110.8722
norm it n=63 norm=384200.5782
norm it n=64 norm=384283.544
norm it n=65 norm=384360.352
norm it n=66 norm=384431.5311
norm it n=67 norm=384497.5617
norm it n=68 norm=384558.88
norm it n=69 norm=384615.8827
norm it n=70 norm=384668.9302
norm it n=71 norm=384718.3504
norm it n=72 norm=384764.4419
norm it n=73 norm=384807.4764
norm it n=74 norm=384847.7013
norm it n=75 norm=384885.3424
norm it n=76 norm=384920.6054
norm it n=77 norm=384953.6782
norm it n=78 norm=384984.7322
norm it n=79 norm=385013.9242
norm it n=80 norm=385041.3974
norm it n=81 norm=385067.2829
norm it n=82 norm=385091.7008
norm it n=83 norm=385114.7609
norm it n=84 norm=385136.564
norm it n=85 norm=385157.2026
norm it n=86 norm=385176.7615
norm it n=87 norm=385195.3186
norm it n=88 norm=385212.9454
norm it n=89 norm=385229.708
norm it n=90 norm=385245.6668
norm it n=91 norm=385260.8777
norm it n=92 norm=385275.392
norm it n=93 norm=385289.2572
norm it n=94 norm=385302.5169
norm it n=95 norm=385315.2115
norm it n=96 norm=385327.3783
norm it n=97 norm=385339.0517
norm it n=98 norm=385350.2636
norm it n=99 norm=385361.0434
norm it n=100 norm=385371.4183
norm it n=101 norm=385381.4137
norm it n=102 norm=385391.053
norm it n=103 norm=385400.3577
norm it n=104 norm=385409.3482
norm it n=105 norm=385418.0431
norm it n=106 norm=385426.4596
norm it n=107 norm=385434.6141
norm it n=108 norm=385442.5214
norm it n=109 norm=385450.1954
norm it n=110 norm=385457.6493
norm it n=111 norm=385464.895
norm it n=112 norm=385471.9439
norm it n=113 norm=385478.8063
norm it n=114 norm=385485.4921
norm it n=115 norm=385492.0105
norm it n=116 norm=385498.3698
norm it n=117 norm=385504.5782
norm it n=118 norm=385510.643
norm it n=119 norm=385516.5711
norm it n=120 norm=385522.369
norm it n=121 norm=385528.0429
norm it n=122 norm=385533.5984
norm it n=123 norm=385539.0408
norm it n=124 norm=385544.3751
norm it n=125 norm=385549.606
norm it n=126 norm=385554.7379
norm it n=127 norm=385559.7749
norm it n=128 norm=385564.7209
norm it n=129 norm=385569.5794
norm it n=130 norm=385574.3539
norm it n=131 norm=385579.0476
norm it n=132 norm=385583.6635
norm it n=133 norm=385588.2045
norm it n=134 norm=385592.6732
norm it n=135 norm=385597.072
norm it n=136 norm=385601.4035
norm it n=137 norm=385605.6698
norm it n=138 norm=385609.8731
norm it n=139 norm=385614.0153
norm it n=140 norm=385618.0983
norm it n=141 norm=385622.1239
norm it n=142 norm=385626.0938
norm it n=143 norm=385630.0095
norm it n=144 norm=385633.8726
norm it n=145 norm=385637.6845
norm it n=146 norm=385641.4466
norm it n=147 norm=385645.1602
norm it n=148 norm=385648.8263
norm it n=149 norm=385652.4464
norm it n=150 norm=385656.0213
norm it n=151 norm=385659.5522
norm it n=152 norm=385663.0401
norm it n=153 norm=385666.4859
norm it n=154 norm=385669.8905
norm it n=155 norm=385673.2548
norm it n=156 norm=385676.5797
norm it n=157 norm=385679.8658
norm it n=158 norm=385683.1141
norm it n=159 norm=385686.3251
norm it n=160 norm=385689.4995
norm it n=161 norm=385692.6381
norm it n=162 norm=385695.7415
norm it n=163 norm=385698.8103
norm it n=164 norm=385701.8451
norm it n=165 norm=385704.8464
norm it n=166 norm=385707.8147
norm it n=167 norm=385710.7507
norm it n=168 norm=385713.6548
norm it n=169 norm=385716.5274
norm it n=170 norm=385719.3692
norm it n=171 norm=385722.1804
norm it n=172 norm=385724.9616
norm it n=173 norm=385727.7132
norm it n=174 norm=385730.4356
norm it n=175 norm=385733.1291
norm it n=176 norm=385735.7942
norm it n=177 norm=385738.4313
norm it n=178 norm=385741.0407
norm it n=179 norm=385743.6228
norm it n=180 norm=385746.1779
norm it n=181 norm=385748.7063
norm it n=182 norm=385751.2084
norm it n=183 norm=385753.6845
norm it n=184 norm=385756.1349
norm it n=185 norm=385758.5599
norm it n=186 norm=385760.9598
norm it n=187 norm=385763.3349
norm it n=188 norm=385765.6855
norm it n=189 norm=385768.0118
norm it n=190 norm=385770.3142
norm it n=191 norm=385772.5929
norm it n=192 norm=385774.8481
norm it n=193 norm=385777.0801
norm it n=194 norm=385779.2892
norm it n=195 norm=385781.4756
norm it n=196 norm=385783.6396
norm it n=197 norm=385785.7814
norm it n=198 norm=385787.9011
norm it n=199 norm=385789.9992
norm it n=200 norm=385792.0757
 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  WARNING: Change DWT Extension Mode  !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                        
****************************************
**  DWT Extension Mode: Zero Padding  **
****************************************
                                        
                                        
****************************************
**  DWT Extension Mode: Zero Padding  **
****************************************
                                        
norm it n=2 norm=1
norm it n=3 norm=1
-----------------------------------------
HyperSARA - spmd
-----------------------------------------
Starting parallel pool (parpool) using the 'local' profile ...
connected to 4 workers.
                                        
****************************************
**  DWT Extension Mode: Zero Padding  **
****************************************
                                        
xsol NOT uploaded 

Iter = 1, Time = 3.203203e+00
Iter = 2, Time = 2.626696e+00
Iter = 3, Time = 2.620852e+00
Iter = 4, Time = 2.676279e+00
Iter = 5, Time = 2.763285e+00
Iter = 6, Time = 2.558662e+00
Iter = 7, Time = 2.639422e+00
Iter = 8, Time = 2.571204e+00
Iter = 9, Time = 2.513752e+00
Iter = 10, Time = 2.615138e+00
Iter = 11, Time = 2.683609e+00
Iter = 12, Time = 2.589677e+00
Iter = 13, Time = 2.540797e+00
Iter = 14, Time = 2.684581e+00
Iter = 15, Time = 2.632528e+00
Iter = 16, Time = 2.504584e+00
Iter = 17, Time = 2.623669e+00
Iter = 18, Time = 2.761144e+00
Iter = 19, Time = 2.568278e+00
Iter = 20, Time = 2.551472e+00
Iter = 21, Time = 2.620655e+00
Iter = 22, Time = 2.647716e+00
Iter = 23, Time = 2.609350e+00
Iter = 24, Time = 2.622237e+00
Iter = 25, Time = 2.676434e+00
Iter = 26, Time = 2.521984e+00
Iter = 27, Time = 2.787357e+00
Iter = 28, Time = 2.646503e+00
Iter = 29, Time = 2.614872e+00
Iter = 30, Time = 2.873129e+00
Iter = 31, Time = 2.606743e+00
Iter = 32, Time = 2.661571e+00
Iter = 33, Time = 2.615155e+00
Iter = 34, Time = 2.683867e+00
Iter = 35, Time = 2.636314e+00
Iter = 36, Time = 2.562412e+00
Iter = 37, Time = 2.502624e+00
Iter = 38, Time = 2.502552e+00
Iter = 39, Time = 2.627339e+00
Iter = 40, Time = 2.590905e+00
Iter = 41, Time = 2.536679e+00
Iter = 42, Time = 2.547736e+00
Iter = 43, Time = 2.732608e+00
Iter = 44, Time = 2.599767e+00
Iter = 45, Time = 2.542416e+00
Iter = 46, Time = 2.538359e+00
Iter = 47, Time = 2.663648e+00
Iter = 48, Time = 2.535818e+00
Iter = 49, Time = 2.672012e+00
Iter = 50, Time = 2.592114e+00
Iter = 51, Time = 2.623594e+00
Iter = 52, Time = 2.637911e+00
Iter = 53, Time = 2.650131e+00
Iter = 54, Time = 2.573475e+00
Iter = 55, Time = 2.627262e+00
Iter = 56, Time = 2.552725e+00
Iter = 57, Time = 2.669663e+00
Iter = 58, Time = 2.692145e+00
Iter = 59, Time = 2.566800e+00
Iter = 60, Time = 2.561588e+00
Iter = 61, Time = 2.592514e+00
Iter = 62, Time = 2.603439e+00
Iter = 63, Time = 2.617154e+00
Iter = 64, Time = 2.583085e+00
Iter = 65, Time = 2.636475e+00
Iter = 66, Time = 2.613063e+00
Iter = 67, Time = 2.605891e+00
Iter = 68, Time = 2.661672e+00
Iter = 69, Time = 2.624205e+00
Iter = 70, Time = 2.604633e+00
Iter = 71, Time = 2.646380e+00
Iter = 72, Time = 2.696834e+00
Iter = 73, Time = 2.628237e+00
Iter = 74, Time = 2.573692e+00
Iter = 75, Time = 2.674745e+00
Iter = 76, Time = 2.504405e+00
Iter = 77, Time = 2.524578e+00
Iter = 78, Time = 2.576970e+00
Iter = 79, Time = 2.695384e+00
Iter = 80, Time = 2.601987e+00
Iter = 81, Time = 2.818767e+00
Iter = 82, Time = 2.642491e+00
Iter = 83, Time = 2.575959e+00
Iter = 84, Time = 2.592597e+00
Iter = 85, Time = 2.616759e+00
Iter = 86, Time = 2.648061e+00
Iter = 87, Time = 2.729308e+00
Iter = 88, Time = 2.637471e+00
Iter = 89, Time = 2.638436e+00
Iter = 90, Time = 2.771459e+00
Iter = 91, Time = 2.605474e+00
Iter = 92, Time = 2.639626e+00
Iter = 93, Time = 2.591325e+00
Iter = 94, Time = 2.627682e+00
Iter = 95, Time = 2.628904e+00
Iter = 96, Time = 2.541993e+00
Iter = 97, Time = 2.722172e+00
Iter = 98, Time = 2.648302e+00
Iter = 99, Time = 2.626185e+00
Iter = 100, Time = 2.801322e+00
Iter 100
N-norm = 9.758683e+02, L21-norm = 4.531128e+04, rel_fval = 3.690294e-04
 epsilon = 4.107459e+03, residual = 3.651405e+03
 SNR = 2.267817e+01, aSNR = 2.070116e+01

Iter = 101, Time = 2.647764e+00
Iter = 102, Time = 2.606598e+00
Iter = 103, Time = 2.705202e+00
Iter = 104, Time = 2.752532e+00
Iter = 105, Time = 2.578292e+00
Iter = 106, Time = 2.662328e+00
Iter = 107, Time = 2.603869e+00
Iter = 108, Time = 2.604611e+00
Iter = 109, Time = 2.814742e+00
Iter = 110, Time = 2.656608e+00
Iter = 111, Time = 2.541067e+00
Iter = 112, Time = 2.664945e+00
Iter = 113, Time = 2.721811e+00
Iter = 114, Time = 2.626306e+00
Iter = 115, Time = 2.736297e+00
Iter = 116, Time = 2.668659e+00
Iter = 117, Time = 2.590654e+00
Iter = 118, Time = 2.723345e+00
Iter = 119, Time = 2.733433e+00
Iter = 120, Time = 2.569356e+00
Iter = 121, Time = 2.702594e+00
Iter = 122, Time = 2.701308e+00
Iter = 123, Time = 2.637293e+00
Iter = 124, Time = 2.622934e+00
Iter = 125, Time = 2.624384e+00
Iter = 126, Time = 2.632826e+00
Iter = 127, Time = 2.631885e+00
Iter = 128, Time = 2.677414e+00
Iter = 129, Time = 2.669743e+00
Iter = 130, Time = 2.579382e+00
Iter = 131, Time = 2.608468e+00
Iter = 132, Time = 2.663701e+00
Iter = 133, Time = 2.612990e+00
Iter = 134, Time = 2.577276e+00
Iter = 135, Time = 2.713799e+00
Iter = 136, Time = 2.623254e+00
Iter = 137, Time = 2.634514e+00
Iter = 138, Time = 2.644858e+00
Iter = 139, Time = 2.567541e+00
Iter = 140, Time = 2.600457e+00
Iter = 141, Time = 2.646779e+00
Iter = 142, Time = 2.775113e+00
Iter = 143, Time = 2.652256e+00
Iter = 144, Time = 2.624691e+00
Iter = 145, Time = 2.580845e+00
Iter = 146, Time = 2.630289e+00
Iter = 147, Time = 2.699097e+00
Iter = 148, Time = 2.739173e+00
Iter = 149, Time = 2.767865e+00
Iter = 150, Time = 2.838130e+00
Iter = 151, Time = 2.768260e+00
Iter = 152, Time = 2.586101e+00
Iter = 153, Time = 2.596420e+00
Iter = 154, Time = 2.663552e+00
Iter = 155, Time = 2.668816e+00
Iter = 156, Time = 2.704504e+00
Iter = 157, Time = 2.680038e+00
Iter = 158, Time = 2.600444e+00
Iter = 159, Time = 2.667598e+00
Iter = 160, Time = 2.791186e+00
Iter = 161, Time = 2.669982e+00
Iter = 162, Time = 2.626410e+00
Iter = 163, Time = 2.764509e+00
Iter = 164, Time = 2.579170e+00
Iter = 165, Time = 2.623440e+00
Iter = 166, Time = 2.646348e+00
Iter = 167, Time = 2.640237e+00
Iter = 168, Time = 2.738377e+00
Iter = 169, Time = 2.732476e+00
Iter = 170, Time = 2.690951e+00
Iter = 171, Time = 2.790702e+00
Iter = 172, Time = 2.686749e+00
Iter = 173, Time = 2.601413e+00
Iter = 174, Time = 2.669145e+00
Iter = 175, Time = 2.591194e+00
Iter = 176, Time = 2.641204e+00
Iter = 177, Time = 2.571794e+00
Iter = 178, Time = 2.680116e+00
Iter = 179, Time = 2.593837e+00
Iter = 180, Time = 2.548664e+00
Iter = 181, Time = 2.595222e+00
Iter = 182, Time = 2.648416e+00
Iter = 183, Time = 2.611641e+00
Iter = 184, Time = 2.588861e+00
Iter = 185, Time = 2.601784e+00
Iter = 186, Time = 2.602471e+00
Iter = 187, Time = 2.674013e+00
Iter = 188, Time = 2.693761e+00
Iter = 189, Time = 2.683709e+00
Iter = 190, Time = 2.606761e+00
Iter = 191, Time = 2.714540e+00
Iter = 192, Time = 2.648488e+00
Iter = 193, Time = 2.605009e+00
Iter = 194, Time = 2.624437e+00
Iter = 195, Time = 2.566733e+00
Iter = 196, Time = 2.577510e+00
Iter = 197, Time = 2.758603e+00
Iter = 198, Time = 2.564985e+00
Iter = 199, Time = 2.559985e+00
Iter = 200, Time = 2.603853e+00
Iter 200
N-norm = 9.722858e+02, L21-norm = 4.524273e+04, rel_fval = 1.564404e-04
 epsilon = 4.107459e+03, residual = 3.890739e+03
 SNR = 2.166405e+01, aSNR = 1.976565e+01

Iter = 201, Time = 2.693395e+00
Iter = 202, Time = 2.604161e+00
Iter = 203, Time = 2.590982e+00
Iter = 204, Time = 2.599061e+00
Iter = 205, Time = 2.641405e+00
Iter = 206, Time = 2.526371e+00
Iter = 207, Time = 2.619272e+00
Iter = 208, Time = 2.624748e+00
Iter = 209, Time = 2.709650e+00
Iter = 210, Time = 2.517331e+00
Iter = 211, Time = 2.570101e+00
Iter = 212, Time = 2.556849e+00
Iter = 213, Time = 2.577641e+00
Iter = 214, Time = 2.573167e+00
Iter = 215, Time = 2.544711e+00
Iter = 216, Time = 2.570251e+00
Iter = 217, Time = 2.650929e+00
Iter = 218, Time = 2.556266e+00
Iter = 219, Time = 2.709394e+00
Iter = 220, Time = 2.706610e+00
Iter = 221, Time = 2.584262e+00
Iter = 222, Time = 2.593364e+00
Iter = 223, Time = 2.761521e+00
Iter = 224, Time = 2.488286e+00
Iter = 225, Time = 2.677313e+00
Iter = 226, Time = 2.633540e+00
Iter = 227, Time = 2.614688e+00
Iter = 228, Time = 2.519395e+00
Iter = 229, Time = 2.689794e+00
Iter = 230, Time = 2.636488e+00
Iter = 231, Time = 2.589692e+00
Iter = 232, Time = 2.666040e+00
Iter = 233, Time = 2.488538e+00
Iter = 234, Time = 2.533005e+00
Iter = 235, Time = 2.664592e+00
Iter = 236, Time = 2.747069e+00
Iter = 237, Time = 2.678877e+00
Iter = 238, Time = 2.704410e+00
Iter = 239, Time = 2.588003e+00
Iter = 240, Time = 2.675274e+00
Iter = 241, Time = 2.569650e+00
Iter = 242, Time = 2.533029e+00
Iter = 243, Time = 2.577964e+00
Iter = 244, Time = 2.527090e+00
Iter = 245, Time = 2.698252e+00
Iter = 246, Time = 2.552398e+00
Iter = 247, Time = 2.613790e+00
Iter = 248, Time = 2.579906e+00
Iter = 249, Time = 2.589085e+00
Iter = 250, Time = 2.595712e+00
Iter = 251, Time = 2.595451e+00
Iter = 252, Time = 2.713067e+00
Iter = 253, Time = 2.734102e+00
Iter = 254, Time = 2.590069e+00
Iter = 255, Time = 2.582444e+00
Iter = 256, Time = 2.638742e+00
Iter = 257, Time = 2.531174e+00
Iter = 258, Time = 2.502195e+00
Iter = 259, Time = 2.557547e+00
Iter = 260, Time = 2.554497e+00
Iter = 261, Time = 2.595980e+00
Iter = 262, Time = 2.451704e+00
Iter = 263, Time = 2.610803e+00
Iter = 264, Time = 2.658729e+00
Iter = 265, Time = 2.605356e+00
Iter = 266, Time = 2.491578e+00
Iter = 267, Time = 2.606903e+00
Iter = 268, Time = 2.591354e+00
Iter = 269, Time = 2.522352e+00
Iter = 270, Time = 2.497096e+00
Iter = 271, Time = 2.505879e+00
Iter = 272, Time = 2.540447e+00
Iter = 273, Time = 2.607748e+00
Iter = 274, Time = 2.560946e+00
Iter = 275, Time = 2.505251e+00
Iter = 276, Time = 2.607980e+00
Iter = 277, Time = 2.684729e+00
Iter = 278, Time = 2.563623e+00
Iter = 279, Time = 2.730639e+00
Iter = 280, Time = 2.613741e+00
Iter = 281, Time = 2.598890e+00
Iter = 282, Time = 2.660901e+00
Iter = 283, Time = 2.543032e+00
Iter = 284, Time = 2.519270e+00
Iter = 285, Time = 2.590843e+00
Iter = 286, Time = 2.571057e+00
Iter = 287, Time = 2.632406e+00
Iter = 288, Time = 2.838776e+00
Iter = 289, Time = 2.611741e+00
Iter = 290, Time = 2.528770e+00
Iter = 291, Time = 2.636352e+00
Iter = 292, Time = 2.696132e+00
Iter = 293, Time = 2.618360e+00
Iter = 294, Time = 2.558246e+00
Iter = 295, Time = 2.666186e+00
Iter = 296, Time = 2.488140e+00
Iter = 297, Time = 2.677031e+00
Iter = 298, Time = 2.519119e+00
Iter = 299, Time = 2.667078e+00
Iter = 300, Time = 2.582821e+00
Iter 300
N-norm = 9.707015e+02, L21-norm = 4.527707e+04, rel_fval = 1.155281e-04
 epsilon = 4.107459e+03, residual = 4.028461e+03
 SNR = 2.078825e+01, aSNR = 1.900699e+01

Iter = 301, Time = 2.645226e+00
Iter = 302, Time = 2.622173e+00
Iter = 303, Time = 2.613260e+00
Iter = 304, Time = 2.596379e+00
Iter = 305, Time = 2.730987e+00
Iter = 306, Time = 2.648754e+00
Iter = 307, Time = 2.524005e+00
Iter = 308, Time = 2.534653e+00
Iter = 309, Time = 2.523046e+00
Iter = 310, Time = 2.627052e+00
Iter = 311, Time = 2.688877e+00
Iter = 312, Time = 2.750696e+00
Iter = 313, Time = 2.591431e+00
Iter = 314, Time = 2.473122e+00
Iter = 315, Time = 2.480320e+00
Iter = 316, Time = 2.706056e+00
Iter = 317, Time = 2.461841e+00
Iter = 318, Time = 2.686035e+00
Iter = 319, Time = 2.653383e+00
Iter = 320, Time = 2.645749e+00
Iter = 321, Time = 2.544819e+00
Iter = 322, Time = 2.560111e+00
Iter = 323, Time = 2.592947e+00
Iter = 324, Time = 2.615521e+00
Iter = 325, Time = 2.659569e+00
Iter = 326, Time = 2.616137e+00
Iter = 327, Time = 2.530641e+00
Iter = 328, Time = 2.517073e+00
Iter = 329, Time = 2.622562e+00
Iter = 330, Time = 2.548254e+00
Iter = 331, Time = 2.709578e+00
Iter = 332, Time = 2.522343e+00
Iter = 333, Time = 2.578265e+00
Iter = 334, Time = 2.581679e+00
Iter = 335, Time = 2.439116e+00
Iter = 336, Time = 2.651788e+00
Reweighting: 0

Iter = 337, Time = 2.793621e+00
Iter = 338, Time = 2.712067e+00
Iter = 339, Time = 2.726521e+00
Iter = 340, Time = 2.772653e+00
Iter = 341, Time = 2.733152e+00
Iter = 342, Time = 2.770183e+00
Iter = 343, Time = 2.690106e+00
Iter = 344, Time = 2.895034e+00
Iter = 345, Time = 2.767073e+00
Iter = 346, Time = 2.823190e+00
Iter = 347, Time = 2.764693e+00
Iter = 348, Time = 2.813600e+00
Iter = 349, Time = 2.827193e+00
Iter = 350, Time = 2.772833e+00
Iter = 351, Time = 2.950065e+00
Iter = 352, Time = 2.829243e+00
Iter = 353, Time = 2.906454e+00
Iter = 354, Time = 2.783605e+00
Iter = 355, Time = 2.802184e+00
Iter = 356, Time = 2.740782e+00
Iter = 357, Time = 2.737492e+00
Iter = 358, Time = 2.791248e+00
Iter = 359, Time = 2.805469e+00
Iter = 360, Time = 2.750640e+00
Iter = 361, Time = 2.790074e+00
Iter = 362, Time = 2.805912e+00
Iter = 363, Time = 2.915165e+00
Iter = 364, Time = 2.861550e+00
Iter = 365, Time = 2.812403e+00
Iter = 366, Time = 2.947779e+00
Iter = 367, Time = 2.772519e+00
Iter = 368, Time = 2.783383e+00
Iter = 369, Time = 2.763040e+00
Iter = 370, Time = 2.847791e+00
Iter = 371, Time = 2.775770e+00
Iter = 372, Time = 2.799268e+00
Iter = 373, Time = 2.853832e+00
Iter = 374, Time = 2.763426e+00
Iter = 375, Time = 2.913851e+00
Iter = 376, Time = 2.748473e+00
Iter = 377, Time = 2.957536e+00
Iter = 378, Time = 3.041661e+00
Iter = 379, Time = 2.811487e+00
Iter = 380, Time = 2.844747e+00
Iter = 381, Time = 2.915133e+00
Iter = 382, Time = 2.872396e+00
Iter = 383, Time = 2.863623e+00
Iter = 384, Time = 2.880180e+00
Iter = 385, Time = 2.833355e+00
Iter = 386, Time = 2.823812e+00
Iter = 387, Time = 2.834333e+00
Iter = 388, Time = 2.896800e+00
Iter = 389, Time = 2.806178e+00
Iter = 390, Time = 2.886774e+00
Iter = 391, Time = 2.797052e+00
Iter = 392, Time = 2.898483e+00
Iter = 393, Time = 2.844813e+00
Iter = 394, Time = 2.933249e+00
Iter = 395, Time = 2.779491e+00
Iter = 396, Time = 2.946312e+00
Iter = 397, Time = 2.858201e+00
Iter = 398, Time = 2.891763e+00
Iter = 399, Time = 2.796722e+00
Iter = 400, Time = 2.825181e+00
Iter 400
N-norm = 9.729619e+02, L21-norm = 4.544479e+04, rel_fval = 1.006691e-04
 epsilon = 4.107459e+03, residual = 3.961332e+03
 SNR = 2.086917e+01, aSNR = 1.914066e+01

Iter = 401, Time = 2.799677e+00
Iter = 402, Time = 2.819453e+00
Iter = 403, Time = 2.934872e+00
Iter = 404, Time = 2.761863e+00
Iter = 405, Time = 2.915782e+00
Iter = 406, Time = 2.775964e+00
Iter = 407, Time = 2.865165e+00
Iter = 408, Time = 2.887499e+00
Iter = 409, Time = 2.992000e+00
Iter = 410, Time = 2.797010e+00
Iter = 411, Time = 2.893120e+00
Iter = 412, Time = 2.826537e+00
Iter = 413, Time = 2.844969e+00
Iter = 414, Time = 2.891272e+00
Iter = 415, Time = 2.911204e+00
Iter = 416, Time = 2.823964e+00
Iter = 417, Time = 2.955981e+00
Iter = 418, Time = 3.059537e+00
Iter = 419, Time = 2.905935e+00
Iter = 420, Time = 2.797723e+00
Iter = 421, Time = 2.844024e+00
Iter = 422, Time = 3.020211e+00
Iter = 423, Time = 2.935776e+00
Iter = 424, Time = 2.789432e+00
Iter = 425, Time = 2.776576e+00
Iter = 426, Time = 2.820498e+00
Iter = 427, Time = 2.941763e+00
Iter = 428, Time = 2.688135e+00
Iter = 429, Time = 2.877845e+00
Iter = 430, Time = 2.763817e+00
Iter = 431, Time = 2.747528e+00
Iter = 432, Time = 2.771731e+00
Iter = 433, Time = 2.777088e+00
Iter = 434, Time = 2.761214e+00
Iter = 435, Time = 2.796544e+00
Iter = 436, Time = 2.870973e+00
Iter = 437, Time = 2.854146e+00
Iter = 438, Time = 2.784295e+00
Iter = 439, Time = 2.751632e+00
Iter = 440, Time = 2.846859e+00
Iter = 441, Time = 2.806750e+00
Iter = 442, Time = 2.790203e+00
Iter = 443, Time = 2.796452e+00
Iter = 444, Time = 2.803934e+00
Iter = 445, Time = 2.729256e+00
Iter = 446, Time = 2.747094e+00
Iter = 447, Time = 2.907046e+00
Iter = 448, Time = 2.840421e+00
Iter = 449, Time = 2.849565e+00
Iter = 450, Time = 2.805780e+00
Iter = 451, Time = 2.795131e+00
Iter = 452, Time = 2.828791e+00
Iter = 453, Time = 2.841138e+00
Iter = 454, Time = 2.859364e+00
Iter = 455, Time = 2.904761e+00
Iter = 456, Time = 2.843245e+00
Iter = 457, Time = 2.975711e+00
Iter = 458, Time = 2.990236e+00
Iter = 459, Time = 3.088506e+00
Iter = 460, Time = 2.974160e+00
Iter = 461, Time = 2.772630e+00
Iter = 462, Time = 2.955198e+00
Iter = 463, Time = 3.027504e+00
Iter = 464, Time = 3.099280e+00
Iter = 465, Time = 2.891370e+00
Iter = 466, Time = 2.904236e+00
Iter = 467, Time = 2.750583e+00
Iter = 468, Time = 2.889155e+00
Iter = 469, Time = 2.826644e+00
Iter = 470, Time = 2.798545e+00
Iter = 471, Time = 2.699330e+00
Iter = 472, Time = 2.795101e+00
Iter = 473, Time = 2.854542e+00
Iter = 474, Time = 2.903163e+00
Iter = 475, Time = 2.861877e+00
Iter = 476, Time = 2.826767e+00
Iter = 477, Time = 2.883271e+00
Iter = 478, Time = 2.901156e+00
Iter = 479, Time = 2.819983e+00
Iter = 480, Time = 2.959853e+00
Iter = 481, Time = 2.811950e+00
Iter = 482, Time = 2.865252e+00
Iter = 483, Time = 2.813343e+00
Iter = 484, Time = 2.804603e+00
Iter = 485, Time = 2.977994e+00
Iter = 486, Time = 2.802889e+00
Iter = 487, Time = 2.854438e+00
Iter = 488, Time = 2.764672e+00
Iter = 489, Time = 2.892018e+00
Iter = 490, Time = 2.897895e+00
Iter = 491, Time = 2.849290e+00
Iter = 492, Time = 2.867262e+00
Iter = 493, Time = 2.908289e+00
Iter = 494, Time = 2.794909e+00
Iter = 495, Time = 2.801521e+00
Iter = 496, Time = 2.955351e+00
Iter = 497, Time = 2.865896e+00
Iter = 498, Time = 2.888270e+00
Iter = 499, Time = 2.767561e+00
Iter = 500, Time = 2.922424e+00
Iter 500
N-norm = 9.724684e+02, L21-norm = 4.544348e+04, rel_fval = 4.171750e-05
 epsilon = 4.107459e+03, residual = 4.100832e+03
 SNR = 2.085551e+01, aSNR = 1.911851e+01

Iter = 501, Time = 2.703965e+00
Iter = 502, Time = 2.797399e+00
Iter = 503, Time = 2.702771e+00
Iter = 504, Time = 2.924029e+00
Iter = 505, Time = 2.761529e+00
Iter = 506, Time = 2.856749e+00
Iter = 507, Time = 2.882395e+00
Iter = 508, Time = 2.932760e+00
Iter = 509, Time = 2.830775e+00
Iter = 510, Time = 2.798660e+00
Iter = 511, Time = 2.821103e+00
Iter = 512, Time = 2.921625e+00
Iter = 513, Time = 2.813611e+00
Iter = 514, Time = 2.796732e+00
Iter = 515, Time = 2.847400e+00
Iter = 516, Time = 2.769897e+00
Iter = 517, Time = 2.827741e+00
Iter = 518, Time = 2.780284e+00
Iter = 519, Time = 2.891444e+00
Iter = 520, Time = 2.899772e+00
Iter = 521, Time = 2.783602e+00
Iter = 522, Time = 2.739117e+00
Iter = 523, Time = 2.763464e+00
Iter = 524, Time = 2.692642e+00
Iter = 525, Time = 2.692556e+00
Iter = 526, Time = 2.798311e+00
Iter = 527, Time = 2.736908e+00
Iter = 528, Time = 2.861047e+00
Iter = 529, Time = 2.879638e+00
Iter = 530, Time = 2.820094e+00
Iter = 531, Time = 2.694389e+00
Iter = 532, Time = 2.905376e+00
Iter = 533, Time = 2.822471e+00
Iter = 534, Time = 2.814362e+00
Iter = 535, Time = 2.716629e+00
Iter = 536, Time = 2.856924e+00
Iter = 537, Time = 2.849097e+00
Iter = 538, Time = 2.748165e+00
Iter = 539, Time = 2.778917e+00
Iter = 540, Time = 2.851868e+00
Iter = 541, Time = 2.834704e+00
Iter = 542, Time = 2.817599e+00
Iter = 543, Time = 2.788494e+00
Iter = 544, Time = 2.834052e+00
Iter = 545, Time = 2.734464e+00
Iter = 546, Time = 2.748469e+00
Iter = 547, Time = 2.860738e+00
Iter = 548, Time = 2.769820e+00
Iter = 549, Time = 2.846480e+00
Iter = 550, Time = 2.818314e+00
Iter = 551, Time = 2.795240e+00
Iter = 552, Time = 2.744105e+00
Iter = 553, Time = 2.839148e+00
Iter = 554, Time = 2.802995e+00
Iter = 555, Time = 2.672002e+00
Iter = 556, Time = 2.757147e+00
Iter = 557, Time = 2.636663e+00
Iter = 558, Time = 2.701204e+00
Iter = 559, Time = 2.691987e+00
Iter = 560, Time = 2.822405e+00
Iter = 561, Time = 2.694576e+00
Iter = 562, Time = 2.681083e+00
Iter = 563, Time = 2.664043e+00
Iter = 564, Time = 2.722403e+00
Iter = 565, Time = 2.756722e+00
Iter = 566, Time = 2.668257e+00
Iter = 567, Time = 2.772192e+00
Iter = 568, Time = 2.687738e+00
Iter = 569, Time = 2.703518e+00
Iter = 570, Time = 2.763454e+00
Iter = 571, Time = 2.661318e+00
Iter = 572, Time = 2.744933e+00
Iter = 573, Time = 2.748142e+00
Iter = 574, Time = 2.795258e+00
Iter = 575, Time = 2.600090e+00
Iter = 576, Time = 2.623721e+00
Iter = 577, Time = 2.737987e+00
Iter = 578, Time = 2.757511e+00
Iter = 579, Time = 2.762769e+00
Iter = 580, Time = 2.584056e+00
Iter = 581, Time = 2.657078e+00
Iter = 582, Time = 2.804829e+00
Iter = 583, Time = 2.637376e+00
Iter = 584, Time = 2.800469e+00
Iter = 585, Time = 2.777777e+00
Iter = 586, Time = 2.628270e+00
Iter = 587, Time = 2.708247e+00
Iter = 588, Time = 2.666109e+00
Iter = 589, Time = 2.545515e+00
Iter = 590, Time = 2.699350e+00
Iter = 591, Time = 2.573429e+00
Iter = 592, Time = 2.889607e+00
Iter = 593, Time = 2.717215e+00
Iter = 594, Time = 2.665747e+00
Iter = 595, Time = 2.602135e+00
Iter = 596, Time = 2.817500e+00
Iter = 597, Time = 2.671513e+00
Iter = 598, Time = 2.667398e+00
Iter = 599, Time = 2.641962e+00
Iter = 600, Time = 2.707790e+00
Iter 600
N-norm = 9.725652e+02, L21-norm = 4.551071e+04, rel_fval = 3.234680e-05
 epsilon = 4.107459e+03, residual = 4.106867e+03
 SNR = 2.081096e+01, aSNR = 1.908641e+01

Iter = 601, Time = 2.676509e+00
Iter = 602, Time = 2.608090e+00
Iter = 603, Time = 2.631290e+00
Iter = 604, Time = 2.626683e+00
Iter = 605, Time = 2.727361e+00
Iter = 606, Time = 2.692736e+00
Iter = 607, Time = 2.557794e+00
Iter = 608, Time = 2.572125e+00
Iter = 609, Time = 2.764318e+00
Iter = 610, Time = 2.704170e+00
Iter = 611, Time = 2.589919e+00
Iter = 612, Time = 2.745497e+00
Iter = 613, Time = 2.662342e+00
Iter = 614, Time = 2.584852e+00
Iter = 615, Time = 2.614516e+00
Iter = 616, Time = 2.637368e+00
Iter = 617, Time = 2.733171e+00
Iter = 618, Time = 2.722737e+00
Iter = 619, Time = 2.656705e+00
Iter = 620, Time = 2.623603e+00
Iter = 621, Time = 2.791895e+00
Iter = 622, Time = 2.820556e+00
Iter = 623, Time = 2.741164e+00
Iter = 624, Time = 2.775842e+00
Iter = 625, Time = 2.761331e+00
Iter = 626, Time = 2.783593e+00
Iter = 627, Time = 2.708227e+00
Iter = 628, Time = 2.743189e+00
Iter = 629, Time = 2.816081e+00
Iter = 630, Time = 2.882191e+00
Iter = 631, Time = 2.737075e+00
Iter = 632, Time = 2.754229e+00
Iter = 633, Time = 2.842382e+00
Iter = 634, Time = 2.769586e+00
Iter = 635, Time = 2.740630e+00
Iter = 636, Time = 2.794016e+00
Reweighting: 1

Iter = 637, Time = 2.704050e+00
Iter = 638, Time = 2.806209e+00
Iter = 639, Time = 2.840981e+00
Iter = 640, Time = 2.841291e+00
Iter = 641, Time = 2.873884e+00
Iter = 642, Time = 2.934962e+00
Iter = 643, Time = 2.817495e+00
Iter = 644, Time = 2.834995e+00
Iter = 645, Time = 2.750755e+00
Iter = 646, Time = 2.889709e+00
Iter = 647, Time = 2.862965e+00
Iter = 648, Time = 2.890769e+00
Iter = 649, Time = 2.864050e+00
Iter = 650, Time = 2.777163e+00
Iter = 651, Time = 2.860028e+00
Iter = 652, Time = 2.852396e+00
Iter = 653, Time = 2.895918e+00
Iter = 654, Time = 2.861035e+00
Iter = 655, Time = 3.175228e+00
Iter = 656, Time = 2.764525e+00
Iter = 657, Time = 2.830403e+00
Iter = 658, Time = 2.759194e+00
Iter = 659, Time = 2.757649e+00
Iter = 660, Time = 2.766689e+00
Iter = 661, Time = 2.872045e+00
Iter = 662, Time = 2.713628e+00
Iter = 663, Time = 2.718664e+00
Iter = 664, Time = 2.774472e+00
Iter = 665, Time = 2.791841e+00
Iter = 666, Time = 2.805611e+00
Iter = 667, Time = 2.755298e+00
Iter = 668, Time = 2.824102e+00
Iter = 669, Time = 2.797062e+00
Iter = 670, Time = 2.676284e+00
Iter = 671, Time = 2.750982e+00
Iter = 672, Time = 2.850748e+00
Iter = 673, Time = 2.813254e+00
Iter = 674, Time = 2.770357e+00
Iter = 675, Time = 2.718024e+00
Iter = 676, Time = 2.698138e+00
Iter = 677, Time = 2.877478e+00
Iter = 678, Time = 2.747151e+00
Iter = 679, Time = 2.714145e+00
Iter = 680, Time = 2.801522e+00
Iter = 681, Time = 2.815089e+00
Iter = 682, Time = 2.746398e+00
Iter = 683, Time = 2.712999e+00
Iter = 684, Time = 2.831039e+00
Iter = 685, Time = 2.695627e+00
Iter = 686, Time = 2.953276e+00
Iter = 687, Time = 2.903597e+00
Iter = 688, Time = 2.973362e+00
Iter = 689, Time = 2.727502e+00
Iter = 690, Time = 2.722622e+00
Iter = 691, Time = 2.676341e+00
Iter = 692, Time = 2.761552e+00
Iter = 693, Time = 2.810282e+00
Iter = 694, Time = 2.740696e+00
Iter = 695, Time = 2.767482e+00
Iter = 696, Time = 2.767191e+00
Iter = 697, Time = 2.816855e+00
Iter = 698, Time = 2.833552e+00
Iter = 699, Time = 2.872261e+00
Iter = 700, Time = 2.665814e+00
Iter 700
N-norm = 9.727087e+02, L21-norm = 4.557359e+04, rel_fval = 3.140935e-05
 epsilon = 4.107459e+03, residual = 4.105876e+03
 SNR = 2.078140e+01, aSNR = 1.907810e+01

Iter = 701, Time = 2.743301e+00
Iter = 702, Time = 2.781790e+00
Iter = 703, Time = 2.756158e+00
Iter = 704, Time = 2.856103e+00
Iter = 705, Time = 2.725655e+00
Iter = 706, Time = 2.708334e+00
Iter = 707, Time = 2.758201e+00
Iter = 708, Time = 2.821779e+00
Iter = 709, Time = 2.801906e+00
Iter = 710, Time = 2.964482e+00
Iter = 711, Time = 2.881217e+00
Iter = 712, Time = 2.865330e+00
Iter = 713, Time = 2.855733e+00
Iter = 714, Time = 2.815326e+00
Iter = 715, Time = 2.880445e+00
Iter = 716, Time = 2.787761e+00
Iter = 717, Time = 2.837285e+00
Iter = 718, Time = 2.817404e+00
Iter = 719, Time = 2.836848e+00
Iter = 720, Time = 2.807506e+00
Iter = 721, Time = 2.718637e+00
Iter = 722, Time = 2.785964e+00
Iter = 723, Time = 2.747085e+00
Iter = 724, Time = 2.840302e+00
Iter = 725, Time = 2.776492e+00
Iter = 726, Time = 2.840637e+00
Iter = 727, Time = 2.777841e+00
Iter = 728, Time = 2.758348e+00
Iter = 729, Time = 2.818453e+00
Iter = 730, Time = 2.824733e+00
Iter = 731, Time = 2.816681e+00
Iter = 732, Time = 2.848646e+00
Iter = 733, Time = 2.839990e+00
Iter = 734, Time = 2.840396e+00
Iter = 735, Time = 2.773897e+00
Iter = 736, Time = 2.724434e+00
Iter = 737, Time = 2.751297e+00
Iter = 738, Time = 2.753733e+00
Iter = 739, Time = 2.770110e+00
Iter = 740, Time = 2.927978e+00
Iter = 741, Time = 2.737185e+00
Iter = 742, Time = 2.794550e+00
Iter = 743, Time = 2.725588e+00
Iter = 744, Time = 2.948515e+00
Iter = 745, Time = 2.794486e+00
Iter = 746, Time = 2.860839e+00
Iter = 747, Time = 2.828090e+00
Iter = 748, Time = 2.788668e+00
Iter = 749, Time = 2.753628e+00
Iter = 750, Time = 2.889616e+00
Iter = 751, Time = 2.832929e+00
Iter = 752, Time = 2.936219e+00
Iter = 753, Time = 2.754018e+00
Iter = 754, Time = 2.883986e+00
Iter = 755, Time = 2.711699e+00
Iter = 756, Time = 2.826754e+00
Iter = 757, Time = 2.917567e+00
Iter = 758, Time = 2.853233e+00
Iter = 759, Time = 2.721277e+00
Iter = 760, Time = 2.744783e+00
Iter = 761, Time = 2.731403e+00
Iter = 762, Time = 2.732569e+00
Iter = 763, Time = 2.815953e+00
Iter = 764, Time = 2.794470e+00
Iter = 765, Time = 2.906678e+00
Iter = 766, Time = 2.841236e+00
Iter = 767, Time = 2.806749e+00
Iter = 768, Time = 2.833370e+00
Iter = 769, Time = 2.760053e+00
Iter = 770, Time = 2.838589e+00
Iter = 771, Time = 2.789490e+00
Iter = 772, Time = 2.873344e+00
Iter = 773, Time = 2.755266e+00
Iter = 774, Time = 2.875111e+00
Iter = 775, Time = 2.814133e+00
Iter = 776, Time = 2.771638e+00
Iter = 777, Time = 2.841816e+00
Iter = 778, Time = 2.885382e+00
Iter = 779, Time = 2.799073e+00
Iter = 780, Time = 2.751838e+00
Iter = 781, Time = 2.831310e+00
Iter = 782, Time = 2.796311e+00
Iter = 783, Time = 2.886744e+00
Iter = 784, Time = 2.851771e+00
Iter = 785, Time = 2.794982e+00
Iter = 786, Time = 2.858191e+00
Iter = 787, Time = 2.721966e+00
Iter = 788, Time = 2.828843e+00
Iter = 789, Time = 2.773376e+00
Iter = 790, Time = 2.806349e+00
Iter = 791, Time = 2.767557e+00
Iter = 792, Time = 2.748309e+00
Iter = 793, Time = 2.806164e+00
Iter = 794, Time = 2.810726e+00
Iter = 795, Time = 2.770427e+00
Iter = 796, Time = 2.824485e+00
Iter = 797, Time = 2.816586e+00
Iter = 798, Time = 2.691564e+00
Iter = 799, Time = 2.734603e+00
Iter = 800, Time = 2.802243e+00
Iter 800
N-norm = 9.728424e+02, L21-norm = 4.561803e+04, rel_fval = 3.167029e-05
 epsilon = 4.107459e+03, residual = 4.107280e+03
 SNR = 2.074395e+01, aSNR = 1.905150e+01

Iter = 801, Time = 2.801605e+00
Iter = 802, Time = 2.811949e+00
Iter = 803, Time = 2.967722e+00
Iter = 804, Time = 2.798620e+00
Iter = 805, Time = 2.757322e+00
Iter = 806, Time = 2.837750e+00
Iter = 807, Time = 2.830455e+00
Iter = 808, Time = 2.822351e+00
Iter = 809, Time = 2.836241e+00
Iter = 810, Time = 2.763635e+00
Iter = 811, Time = 2.934562e+00
Iter = 812, Time = 2.753901e+00
Iter = 813, Time = 2.793530e+00
Iter = 814, Time = 2.773516e+00
Iter = 815, Time = 3.155888e+00
Iter = 816, Time = 2.793072e+00
Iter = 817, Time = 2.793861e+00
Iter = 818, Time = 2.843779e+00
Iter = 819, Time = 2.844445e+00
Iter = 820, Time = 2.813131e+00
Iter = 821, Time = 2.765709e+00
Iter = 822, Time = 2.815094e+00
Iter = 823, Time = 2.774768e+00
Iter = 824, Time = 2.808229e+00
Iter = 825, Time = 2.895410e+00
Iter = 826, Time = 2.805711e+00
Iter = 827, Time = 3.008562e+00
Iter = 828, Time = 2.845782e+00
Iter = 829, Time = 2.771807e+00
Iter = 830, Time = 2.813629e+00
Iter = 831, Time = 2.816096e+00
Iter = 832, Time = 2.786017e+00
Iter = 833, Time = 2.752778e+00
Iter = 834, Time = 2.872703e+00
Iter = 835, Time = 2.861351e+00
Iter = 836, Time = 2.845023e+00
Iter = 837, Time = 2.810639e+00
Iter = 838, Time = 2.777116e+00
Iter = 839, Time = 2.772580e+00
Iter = 840, Time = 2.709068e+00
Iter = 841, Time = 2.821148e+00
Iter = 842, Time = 2.864033e+00
Iter = 843, Time = 2.842725e+00
Iter = 844, Time = 2.813315e+00
Iter = 845, Time = 2.930371e+00
Iter = 846, Time = 2.740689e+00
Iter = 847, Time = 2.762888e+00
Iter = 848, Time = 2.754778e+00
Iter = 849, Time = 2.834049e+00
Iter = 850, Time = 2.798213e+00
Iter = 851, Time = 2.681374e+00
Iter = 852, Time = 2.696287e+00
Iter = 853, Time = 2.750774e+00
Iter = 854, Time = 2.652989e+00
Iter = 855, Time = 2.798470e+00
Iter = 856, Time = 2.780409e+00
Iter = 857, Time = 2.872990e+00
Iter = 858, Time = 2.801261e+00
Iter = 859, Time = 2.881005e+00
Iter = 860, Time = 2.704122e+00
Iter = 861, Time = 2.869510e+00
Iter = 862, Time = 2.789283e+00
Iter = 863, Time = 2.875837e+00
Iter = 864, Time = 2.766820e+00
Iter = 865, Time = 2.791801e+00
Iter = 866, Time = 2.768183e+00
Iter = 867, Time = 2.750452e+00
Iter = 868, Time = 2.754579e+00
Iter = 869, Time = 2.824972e+00
Iter = 870, Time = 2.818178e+00
Iter = 871, Time = 2.768507e+00
Iter = 872, Time = 2.799129e+00
Iter = 873, Time = 2.733014e+00
Iter = 874, Time = 2.851234e+00
Iter = 875, Time = 2.887867e+00
Iter = 876, Time = 2.812371e+00
Iter = 877, Time = 2.879890e+00
Iter = 878, Time = 2.784803e+00
Iter = 879, Time = 2.807102e+00
Iter = 880, Time = 2.799336e+00
Iter = 881, Time = 2.843931e+00
Iter = 882, Time = 2.769156e+00
Iter = 883, Time = 2.887428e+00
Iter = 884, Time = 2.803375e+00
Iter = 885, Time = 2.697254e+00
Iter = 886, Time = 2.688938e+00
Iter = 887, Time = 2.932403e+00
Iter = 888, Time = 2.678761e+00
Iter = 889, Time = 2.835973e+00
Iter = 890, Time = 2.812638e+00
Iter = 891, Time = 2.835578e+00
Iter = 892, Time = 2.806916e+00
Iter = 893, Time = 2.891458e+00
Iter = 894, Time = 2.777142e+00
Iter = 895, Time = 2.903525e+00
Iter = 896, Time = 2.717004e+00
Iter = 897, Time = 2.814925e+00
Iter = 898, Time = 2.887652e+00
Iter = 899, Time = 2.784731e+00
Iter = 900, Time = 2.808721e+00
Iter 900
N-norm = 9.729845e+02, L21-norm = 4.565780e+04, rel_fval = 3.008044e-05
 epsilon = 4.107459e+03, residual = 4.107551e+03
 SNR = 2.070008e+01, aSNR = 1.901815e+01

Iter = 901, Time = 2.813998e+00
Iter = 902, Time = 2.808370e+00
Iter = 903, Time = 2.816067e+00
Iter = 904, Time = 2.837842e+00
Iter = 905, Time = 2.827168e+00
Iter = 906, Time = 2.848017e+00
Iter = 907, Time = 2.854875e+00
Iter = 908, Time = 2.841128e+00
Iter = 909, Time = 2.950537e+00
Iter = 910, Time = 2.786470e+00
Iter = 911, Time = 2.925942e+00
Iter = 912, Time = 2.921333e+00
Iter = 913, Time = 2.761732e+00
Iter = 914, Time = 2.855896e+00
Iter = 915, Time = 2.787677e+00
Iter = 916, Time = 3.029578e+00
Iter = 917, Time = 2.831750e+00
Iter = 918, Time = 2.850990e+00
Iter = 919, Time = 2.841138e+00
Iter = 920, Time = 2.941767e+00
Iter = 921, Time = 2.786213e+00
Iter = 922, Time = 2.784833e+00
Iter = 923, Time = 2.806468e+00
Iter = 924, Time = 2.867171e+00
Iter = 925, Time = 2.841667e+00
Iter = 926, Time = 2.872401e+00
Iter = 927, Time = 2.817918e+00
Iter = 928, Time = 2.764283e+00
Iter = 929, Time = 2.770630e+00
Iter = 930, Time = 2.844146e+00
Iter = 931, Time = 2.772693e+00
Iter = 932, Time = 2.829960e+00
Iter = 933, Time = 2.747339e+00
Iter = 934, Time = 2.960359e+00
Iter = 935, Time = 2.756227e+00
Iter = 936, Time = 2.826797e+00
Reweighting: 2

Iter = 937, Time = 2.790033e+00
Iter = 938, Time = 2.903208e+00
Iter = 939, Time = 2.924172e+00
Iter = 940, Time = 2.854376e+00
Iter = 941, Time = 2.987063e+00
Iter = 942, Time = 2.849052e+00
Iter = 943, Time = 2.779403e+00
Iter = 944, Time = 2.993990e+00
Iter = 945, Time = 2.814880e+00
Iter = 946, Time = 2.877896e+00
Iter = 947, Time = 2.903312e+00
Iter = 948, Time = 3.011886e+00
Iter = 949, Time = 2.798514e+00
Iter = 950, Time = 2.890015e+00
Iter = 951, Time = 2.945562e+00
Iter = 952, Time = 2.858187e+00
Iter = 953, Time = 2.921630e+00
Iter = 954, Time = 2.833335e+00
Iter = 955, Time = 2.792920e+00
Iter = 956, Time = 2.790440e+00
Iter = 957, Time = 2.658065e+00
Iter = 958, Time = 3.011390e+00
Iter = 959, Time = 2.905668e+00
Iter = 960, Time = 2.869848e+00
Iter = 961, Time = 2.767048e+00
Iter = 962, Time = 2.813058e+00
Iter = 963, Time = 2.866674e+00
Iter = 964, Time = 2.961909e+00
Iter = 965, Time = 2.883044e+00
Iter = 966, Time = 2.876063e+00
Iter = 967, Time = 2.779929e+00
Iter = 968, Time = 2.828960e+00
Iter = 969, Time = 2.762282e+00
Iter = 970, Time = 2.849521e+00
Iter = 971, Time = 2.892689e+00
Iter = 972, Time = 2.840320e+00
Iter = 973, Time = 2.849186e+00
Iter = 974, Time = 2.783148e+00
Iter = 975, Time = 2.862232e+00
Iter = 976, Time = 2.810787e+00
Iter = 977, Time = 2.757015e+00
Iter = 978, Time = 2.916459e+00
Iter = 979, Time = 2.752870e+00
Iter = 980, Time = 2.865990e+00
Iter = 981, Time = 2.846686e+00
Iter = 982, Time = 2.775138e+00
Iter = 983, Time = 2.880567e+00
Iter = 984, Time = 2.839318e+00
Iter = 985, Time = 2.822449e+00
Iter = 986, Time = 2.844299e+00
Iter = 987, Time = 2.807479e+00
Iter = 988, Time = 2.994278e+00
Iter = 989, Time = 2.829308e+00
Iter = 990, Time = 2.860478e+00
Iter = 991, Time = 2.803520e+00
Iter = 992, Time = 2.748397e+00
Iter = 993, Time = 2.831744e+00
Iter = 994, Time = 2.750062e+00
Iter = 995, Time = 2.771619e+00
Iter = 996, Time = 2.796731e+00
Iter = 997, Time = 2.771245e+00
Iter = 998, Time = 2.820361e+00
Iter = 999, Time = 2.812706e+00
Iter = 1000, Time = 2.844845e+00
Iter 1000
N-norm = 9.731685e+02, L21-norm = 4.570357e+04, rel_fval = 3.154457e-05
 epsilon = 4.107459e+03, residual = 4.106097e+03
 SNR = 2.066212e+01, aSNR = 1.899565e+01

Iter = 1001, Time = 2.812286e+00
Iter = 1002, Time = 2.919833e+00
Iter = 1003, Time = 2.796102e+00
Iter = 1004, Time = 2.907548e+00
Iter = 1005, Time = 2.906867e+00
Iter = 1006, Time = 2.764634e+00
Iter = 1007, Time = 2.812685e+00
Iter = 1008, Time = 2.854072e+00
Iter = 1009, Time = 2.775549e+00
Iter = 1010, Time = 2.796147e+00
Iter = 1011, Time = 2.874662e+00
Iter = 1012, Time = 2.742245e+00
Iter = 1013, Time = 2.921087e+00
Iter = 1014, Time = 2.807469e+00
Iter = 1015, Time = 2.946216e+00
Iter = 1016, Time = 2.906268e+00
Iter = 1017, Time = 2.832532e+00
Iter = 1018, Time = 2.801479e+00
Iter = 1019, Time = 3.086021e+00
Iter = 1020, Time = 2.925777e+00
Iter = 1021, Time = 2.804833e+00
Iter = 1022, Time = 2.715257e+00
Iter = 1023, Time = 2.745798e+00
Iter = 1024, Time = 2.775601e+00
Iter = 1025, Time = 2.732128e+00
Iter = 1026, Time = 2.983813e+00
Iter = 1027, Time = 2.835163e+00
Iter = 1028, Time = 2.893478e+00
Iter = 1029, Time = 2.785386e+00
Iter = 1030, Time = 2.838484e+00
Iter = 1031, Time = 2.781859e+00
Iter = 1032, Time = 2.836916e+00
Iter = 1033, Time = 2.761914e+00
Iter = 1034, Time = 2.776728e+00
Iter = 1035, Time = 2.808727e+00
Iter = 1036, Time = 2.724433e+00
Iter = 1037, Time = 2.752987e+00
Iter = 1038, Time = 2.836780e+00
Iter = 1039, Time = 2.847386e+00
Iter = 1040, Time = 2.814575e+00
Iter = 1041, Time = 2.781031e+00
Iter = 1042, Time = 2.840128e+00
Iter = 1043, Time = 2.829893e+00
Iter = 1044, Time = 2.850160e+00
Iter = 1045, Time = 2.769001e+00
Iter = 1046, Time = 2.729844e+00
Iter = 1047, Time = 2.793730e+00
Iter = 1048, Time = 2.943621e+00
Iter = 1049, Time = 2.805487e+00
Iter = 1050, Time = 2.933116e+00
Iter = 1051, Time = 2.812570e+00
Iter = 1052, Time = 2.975572e+00
Iter = 1053, Time = 2.743401e+00
Iter = 1054, Time = 2.833540e+00
Iter = 1055, Time = 2.875214e+00
Iter = 1056, Time = 2.750195e+00
Iter = 1057, Time = 2.787407e+00
Iter = 1058, Time = 2.839403e+00
Iter = 1059, Time = 2.834770e+00
Iter = 1060, Time = 2.746938e+00
Iter = 1061, Time = 2.706306e+00
Iter = 1062, Time = 2.878870e+00
Iter = 1063, Time = 2.858805e+00
Iter = 1064, Time = 2.893594e+00
Iter = 1065, Time = 2.809567e+00
Iter = 1066, Time = 2.916644e+00
Iter = 1067, Time = 2.846824e+00
Iter = 1068, Time = 2.850674e+00
Iter = 1069, Time = 2.906212e+00
Iter = 1070, Time = 2.790273e+00
Iter = 1071, Time = 2.755295e+00
Iter = 1072, Time = 2.857976e+00
Iter = 1073, Time = 2.811290e+00
Iter = 1074, Time = 2.868749e+00
Iter = 1075, Time = 2.905418e+00
Iter = 1076, Time = 2.826207e+00
Iter = 1077, Time = 2.960083e+00
Iter = 1078, Time = 2.841448e+00
Iter = 1079, Time = 2.891794e+00
Iter = 1080, Time = 2.806646e+00
Iter = 1081, Time = 2.856631e+00
Iter = 1082, Time = 2.939944e+00
Iter = 1083, Time = 2.846680e+00
Iter = 1084, Time = 2.761718e+00
Iter = 1085, Time = 2.802749e+00
Iter = 1086, Time = 2.853879e+00
Iter = 1087, Time = 2.719231e+00
Iter = 1088, Time = 2.748718e+00
Iter = 1089, Time = 2.795233e+00
Iter = 1090, Time = 2.946356e+00
Iter = 1091, Time = 2.788099e+00
Iter = 1092, Time = 2.822024e+00
Iter = 1093, Time = 2.779363e+00
Iter = 1094, Time = 2.752822e+00
Iter = 1095, Time = 2.858670e+00
Iter = 1096, Time = 2.928083e+00
Iter = 1097, Time = 2.980455e+00
Iter = 1098, Time = 2.816471e+00
Iter = 1099, Time = 2.798598e+00
Iter = 1100, Time = 2.809604e+00
Iter 1100
N-norm = 9.732935e+02, L21-norm = 4.573587e+04, rel_fval = 3.065716e-05
 epsilon = 4.107459e+03, residual = 4.107370e+03
 SNR = 2.061996e+01, aSNR = 1.896256e+01

Iter = 1101, Time = 2.827373e+00
Iter = 1102, Time = 2.962346e+00
Iter = 1103, Time = 2.792757e+00
Iter = 1104, Time = 2.907250e+00
Iter = 1105, Time = 2.823534e+00
Iter = 1106, Time = 2.894900e+00
Iter = 1107, Time = 2.804822e+00
Iter = 1108, Time = 2.884754e+00
Iter = 1109, Time = 2.744054e+00
Iter = 1110, Time = 2.832380e+00
Iter = 1111, Time = 2.761910e+00
Iter = 1112, Time = 2.815253e+00
Iter = 1113, Time = 2.808864e+00
Iter = 1114, Time = 2.893801e+00
Iter = 1115, Time = 2.838291e+00
Iter = 1116, Time = 2.876985e+00
Iter = 1117, Time = 2.870224e+00
Iter = 1118, Time = 3.066632e+00
Iter = 1119, Time = 2.737797e+00
Iter = 1120, Time = 2.977508e+00
Iter = 1121, Time = 2.792108e+00
Iter = 1122, Time = 2.816074e+00
Iter = 1123, Time = 2.900915e+00
Iter = 1124, Time = 2.864392e+00
Iter = 1125, Time = 2.853925e+00
Iter = 1126, Time = 2.881276e+00
Iter = 1127, Time = 2.824170e+00
Iter = 1128, Time = 2.809661e+00
Iter = 1129, Time = 2.760492e+00
Iter = 1130, Time = 2.912020e+00
Iter = 1131, Time = 2.904255e+00
Iter = 1132, Time = 2.870415e+00
Iter = 1133, Time = 2.706573e+00
Iter = 1134, Time = 2.898553e+00
Iter = 1135, Time = 2.865302e+00
Iter = 1136, Time = 2.833159e+00
Iter = 1137, Time = 2.789719e+00
Iter = 1138, Time = 2.954794e+00
Iter = 1139, Time = 2.921767e+00
Iter = 1140, Time = 2.805757e+00
Iter = 1141, Time = 2.825911e+00
Iter = 1142, Time = 2.867448e+00
Iter = 1143, Time = 2.814947e+00
Iter = 1144, Time = 2.853198e+00
Iter = 1145, Time = 2.753665e+00
Iter = 1146, Time = 2.895070e+00
Iter = 1147, Time = 2.811280e+00
Iter = 1148, Time = 3.063151e+00
Iter = 1149, Time = 2.836274e+00
Iter = 1150, Time = 2.779686e+00
Iter = 1151, Time = 2.789080e+00
Iter = 1152, Time = 2.783551e+00
Iter = 1153, Time = 2.894779e+00
Iter = 1154, Time = 2.909069e+00
Iter = 1155, Time = 2.872819e+00
Iter = 1156, Time = 2.824508e+00
Iter = 1157, Time = 2.795082e+00
Iter = 1158, Time = 2.891425e+00
Iter = 1159, Time = 2.769166e+00
Iter = 1160, Time = 2.748422e+00
Iter = 1161, Time = 2.859066e+00
Iter = 1162, Time = 2.827969e+00
Iter = 1163, Time = 2.884307e+00
Iter = 1164, Time = 2.932053e+00
Iter = 1165, Time = 2.957242e+00
Iter = 1166, Time = 2.969912e+00
Iter = 1167, Time = 2.935184e+00
Iter = 1168, Time = 2.972473e+00
Iter = 1169, Time = 2.861456e+00
Iter = 1170, Time = 2.892019e+00
Iter = 1171, Time = 2.932552e+00
Iter = 1172, Time = 2.879855e+00
Iter = 1173, Time = 2.927168e+00
Iter = 1174, Time = 2.996351e+00
Iter = 1175, Time = 2.932258e+00
Iter = 1176, Time = 2.838016e+00
Iter = 1177, Time = 2.877369e+00
Iter = 1178, Time = 2.865078e+00
Iter = 1179, Time = 2.762241e+00
Iter = 1180, Time = 2.975460e+00
Iter = 1181, Time = 2.842579e+00
Iter = 1182, Time = 2.953366e+00
Iter = 1183, Time = 2.869472e+00
Iter = 1184, Time = 2.949655e+00
Iter = 1185, Time = 2.875343e+00
Iter = 1186, Time = 2.746017e+00
Iter = 1187, Time = 2.810701e+00
Iter = 1188, Time = 2.763931e+00
Iter = 1189, Time = 2.814517e+00
Iter = 1190, Time = 2.811647e+00
Iter = 1191, Time = 2.902654e+00
Iter = 1192, Time = 2.871935e+00
Iter = 1193, Time = 2.862032e+00
Iter = 1194, Time = 2.798120e+00
Iter = 1195, Time = 2.850296e+00
Iter = 1196, Time = 2.848183e+00
Iter = 1197, Time = 2.855795e+00
Iter = 1198, Time = 2.914398e+00
Iter = 1199, Time = 2.805738e+00
Iter = 1200, Time = 2.913312e+00
Iter 1200
N-norm = 9.734343e+02, L21-norm = 4.577009e+04, rel_fval = 3.307669e-05
 epsilon = 4.107459e+03, residual = 4.107496e+03
 SNR = 2.057446e+01, aSNR = 1.892607e+01

Iter = 1201, Time = 2.806397e+00
Iter = 1202, Time = 2.953286e+00
Iter = 1203, Time = 2.979723e+00
Iter = 1204, Time = 2.873135e+00
Iter = 1205, Time = 2.788049e+00
Iter = 1206, Time = 2.794241e+00
Iter = 1207, Time = 2.953149e+00
Iter = 1208, Time = 2.875779e+00
Iter = 1209, Time = 2.735862e+00
Iter = 1210, Time = 2.753599e+00
Iter = 1211, Time = 2.859500e+00
Iter = 1212, Time = 2.967866e+00
Iter = 1213, Time = 2.829786e+00
Iter = 1214, Time = 2.937039e+00
Iter = 1215, Time = 2.765596e+00
Iter = 1216, Time = 2.835780e+00
Iter = 1217, Time = 2.779602e+00
Iter = 1218, Time = 2.805117e+00
Iter = 1219, Time = 2.911375e+00
Iter = 1220, Time = 2.821869e+00
Iter = 1221, Time = 2.871902e+00
Iter = 1222, Time = 2.834101e+00
Iter = 1223, Time = 2.991851e+00
Iter = 1224, Time = 2.770322e+00
Iter = 1225, Time = 2.733617e+00
Iter = 1226, Time = 2.856811e+00
Iter = 1227, Time = 2.824088e+00
Iter = 1228, Time = 2.737566e+00
Iter = 1229, Time = 2.699683e+00
Iter = 1230, Time = 2.902285e+00
Iter = 1231, Time = 2.849816e+00
Iter = 1232, Time = 2.713951e+00
Iter = 1233, Time = 2.737166e+00
Iter = 1234, Time = 2.828172e+00
Iter = 1235, Time = 2.723757e+00
Iter = 1236, Time = 2.812123e+00
Reweighting: 3

Iter = 1237, Time = 2.831721e+00
Iter = 1238, Time = 2.801690e+00
Iter = 1239, Time = 2.746794e+00
Iter = 1240, Time = 2.773137e+00
Iter = 1241, Time = 2.897873e+00
Iter = 1242, Time = 2.802865e+00
Iter = 1243, Time = 2.818998e+00
Iter = 1244, Time = 2.854692e+00
Iter = 1245, Time = 2.798181e+00
Iter = 1246, Time = 2.809174e+00
Iter = 1247, Time = 2.749827e+00
Iter = 1248, Time = 2.808199e+00
Iter = 1249, Time = 2.944059e+00
Iter = 1250, Time = 2.704174e+00
Iter = 1251, Time = 2.842158e+00
Iter = 1252, Time = 2.807276e+00
Iter = 1253, Time = 2.853005e+00
Iter = 1254, Time = 2.736390e+00
Iter = 1255, Time = 2.733700e+00
Iter = 1256, Time = 2.797599e+00
Iter = 1257, Time = 2.715225e+00
Iter = 1258, Time = 2.784816e+00
Iter = 1259, Time = 2.891667e+00
Iter = 1260, Time = 2.795926e+00
Iter = 1261, Time = 2.728261e+00
Iter = 1262, Time = 2.723518e+00
Iter = 1263, Time = 2.843078e+00
Iter = 1264, Time = 2.748282e+00
Iter = 1265, Time = 2.726617e+00
Iter = 1266, Time = 2.775486e+00
Iter = 1267, Time = 2.808156e+00
Iter = 1268, Time = 2.716748e+00
Iter = 1269, Time = 2.826893e+00
Iter = 1270, Time = 2.743200e+00
Iter = 1271, Time = 2.759122e+00
Iter = 1272, Time = 2.840559e+00
Iter = 1273, Time = 2.756762e+00
Iter = 1274, Time = 2.739033e+00
Iter = 1275, Time = 2.729591e+00
Iter = 1276, Time = 2.790159e+00
Iter = 1277, Time = 2.857193e+00
Iter = 1278, Time = 2.730109e+00
Iter = 1279, Time = 2.668537e+00
Iter = 1280, Time = 2.731864e+00
Iter = 1281, Time = 2.712210e+00
Iter = 1282, Time = 2.734783e+00
Iter = 1283, Time = 2.731168e+00
Iter = 1284, Time = 2.809020e+00
Iter = 1285, Time = 2.747205e+00
Iter = 1286, Time = 2.720713e+00
Iter = 1287, Time = 2.732055e+00
Iter = 1288, Time = 2.722071e+00
Iter = 1289, Time = 2.780166e+00
Iter = 1290, Time = 2.662875e+00
Iter = 1291, Time = 2.663528e+00
Iter = 1292, Time = 2.787823e+00
Iter = 1293, Time = 2.707169e+00
Iter = 1294, Time = 2.793327e+00
Iter = 1295, Time = 2.747846e+00
Iter = 1296, Time = 2.737157e+00
Iter = 1297, Time = 2.692131e+00
Iter = 1298, Time = 2.677474e+00
Iter = 1299, Time = 2.733886e+00
Iter = 1300, Time = 2.746516e+00
Iter 1300
N-norm = 9.736351e+02, L21-norm = 4.580429e+04, rel_fval = 4.388382e-05
 epsilon = 4.107459e+03, residual = 4.106378e+03
 SNR = 2.053895e+01, aSNR = 1.890495e+01

Iter = 1301, Time = 2.698932e+00
Iter = 1302, Time = 2.801468e+00
Iter = 1303, Time = 2.658384e+00
Iter = 1304, Time = 2.665894e+00
Iter = 1305, Time = 2.701081e+00
Iter = 1306, Time = 2.838535e+00
Iter = 1307, Time = 2.754450e+00
Iter = 1308, Time = 2.658091e+00
Iter = 1309, Time = 2.718501e+00
Iter = 1310, Time = 2.693860e+00
Iter = 1311, Time = 2.710899e+00
Iter = 1312, Time = 2.698156e+00
Iter = 1313, Time = 2.682427e+00
Iter = 1314, Time = 2.700894e+00
Iter = 1315, Time = 2.612677e+00
Iter = 1316, Time = 2.730953e+00
Iter = 1317, Time = 2.679245e+00
Iter = 1318, Time = 2.662575e+00
Iter = 1319, Time = 2.702712e+00
Iter = 1320, Time = 2.741387e+00
Iter = 1321, Time = 2.713077e+00
Iter = 1322, Time = 2.675423e+00
Iter = 1323, Time = 2.657613e+00
Iter = 1324, Time = 2.723565e+00
Iter = 1325, Time = 2.703217e+00
Iter = 1326, Time = 2.787362e+00
Iter = 1327, Time = 2.680189e+00
Iter = 1328, Time = 2.693098e+00
Iter = 1329, Time = 2.657996e+00
Iter = 1330, Time = 2.672043e+00
Iter = 1331, Time = 2.677590e+00
Iter = 1332, Time = 2.714814e+00
Iter = 1333, Time = 2.661178e+00
Iter = 1334, Time = 2.768030e+00
Iter = 1335, Time = 2.673356e+00
Iter = 1336, Time = 2.683828e+00
Iter = 1337, Time = 2.695325e+00
Iter = 1338, Time = 2.738663e+00
Iter = 1339, Time = 2.616977e+00
Iter = 1340, Time = 2.667161e+00
Iter = 1341, Time = 2.644829e+00
Iter = 1342, Time = 2.842500e+00
Iter = 1343, Time = 2.659519e+00
Iter = 1344, Time = 2.699409e+00
Iter = 1345, Time = 2.678544e+00
Iter = 1346, Time = 2.657332e+00
Iter = 1347, Time = 2.713128e+00
Iter = 1348, Time = 2.625100e+00
Iter = 1349, Time = 2.672297e+00
Iter = 1350, Time = 2.827303e+00
Iter = 1351, Time = 2.627181e+00
Iter = 1352, Time = 2.749206e+00
Iter = 1353, Time = 2.675308e+00
Iter = 1354, Time = 2.692710e+00
Iter = 1355, Time = 2.698435e+00
Iter = 1356, Time = 2.747519e+00
Iter = 1357, Time = 2.642228e+00
Iter = 1358, Time = 2.684745e+00
Iter = 1359, Time = 2.672368e+00
Iter = 1360, Time = 2.702324e+00
Iter = 1361, Time = 2.654457e+00
Iter = 1362, Time = 2.734489e+00
Iter = 1363, Time = 2.687595e+00
Iter = 1364, Time = 2.679932e+00
Iter = 1365, Time = 2.627133e+00
Iter = 1366, Time = 2.684459e+00
Iter = 1367, Time = 2.789712e+00
Iter = 1368, Time = 2.611432e+00
Iter = 1369, Time = 2.640721e+00
Iter = 1370, Time = 2.659268e+00
Iter = 1371, Time = 2.627364e+00
Iter = 1372, Time = 2.627841e+00
Iter = 1373, Time = 2.627832e+00
Iter = 1374, Time = 2.726319e+00
Iter = 1375, Time = 2.594050e+00
Iter = 1376, Time = 2.630303e+00
Iter = 1377, Time = 2.664735e+00
Iter = 1378, Time = 2.705046e+00
Iter = 1379, Time = 2.645035e+00
Iter = 1380, Time = 2.698754e+00
Iter = 1381, Time = 2.673089e+00
Iter = 1382, Time = 2.734004e+00
Iter = 1383, Time = 2.652524e+00
Iter = 1384, Time = 2.702545e+00
Iter = 1385, Time = 2.611489e+00
Iter = 1386, Time = 2.728341e+00
Iter = 1387, Time = 2.669145e+00
Iter = 1388, Time = 2.661494e+00
Iter = 1389, Time = 2.648399e+00
Iter = 1390, Time = 2.715580e+00
Iter = 1391, Time = 2.668800e+00
Iter = 1392, Time = 2.659158e+00
Iter = 1393, Time = 2.596948e+00
Iter = 1394, Time = 2.625226e+00
Iter = 1395, Time = 2.650376e+00
Iter = 1396, Time = 2.707028e+00
Iter = 1397, Time = 2.648281e+00
Iter = 1398, Time = 2.720556e+00
Iter = 1399, Time = 2.602813e+00
Iter = 1400, Time = 2.686577e+00
Iter 1400
N-norm = 9.737477e+02, L21-norm = 4.583273e+04, rel_fval = 4.019584e-05
 epsilon = 4.107459e+03, residual = 4.107348e+03
 SNR = 2.050121e+01, aSNR = 1.887566e+01

Iter = 1401, Time = 2.630516e+00
Iter = 1402, Time = 2.648300e+00
Iter = 1403, Time = 2.645895e+00
Iter = 1404, Time = 2.601033e+00
Iter = 1405, Time = 2.582023e+00
Iter = 1406, Time = 2.747687e+00
Iter = 1407, Time = 2.593149e+00
Iter = 1408, Time = 2.632576e+00
Iter = 1409, Time = 2.589081e+00
Iter = 1410, Time = 2.646839e+00
Iter = 1411, Time = 2.593357e+00
Iter = 1412, Time = 2.598660e+00
Iter = 1413, Time = 2.594163e+00
Iter = 1414, Time = 2.696737e+00
Iter = 1415, Time = 2.599127e+00
Iter = 1416, Time = 2.678970e+00
Iter = 1417, Time = 2.652314e+00
Iter = 1418, Time = 2.635816e+00
Iter = 1419, Time = 2.655020e+00
Iter = 1420, Time = 2.637525e+00
Iter = 1421, Time = 2.650029e+00
Iter = 1422, Time = 2.659019e+00
Iter = 1423, Time = 2.573088e+00
Iter = 1424, Time = 2.673469e+00
Iter = 1425, Time = 2.697200e+00
Iter = 1426, Time = 2.603434e+00
Iter = 1427, Time = 2.637048e+00
Iter = 1428, Time = 2.613116e+00
Iter = 1429, Time = 2.605250e+00
Iter = 1430, Time = 2.689530e+00
Iter = 1431, Time = 2.657686e+00
Iter = 1432, Time = 2.679363e+00
Iter = 1433, Time = 2.648291e+00
Iter = 1434, Time = 2.624500e+00
Iter = 1435, Time = 2.665859e+00
Iter = 1436, Time = 2.649420e+00
Iter = 1437, Time = 2.653897e+00
Iter = 1438, Time = 2.729971e+00
Iter = 1439, Time = 2.618113e+00
Iter = 1440, Time = 2.661841e+00
Iter = 1441, Time = 2.683604e+00
Iter = 1442, Time = 2.673168e+00
Iter = 1443, Time = 2.613011e+00
Iter = 1444, Time = 2.664134e+00
Iter = 1445, Time = 2.665839e+00
Iter = 1446, Time = 2.779443e+00
Iter = 1447, Time = 2.634981e+00
Iter = 1448, Time = 2.650401e+00
Iter = 1449, Time = 2.629152e+00
Iter = 1450, Time = 2.754106e+00
Iter = 1451, Time = 2.991042e+00
Iter = 1452, Time = 2.781410e+00
Iter = 1453, Time = 2.657941e+00
Iter = 1454, Time = 2.666127e+00
Iter = 1455, Time = 2.662303e+00
Iter = 1456, Time = 2.680797e+00
Iter = 1457, Time = 2.757348e+00
Iter = 1458, Time = 2.581777e+00
Iter = 1459, Time = 2.596926e+00
Iter = 1460, Time = 2.622991e+00
Iter = 1461, Time = 2.592077e+00
Iter = 1462, Time = 2.703105e+00
Iter = 1463, Time = 2.665654e+00
Iter = 1464, Time = 2.738164e+00
Iter = 1465, Time = 2.720768e+00
Iter = 1466, Time = 2.663447e+00
Iter = 1467, Time = 2.749854e+00
Iter = 1468, Time = 2.688068e+00
Iter = 1469, Time = 2.644911e+00
Iter = 1470, Time = 2.606412e+00
Iter = 1471, Time = 2.672633e+00
Iter = 1472, Time = 2.719354e+00
Iter = 1473, Time = 2.701212e+00
Iter = 1474, Time = 2.647442e+00
Iter = 1475, Time = 2.665260e+00
Iter = 1476, Time = 2.714881e+00
Iter = 1477, Time = 2.688999e+00
Iter = 1478, Time = 2.701526e+00
Iter = 1479, Time = 2.688909e+00
Iter = 1480, Time = 2.649620e+00
Iter = 1481, Time = 2.614166e+00
Iter = 1482, Time = 2.658336e+00
Iter = 1483, Time = 2.555898e+00
Iter = 1484, Time = 2.607876e+00
Iter = 1485, Time = 2.528058e+00
Iter = 1486, Time = 2.608517e+00
Iter = 1487, Time = 2.612419e+00
Iter = 1488, Time = 2.610501e+00
Iter = 1489, Time = 2.661755e+00
Iter = 1490, Time = 2.652378e+00
Iter = 1491, Time = 2.636786e+00
Iter = 1492, Time = 2.679995e+00
Iter = 1493, Time = 2.613749e+00
Iter = 1494, Time = 2.639757e+00
Iter = 1495, Time = 2.652600e+00
Iter = 1496, Time = 2.633794e+00
Iter = 1497, Time = 2.580985e+00
Iter = 1498, Time = 2.615499e+00
Iter = 1499, Time = 2.630472e+00
Iter = 1500, Time = 2.647106e+00
Iter 1500
N-norm = 9.738625e+02, L21-norm = 4.586416e+04, rel_fval = 3.542388e-05
 epsilon = 4.107459e+03, residual = 4.107324e+03
 SNR = 2.045995e+01, aSNR = 1.884361e+01

Iter = 1501, Time = 2.685425e+00
Iter = 1502, Time = 2.714121e+00
Iter = 1503, Time = 2.646097e+00
Iter = 1504, Time = 2.718050e+00
Iter = 1505, Time = 2.678257e+00
Iter = 1506, Time = 2.694689e+00
Iter = 1507, Time = 2.671087e+00
Iter = 1508, Time = 2.708347e+00
Iter = 1509, Time = 2.644086e+00
Iter = 1510, Time = 2.671667e+00
Iter = 1511, Time = 2.589969e+00
Iter = 1512, Time = 2.691332e+00
Iter = 1513, Time = 2.645409e+00
Iter = 1514, Time = 2.692034e+00
Iter = 1515, Time = 2.672078e+00
Iter = 1516, Time = 2.737740e+00
Iter = 1517, Time = 2.603236e+00
Iter = 1518, Time = 2.722214e+00
Iter = 1519, Time = 2.661514e+00
Iter = 1520, Time = 2.706242e+00
Iter = 1521, Time = 2.681610e+00
Iter = 1522, Time = 2.663938e+00
Iter = 1523, Time = 2.658059e+00
Iter = 1524, Time = 2.711183e+00
Iter = 1525, Time = 2.668652e+00
Iter = 1526, Time = 2.730904e+00
Iter = 1527, Time = 2.650509e+00
Iter = 1528, Time = 2.707922e+00
Iter = 1529, Time = 2.673536e+00
Iter = 1530, Time = 2.683883e+00
Iter = 1531, Time = 2.656326e+00
Iter = 1532, Time = 2.732385e+00
Iter = 1533, Time = 2.687812e+00
Iter = 1534, Time = 2.679776e+00
Iter = 1535, Time = 2.670482e+00
Iter = 1536, Time = 2.721485e+00
Reweighting: 4

Iter = 1537, Time = 2.642928e+00
Iter = 1538, Time = 2.754796e+00
Iter = 1539, Time = 2.707312e+00
Iter = 1540, Time = 2.775882e+00
Iter = 1541, Time = 2.732886e+00
Iter = 1542, Time = 2.775314e+00
Iter = 1543, Time = 2.734290e+00
Iter = 1544, Time = 2.749193e+00
Iter = 1545, Time = 2.722574e+00
Iter = 1546, Time = 2.761806e+00
Iter = 1547, Time = 2.691001e+00
Iter = 1548, Time = 2.752296e+00
Iter = 1549, Time = 2.717038e+00
Iter = 1550, Time = 2.733523e+00
Iter = 1551, Time = 2.713378e+00
Iter = 1552, Time = 2.756705e+00
Iter = 1553, Time = 2.713100e+00
Iter = 1554, Time = 2.749376e+00
Iter = 1555, Time = 2.699148e+00
Iter = 1556, Time = 2.744183e+00
Iter = 1557, Time = 2.720387e+00
Iter = 1558, Time = 2.715582e+00
Iter = 1559, Time = 2.688434e+00
Iter = 1560, Time = 2.733932e+00
Iter = 1561, Time = 2.716382e+00
Iter = 1562, Time = 2.752850e+00
Iter = 1563, Time = 2.779436e+00
Iter = 1564, Time = 2.699105e+00
Iter = 1565, Time = 2.686148e+00
Iter = 1566, Time = 2.693876e+00
Iter = 1567, Time = 2.566865e+00
Iter = 1568, Time = 2.732264e+00
Iter = 1569, Time = 2.668738e+00
Iter = 1570, Time = 2.714720e+00
Iter = 1571, Time = 2.679378e+00
Iter = 1572, Time = 2.748056e+00
Iter = 1573, Time = 2.677711e+00
Iter = 1574, Time = 2.728704e+00
Iter = 1575, Time = 2.700172e+00
Iter = 1576, Time = 2.705996e+00
Iter = 1577, Time = 2.689630e+00
Iter = 1578, Time = 2.702565e+00
Iter = 1579, Time = 2.519457e+00
Iter = 1580, Time = 2.712576e+00
Iter = 1581, Time = 2.695516e+00
Iter = 1582, Time = 2.739710e+00
Iter = 1583, Time = 2.683494e+00
Iter = 1584, Time = 2.689385e+00
Iter = 1585, Time = 2.662059e+00
Iter = 1586, Time = 2.757388e+00
Iter = 1587, Time = 2.706984e+00
Iter = 1588, Time = 2.708456e+00
Iter = 1589, Time = 2.696521e+00
Iter = 1590, Time = 2.713341e+00
Iter = 1591, Time = 2.654190e+00
Iter = 1592, Time = 2.706997e+00
Iter = 1593, Time = 2.698262e+00
Iter = 1594, Time = 2.709103e+00
Iter = 1595, Time = 2.656793e+00
Iter = 1596, Time = 2.731408e+00
Iter = 1597, Time = 2.660054e+00
Iter = 1598, Time = 2.702736e+00
Iter = 1599, Time = 2.664019e+00
Iter = 1600, Time = 2.704119e+00
Iter 1600
N-norm = 9.740396e+02, L21-norm = 4.589661e+04, rel_fval = 3.768724e-05
 epsilon = 4.107459e+03, residual = 4.106551e+03
 SNR = 2.042838e+01, aSNR = 1.882533e+01

Iter = 1601, Time = 2.565849e+00
Iter = 1602, Time = 2.656938e+00
Iter = 1603, Time = 2.682209e+00
Iter = 1604, Time = 2.639487e+00
Iter = 1605, Time = 2.649544e+00
Iter = 1606, Time = 2.652660e+00
Iter = 1607, Time = 2.624474e+00
Iter = 1608, Time = 2.635840e+00
Iter = 1609, Time = 2.640387e+00
Iter = 1610, Time = 2.658722e+00
Iter = 1611, Time = 2.676759e+00
Iter = 1612, Time = 2.672446e+00
Iter = 1613, Time = 2.652400e+00
Iter = 1614, Time = 2.679657e+00
Iter = 1615, Time = 2.625430e+00
Iter = 1616, Time = 2.693623e+00
Iter = 1617, Time = 2.663478e+00
Iter = 1618, Time = 2.660470e+00
Iter = 1619, Time = 2.623696e+00
Iter = 1620, Time = 2.645036e+00
Iter = 1621, Time = 2.665318e+00
Iter = 1622, Time = 2.635005e+00
Iter = 1623, Time = 2.640121e+00
Iter = 1624, Time = 2.623271e+00
Iter = 1625, Time = 2.630446e+00
Iter = 1626, Time = 2.679678e+00
Iter = 1627, Time = 2.610767e+00
Iter = 1628, Time = 2.623906e+00
Iter = 1629, Time = 2.610502e+00
Iter = 1630, Time = 2.676690e+00
Iter = 1631, Time = 2.675760e+00
Iter = 1632, Time = 2.654252e+00
Iter = 1633, Time = 2.663190e+00
Iter = 1634, Time = 2.664501e+00
Iter = 1635, Time = 2.617642e+00
Iter = 1636, Time = 2.586842e+00
Iter = 1637, Time = 2.532239e+00
Iter = 1638, Time = 2.671516e+00
Iter = 1639, Time = 2.673393e+00
Iter = 1640, Time = 2.668532e+00
Iter = 1641, Time = 2.654123e+00
Iter = 1642, Time = 2.639266e+00
Iter = 1643, Time = 2.641600e+00
Iter = 1644, Time = 2.687872e+00
Iter = 1645, Time = 2.668294e+00
Iter = 1646, Time = 2.637150e+00
Iter = 1647, Time = 2.649777e+00
Iter = 1648, Time = 2.681737e+00
Iter = 1649, Time = 2.619522e+00
Iter = 1650, Time = 2.676729e+00
Iter = 1651, Time = 2.599533e+00
Iter = 1652, Time = 2.696490e+00
Iter = 1653, Time = 2.681771e+00
Iter = 1654, Time = 2.668277e+00
Iter = 1655, Time = 2.704205e+00
Iter = 1656, Time = 2.699074e+00
Iter = 1657, Time = 2.705856e+00
Iter = 1658, Time = 2.693853e+00
Iter = 1659, Time = 2.666989e+00
Iter = 1660, Time = 2.701305e+00
Iter = 1661, Time = 2.712900e+00
Iter = 1662, Time = 2.667202e+00
Iter = 1663, Time = 2.685490e+00
Iter = 1664, Time = 2.685320e+00
Iter = 1665, Time = 2.672608e+00
Iter = 1666, Time = 2.691549e+00
Iter = 1667, Time = 2.691626e+00
Iter = 1668, Time = 2.697824e+00
Iter = 1669, Time = 2.648132e+00
Iter = 1670, Time = 2.720571e+00
Iter = 1671, Time = 2.686245e+00
Iter = 1672, Time = 2.683188e+00
Iter = 1673, Time = 2.687794e+00
Iter = 1674, Time = 2.709814e+00
Iter = 1675, Time = 2.673296e+00
Iter = 1676, Time = 2.656270e+00
Iter = 1677, Time = 2.687395e+00
Iter = 1678, Time = 2.684416e+00
Iter = 1679, Time = 2.698430e+00
Iter = 1680, Time = 2.699307e+00
Iter = 1681, Time = 2.660835e+00
Iter = 1682, Time = 2.667146e+00
Iter = 1683, Time = 2.678970e+00
Iter = 1684, Time = 2.669149e+00
Iter = 1685, Time = 2.516391e+00
Iter = 1686, Time = 2.685798e+00
Iter = 1687, Time = 2.654708e+00
Iter = 1688, Time = 2.658214e+00
Iter = 1689, Time = 2.636389e+00
Iter = 1690, Time = 2.702791e+00
Iter = 1691, Time = 2.643370e+00
Iter = 1692, Time = 2.701471e+00
Iter = 1693, Time = 2.657650e+00
Iter = 1694, Time = 2.661191e+00
Iter = 1695, Time = 2.680671e+00
Iter = 1696, Time = 2.682903e+00
Iter = 1697, Time = 2.613789e+00
Iter = 1698, Time = 2.645707e+00
Iter = 1699, Time = 2.669862e+00
Iter = 1700, Time = 2.662246e+00
Iter 1700
N-norm = 9.741443e+02, L21-norm = 4.592263e+04, rel_fval = 3.694298e-05
 epsilon = 4.107459e+03, residual = 4.107307e+03
 SNR = 2.039690e+01, aSNR = 1.880061e+01

Iter = 1701, Time = 2.534354e+00
Iter = 1702, Time = 2.681289e+00
Iter = 1703, Time = 2.632838e+00
Iter = 1704, Time = 2.716644e+00
Iter = 1705, Time = 2.628884e+00
Iter = 1706, Time = 2.691290e+00
Iter = 1707, Time = 2.662252e+00
Iter = 1708, Time = 2.685156e+00
Iter = 1709, Time = 2.645258e+00
Iter = 1710, Time = 2.679803e+00
Iter = 1711, Time = 2.676110e+00
Iter = 1712, Time = 2.665888e+00
Iter = 1713, Time = 2.635944e+00
Iter = 1714, Time = 2.692342e+00
Iter = 1715, Time = 2.657917e+00
Iter = 1716, Time = 2.692426e+00
Iter = 1717, Time = 2.631143e+00
Iter = 1718, Time = 2.675975e+00
Iter = 1719, Time = 2.661416e+00
Iter = 1720, Time = 2.656296e+00
Iter = 1721, Time = 2.640501e+00
Iter = 1722, Time = 2.641307e+00
Iter = 1723, Time = 2.633209e+00
Iter = 1724, Time = 2.681058e+00
Iter = 1725, Time = 2.667183e+00
Iter = 1726, Time = 2.693874e+00
Iter = 1727, Time = 2.659569e+00
Iter = 1728, Time = 2.650010e+00
Iter = 1729, Time = 2.625714e+00
Iter = 1730, Time = 2.647802e+00
Iter = 1731, Time = 2.595258e+00
Iter = 1732, Time = 2.639404e+00
Iter = 1733, Time = 2.625440e+00
Iter = 1734, Time = 2.711649e+00
Iter = 1735, Time = 2.612912e+00
Iter = 1736, Time = 2.661201e+00
Iter = 1737, Time = 2.656875e+00
Iter = 1738, Time = 2.672549e+00
Iter = 1739, Time = 2.611748e+00
Iter = 1740, Time = 2.658093e+00
Iter = 1741, Time = 2.642621e+00
Iter = 1742, Time = 2.676346e+00
Iter = 1743, Time = 2.661010e+00
Iter = 1744, Time = 2.650484e+00
Iter = 1745, Time = 2.627077e+00
Iter = 1746, Time = 2.662570e+00
Iter = 1747, Time = 2.636970e+00
Iter = 1748, Time = 2.671734e+00
Iter = 1749, Time = 2.655828e+00
Iter = 1750, Time = 2.797046e+00
Iter = 1751, Time = 2.835391e+00
Iter = 1752, Time = 2.841252e+00
Iter = 1753, Time = 2.818478e+00
Iter = 1754, Time = 2.881459e+00
Iter = 1755, Time = 2.836101e+00
Iter = 1756, Time = 2.866412e+00
Iter = 1757, Time = 2.810100e+00
Iter = 1758, Time = 2.858609e+00
Iter = 1759, Time = 2.809976e+00
Iter = 1760, Time = 2.865853e+00
Iter = 1761, Time = 2.852871e+00
Iter = 1762, Time = 2.864830e+00
Iter = 1763, Time = 2.865321e+00
Iter = 1764, Time = 2.858243e+00
Iter = 1765, Time = 2.822563e+00
Iter = 1766, Time = 2.848169e+00
Iter = 1767, Time = 2.877099e+00
Iter = 1768, Time = 2.827517e+00
Iter = 1769, Time = 2.851814e+00
Iter = 1770, Time = 2.859020e+00
Iter = 1771, Time = 2.819816e+00
Iter = 1772, Time = 2.838880e+00
Iter = 1773, Time = 2.842532e+00
Iter = 1774, Time = 2.844389e+00
Iter = 1775, Time = 2.819229e+00
Iter = 1776, Time = 2.840705e+00
Iter = 1777, Time = 2.806505e+00
Iter = 1778, Time = 2.828734e+00
Iter = 1779, Time = 2.820739e+00
Iter = 1780, Time = 2.816103e+00
Iter = 1781, Time = 2.834503e+00
Iter = 1782, Time = 2.849545e+00
Iter = 1783, Time = 2.829368e+00
Iter = 1784, Time = 2.825776e+00
Iter = 1785, Time = 2.812346e+00
Iter = 1786, Time = 2.864426e+00
Iter = 1787, Time = 2.803249e+00
Iter = 1788, Time = 2.863118e+00
Iter = 1789, Time = 2.831023e+00
Iter = 1790, Time = 2.845877e+00
Iter = 1791, Time = 2.820135e+00
Iter = 1792, Time = 2.842253e+00
Iter = 1793, Time = 2.787821e+00
Iter = 1794, Time = 2.867768e+00
Iter = 1795, Time = 2.863042e+00
Iter = 1796, Time = 2.851327e+00
Iter = 1797, Time = 2.837384e+00
Iter = 1798, Time = 2.834144e+00
Iter = 1799, Time = 2.848427e+00
Iter = 1800, Time = 2.868009e+00
Iter 1800
N-norm = 9.742411e+02, L21-norm = 4.595289e+04, rel_fval = 3.553899e-05
 epsilon = 4.107459e+03, residual = 4.107358e+03
 SNR = 2.036300e+01, aSNR = 1.877408e+01

Iter = 1801, Time = 2.841182e+00
Iter = 1802, Time = 2.778560e+00
Iter = 1803, Time = 2.651393e+00
Iter = 1804, Time = 2.648300e+00
Iter = 1805, Time = 2.667365e+00
Iter = 1806, Time = 2.707758e+00
Iter = 1807, Time = 2.711719e+00
Iter = 1808, Time = 2.676488e+00
Iter = 1809, Time = 2.642692e+00
Iter = 1810, Time = 2.751610e+00
Iter = 1811, Time = 2.796246e+00
Iter = 1812, Time = 2.759778e+00
Iter = 1813, Time = 2.757521e+00
Iter = 1814, Time = 2.779406e+00
Iter = 1815, Time = 2.710622e+00
Iter = 1816, Time = 2.719082e+00
Iter = 1817, Time = 2.677726e+00
Iter = 1818, Time = 2.745066e+00
Iter = 1819, Time = 2.750270e+00
Iter = 1820, Time = 2.737599e+00
Iter = 1821, Time = 2.749977e+00
Iter = 1822, Time = 2.738090e+00
Iter = 1823, Time = 2.719390e+00
Iter = 1824, Time = 2.737259e+00
Iter = 1825, Time = 2.832187e+00
Iter = 1826, Time = 2.717644e+00
Iter = 1827, Time = 2.685074e+00
Iter = 1828, Time = 2.653761e+00
Iter = 1829, Time = 2.647483e+00
Iter = 1830, Time = 2.723205e+00
Iter = 1831, Time = 2.697019e+00
Iter = 1832, Time = 2.836109e+00
Iter = 1833, Time = 2.748166e+00
Iter = 1834, Time = 2.729763e+00
Iter = 1835, Time = 2.769504e+00
Iter = 1836, Time = 2.817768e+00
Reweighting: 5



 No more reweights 

Elapsed time is 5212.177025 seconds.
Maximum number of iterations reached
Iter 1836
N-norm = 9.742761e+02, L21-norm = 4.596478e+04, rel_fval = 3.646095e-05
epsilon = 4.107459e+03, residual = 4.107358e+03
SNR = 2.035013e+01, aSNR = 1.876360e+01


SNR =

   20.3501


SNR_average =

   18.7636


Time_iter_average =

    0.5039

[Warning: Directory already exists.] 
[> In Solver_simulated_data_FINAL_clean (line 241)
  In main_simulated_data_FINAL_clean (line 199)] 
