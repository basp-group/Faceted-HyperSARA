
                            < M A T L A B (R) >
                  Copyright 1984-2018 The MathWorks, Inc.
                   R2018a (9.4.0.813654) 64-bit (glnxa64)
                             February 23, 2018

 
To get started, type one of these: helpwin, helpdesk, or demo.
For product information, visit www.mathworks.com.
 

irtdir =

    '/lustre/home/sc004/aa61/HyperSARA_dist_Full/irt'

Path setup for irt appears to have succeeded.
/*----------------------------------------------------------------*/
 example: Simulation of wide band radio interferometric data
/*----------------------------------------------------------------*/

n_src =

    11


ans =

     9


T =

   100


hrs =

     6


ans =

     0     1


bmax =

    3.1416


ans =

     0     1


bmax =

    3.1416


ans =

       35100           1

Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 2s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 2s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
norm it n=2 norm=55231.1356
norm it n=3 norm=224419.4607
norm it n=4 norm=259236.0951
norm it n=5 norm=277689.5441
norm it n=6 norm=289803.0908
norm it n=7 norm=298829.5135
norm it n=8 norm=306056.6454
norm it n=9 norm=312102.9056
norm it n=10 norm=317312.0017
norm it n=11 norm=321897.5122
norm it n=12 norm=326003.5138
norm it n=13 norm=329732.7839
norm it n=14 norm=333161.1805
norm it n=15 norm=336345.6597
norm it n=16 norm=339329.1632
norm it n=17 norm=342143.8638
norm it n=18 norm=344813.4945
norm it n=19 norm=347355.1297
norm it n=20 norm=349780.6185
norm it n=21 norm=352097.7777
norm it n=22 norm=354311.404
norm it n=23 norm=356424.1385
norm it n=24 norm=358437.1982
norm it n=25 norm=360350.9841
norm it n=26 norm=362165.5694
norm it n=27 norm=363881.075
norm it n=28 norm=365497.9389
norm it n=29 norm=367017.0911
norm it n=30 norm=368440.0463
norm it n=31 norm=369768.9306
norm it n=32 norm=371006.4564
norm it n=33 norm=372155.8614
norm it n=34 norm=373220.8245
norm it n=35 norm=374205.3697
norm it n=36 norm=375113.7677
norm it n=37 norm=375950.4412
norm it n=38 norm=376719.8784
norm it n=39 norm=377426.5575
norm it n=40 norm=378074.8836
norm it n=41 norm=378669.1377
norm it n=42 norm=379213.4372
norm it n=43 norm=379711.7074
norm it n=44 norm=380167.6622
norm it n=45 norm=380584.7923
norm it n=46 norm=380966.3606
norm it n=47 norm=381315.4016
norm it n=48 norm=381634.7265
norm it n=49 norm=381926.9295
norm it n=50 norm=382194.3978
norm it n=51 norm=382439.3219
norm it n=52 norm=382663.7075
norm it n=53 norm=382869.3877
norm it n=54 norm=383058.035
norm it n=55 norm=383231.1734
norm it n=56 norm=383390.1903
norm it n=57 norm=383536.3472
norm it n=58 norm=383670.7906
norm it n=59 norm=383794.5621
norm it n=60 norm=383908.6072
norm it n=61 norm=384013.7842
norm it n=62 norm=384110.8722
norm it n=63 norm=384200.5782
norm it n=64 norm=384283.544
norm it n=65 norm=384360.352
norm it n=66 norm=384431.5311
norm it n=67 norm=384497.5617
norm it n=68 norm=384558.88
norm it n=69 norm=384615.8827
norm it n=70 norm=384668.9302
norm it n=71 norm=384718.3504
norm it n=72 norm=384764.4419
norm it n=73 norm=384807.4764
norm it n=74 norm=384847.7013
norm it n=75 norm=384885.3424
norm it n=76 norm=384920.6054
norm it n=77 norm=384953.6782
norm it n=78 norm=384984.7322
norm it n=79 norm=385013.9242
norm it n=80 norm=385041.3974
norm it n=81 norm=385067.2829
norm it n=82 norm=385091.7008
norm it n=83 norm=385114.7609
norm it n=84 norm=385136.564
norm it n=85 norm=385157.2026
norm it n=86 norm=385176.7615
norm it n=87 norm=385195.3186
norm it n=88 norm=385212.9454
norm it n=89 norm=385229.708
norm it n=90 norm=385245.6668
norm it n=91 norm=385260.8777
norm it n=92 norm=385275.392
norm it n=93 norm=385289.2572
norm it n=94 norm=385302.5169
norm it n=95 norm=385315.2115
norm it n=96 norm=385327.3783
norm it n=97 norm=385339.0517
norm it n=98 norm=385350.2636
norm it n=99 norm=385361.0434
norm it n=100 norm=385371.4183
norm it n=101 norm=385381.4137
norm it n=102 norm=385391.053
norm it n=103 norm=385400.3577
norm it n=104 norm=385409.3482
norm it n=105 norm=385418.0431
norm it n=106 norm=385426.4596
norm it n=107 norm=385434.6141
norm it n=108 norm=385442.5214
norm it n=109 norm=385450.1954
norm it n=110 norm=385457.6493
norm it n=111 norm=385464.895
norm it n=112 norm=385471.9439
norm it n=113 norm=385478.8063
norm it n=114 norm=385485.4921
norm it n=115 norm=385492.0105
norm it n=116 norm=385498.3698
norm it n=117 norm=385504.5782
norm it n=118 norm=385510.643
norm it n=119 norm=385516.5711
norm it n=120 norm=385522.369
norm it n=121 norm=385528.0429
norm it n=122 norm=385533.5984
norm it n=123 norm=385539.0408
norm it n=124 norm=385544.3751
norm it n=125 norm=385549.606
norm it n=126 norm=385554.7379
norm it n=127 norm=385559.7749
norm it n=128 norm=385564.7209
norm it n=129 norm=385569.5794
norm it n=130 norm=385574.3539
norm it n=131 norm=385579.0476
norm it n=132 norm=385583.6635
norm it n=133 norm=385588.2045
norm it n=134 norm=385592.6732
norm it n=135 norm=385597.072
norm it n=136 norm=385601.4035
norm it n=137 norm=385605.6698
norm it n=138 norm=385609.8731
norm it n=139 norm=385614.0153
norm it n=140 norm=385618.0983
norm it n=141 norm=385622.1239
norm it n=142 norm=385626.0938
norm it n=143 norm=385630.0095
norm it n=144 norm=385633.8726
norm it n=145 norm=385637.6845
norm it n=146 norm=385641.4466
norm it n=147 norm=385645.1602
norm it n=148 norm=385648.8263
norm it n=149 norm=385652.4464
norm it n=150 norm=385656.0213
norm it n=151 norm=385659.5522
norm it n=152 norm=385663.0401
norm it n=153 norm=385666.4859
norm it n=154 norm=385669.8905
norm it n=155 norm=385673.2548
norm it n=156 norm=385676.5797
norm it n=157 norm=385679.8658
norm it n=158 norm=385683.1141
norm it n=159 norm=385686.3251
norm it n=160 norm=385689.4995
norm it n=161 norm=385692.6381
norm it n=162 norm=385695.7415
norm it n=163 norm=385698.8103
norm it n=164 norm=385701.8451
norm it n=165 norm=385704.8464
norm it n=166 norm=385707.8147
norm it n=167 norm=385710.7507
norm it n=168 norm=385713.6548
norm it n=169 norm=385716.5274
norm it n=170 norm=385719.3692
norm it n=171 norm=385722.1804
norm it n=172 norm=385724.9616
norm it n=173 norm=385727.7132
norm it n=174 norm=385730.4356
norm it n=175 norm=385733.1291
norm it n=176 norm=385735.7942
norm it n=177 norm=385738.4313
norm it n=178 norm=385741.0407
norm it n=179 norm=385743.6228
norm it n=180 norm=385746.1779
norm it n=181 norm=385748.7063
norm it n=182 norm=385751.2084
norm it n=183 norm=385753.6845
norm it n=184 norm=385756.1349
norm it n=185 norm=385758.5599
norm it n=186 norm=385760.9598
norm it n=187 norm=385763.3349
norm it n=188 norm=385765.6855
norm it n=189 norm=385768.0118
norm it n=190 norm=385770.3142
norm it n=191 norm=385772.5929
norm it n=192 norm=385774.8481
norm it n=193 norm=385777.0801
norm it n=194 norm=385779.2892
norm it n=195 norm=385781.4756
norm it n=196 norm=385783.6396
norm it n=197 norm=385785.7814
norm it n=198 norm=385787.9011
norm it n=199 norm=385789.9992
norm it n=200 norm=385792.0757
 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  WARNING: Change DWT Extension Mode  !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                        
****************************************
**  DWT Extension Mode: Zero Padding  **
****************************************
                                        
                                        
****************************************
**  DWT Extension Mode: Zero Padding  **
****************************************
                                        
norm it n=2 norm=1
norm it n=3 norm=1
-----------------------------------------
HyperSARA - spmd
-----------------------------------------
Starting parallel pool (parpool) using the 'local' profile ...
connected to 8 workers.
                                        
****************************************
**  DWT Extension Mode: Zero Padding  **
****************************************
                                        
xsol NOT uploaded 

Iter = 1, Time = 2.679941e+00
Iter = 2, Time = 2.162886e+00
Iter = 3, Time = 2.005957e+00
Iter = 4, Time = 2.126110e+00
Iter = 5, Time = 2.107540e+00
Iter = 6, Time = 2.002948e+00
Iter = 7, Time = 2.066373e+00
Iter = 8, Time = 1.924125e+00
Iter = 9, Time = 1.957883e+00
Iter = 10, Time = 1.940727e+00
Iter = 11, Time = 2.095915e+00
Iter = 12, Time = 1.943293e+00
Iter = 13, Time = 1.950787e+00
Iter = 14, Time = 1.932281e+00
Iter = 15, Time = 2.062337e+00
Iter = 16, Time = 2.019141e+00
Iter = 17, Time = 2.017365e+00
Iter = 18, Time = 1.960554e+00
Iter = 19, Time = 2.020435e+00
Iter = 20, Time = 2.011572e+00
Iter = 21, Time = 1.995816e+00
Iter = 22, Time = 1.954844e+00
Iter = 23, Time = 1.999672e+00
Iter = 24, Time = 1.992100e+00
Iter = 25, Time = 2.026050e+00
Iter = 26, Time = 2.041153e+00
Iter = 27, Time = 2.015517e+00
Iter = 28, Time = 1.963934e+00
Iter = 29, Time = 2.116529e+00
Iter = 30, Time = 1.947775e+00
Iter = 31, Time = 2.101415e+00
Iter = 32, Time = 1.928065e+00
Iter = 33, Time = 2.008728e+00
Iter = 34, Time = 1.915567e+00
Iter = 35, Time = 1.974411e+00
Iter = 36, Time = 1.958511e+00
Iter = 37, Time = 1.988425e+00
Iter = 38, Time = 2.075953e+00
Iter = 39, Time = 2.019393e+00
Iter = 40, Time = 1.929506e+00
Iter = 41, Time = 1.942976e+00
Iter = 42, Time = 1.936720e+00
Iter = 43, Time = 1.926995e+00
Iter = 44, Time = 1.887565e+00
Iter = 45, Time = 2.023315e+00
Iter = 46, Time = 2.046950e+00
Iter = 47, Time = 2.004536e+00
Iter = 48, Time = 1.906065e+00
Iter = 49, Time = 1.978309e+00
Iter = 50, Time = 1.901683e+00
Iter = 51, Time = 1.940998e+00
Iter = 52, Time = 1.930895e+00
Iter = 53, Time = 1.992195e+00
Iter = 54, Time = 1.992792e+00
Iter = 55, Time = 2.030476e+00
Iter = 56, Time = 1.974857e+00
Iter = 57, Time = 1.963902e+00
Iter = 58, Time = 1.958996e+00
Iter = 59, Time = 2.011494e+00
Iter = 60, Time = 1.947025e+00
Iter = 61, Time = 1.974382e+00
Iter = 62, Time = 1.871973e+00
Iter = 63, Time = 1.982509e+00
Iter = 64, Time = 1.876051e+00
Iter = 65, Time = 1.946130e+00
Iter = 66, Time = 1.860897e+00
Iter = 67, Time = 2.024031e+00
Iter = 68, Time = 1.840673e+00
Iter = 69, Time = 1.910681e+00
Iter = 70, Time = 1.916231e+00
Iter = 71, Time = 1.984427e+00
Iter = 72, Time = 1.882635e+00
Iter = 73, Time = 1.940405e+00
Iter = 74, Time = 1.855459e+00
Iter = 75, Time = 1.919011e+00
Iter = 76, Time = 1.868160e+00
Iter = 77, Time = 1.984134e+00
Iter = 78, Time = 1.918274e+00
Iter = 79, Time = 1.941442e+00
Iter = 80, Time = 1.874367e+00
Iter = 81, Time = 1.925073e+00
Iter = 82, Time = 1.873798e+00
Iter = 83, Time = 1.924536e+00
Iter = 84, Time = 1.894562e+00
Iter = 85, Time = 1.943157e+00
Iter = 86, Time = 1.915057e+00
Iter = 87, Time = 2.043565e+00
Iter = 88, Time = 1.957356e+00
Iter = 89, Time = 2.112609e+00
Iter = 90, Time = 1.914783e+00
Iter = 91, Time = 2.000526e+00
Iter = 92, Time = 1.869520e+00
Iter = 93, Time = 1.969095e+00
Iter = 94, Time = 1.895711e+00
Iter = 95, Time = 1.937797e+00
Iter = 96, Time = 2.026610e+00
Iter = 97, Time = 1.864116e+00
Iter = 98, Time = 1.867059e+00
Iter = 99, Time = 1.928297e+00
Iter = 100, Time = 1.868175e+00
Iter 100
N-norm = 9.758683e+02, L21-norm = 4.531128e+04, rel_fval = 3.690294e-04
 epsilon = 4.107459e+03, residual = 3.651405e+03
 SNR = 2.267817e+01, aSNR = 2.070116e+01

Iter = 101, Time = 1.810370e+00
Iter = 102, Time = 1.757941e+00
Iter = 103, Time = 1.806773e+00
Iter = 104, Time = 1.816512e+00
Iter = 105, Time = 1.823102e+00
Iter = 106, Time = 1.895574e+00
Iter = 107, Time = 1.830251e+00
Iter = 108, Time = 1.774238e+00
Iter = 109, Time = 1.784127e+00
Iter = 110, Time = 1.861115e+00
Iter = 111, Time = 1.803216e+00
Iter = 112, Time = 1.743692e+00
Iter = 113, Time = 1.819129e+00
Iter = 114, Time = 1.780679e+00
Iter = 115, Time = 1.862821e+00
Iter = 116, Time = 1.826140e+00
Iter = 117, Time = 1.883844e+00
Iter = 118, Time = 1.859186e+00
Iter = 119, Time = 1.877335e+00
Iter = 120, Time = 1.891522e+00
Iter = 121, Time = 1.905193e+00
Iter = 122, Time = 1.874097e+00
Iter = 123, Time = 1.822448e+00
Iter = 124, Time = 1.748242e+00
Iter = 125, Time = 1.857504e+00
Iter = 126, Time = 1.680243e+00
Iter = 127, Time = 1.816925e+00
Iter = 128, Time = 1.845226e+00
Iter = 129, Time = 1.840852e+00
Iter = 130, Time = 1.829994e+00
Iter = 131, Time = 1.851004e+00
Iter = 132, Time = 1.727840e+00
Iter = 133, Time = 1.811576e+00
Iter = 134, Time = 1.809289e+00
Iter = 135, Time = 1.829447e+00
Iter = 136, Time = 1.793597e+00
Iter = 137, Time = 1.888706e+00
Iter = 138, Time = 1.741595e+00
Iter = 139, Time = 1.786337e+00
Iter = 140, Time = 1.805400e+00
Iter = 141, Time = 1.864661e+00
Iter = 142, Time = 1.724059e+00
Iter = 143, Time = 1.807127e+00
Iter = 144, Time = 1.765985e+00
Iter = 145, Time = 1.747638e+00
Iter = 146, Time = 1.831239e+00
Iter = 147, Time = 1.819398e+00
Iter = 148, Time = 1.737751e+00
Iter = 149, Time = 1.849504e+00
Iter = 150, Time = 1.829178e+00
Iter = 151, Time = 1.852079e+00
Iter = 152, Time = 1.884826e+00
Iter = 153, Time = 1.839714e+00
Iter = 154, Time = 1.813887e+00
Iter = 155, Time = 1.833148e+00
Iter = 156, Time = 1.715829e+00
Iter = 157, Time = 1.837430e+00
Iter = 158, Time = 1.688823e+00
Iter = 159, Time = 1.837103e+00
Iter = 160, Time = 1.774170e+00
Iter = 161, Time = 1.772851e+00
Iter = 162, Time = 1.749887e+00
Iter = 163, Time = 1.817318e+00
Iter = 164, Time = 1.781655e+00
Iter = 165, Time = 1.821938e+00
Iter = 166, Time = 1.784019e+00
Iter = 167, Time = 1.764717e+00
Iter = 168, Time = 1.721051e+00
Iter = 169, Time = 1.729611e+00
Iter = 170, Time = 1.749382e+00
Iter = 171, Time = 1.791387e+00
Iter = 172, Time = 1.792143e+00
Iter = 173, Time = 1.747572e+00
Iter = 174, Time = 1.742189e+00
Iter = 175, Time = 1.710993e+00
Iter = 176, Time = 1.715184e+00
Iter = 177, Time = 1.778926e+00
Iter = 178, Time = 1.798676e+00
Iter = 179, Time = 1.839740e+00
Iter = 180, Time = 1.800732e+00
Iter = 181, Time = 1.833323e+00
Iter = 182, Time = 1.800962e+00
Iter = 183, Time = 1.794713e+00
Iter = 184, Time = 1.730195e+00
Iter = 185, Time = 1.792981e+00
Iter = 186, Time = 1.744033e+00
Iter = 187, Time = 1.762874e+00
Iter = 188, Time = 1.739342e+00
Iter = 189, Time = 1.849757e+00
Iter = 190, Time = 1.825045e+00
Iter = 191, Time = 1.802073e+00
Iter = 192, Time = 1.786099e+00
Iter = 193, Time = 1.861986e+00
Iter = 194, Time = 1.779833e+00
Iter = 195, Time = 2.044658e+00
Iter = 196, Time = 1.752949e+00
Iter = 197, Time = 1.820975e+00
Iter = 198, Time = 1.793206e+00
Iter = 199, Time = 1.807520e+00
Iter = 200, Time = 1.770871e+00
Iter 200
N-norm = 9.722858e+02, L21-norm = 4.524273e+04, rel_fval = 1.564404e-04
 epsilon = 4.107459e+03, residual = 3.890739e+03
 SNR = 2.166405e+01, aSNR = 1.976565e+01

Iter = 201, Time = 1.860062e+00
Iter = 202, Time = 1.822827e+00
Iter = 203, Time = 1.849874e+00
Iter = 204, Time = 1.779029e+00
Iter = 205, Time = 1.733381e+00
Iter = 206, Time = 1.728848e+00
Iter = 207, Time = 1.824951e+00
Iter = 208, Time = 1.704139e+00
Iter = 209, Time = 1.777364e+00
Iter = 210, Time = 1.679772e+00
Iter = 211, Time = 1.737456e+00
Iter = 212, Time = 1.711347e+00
Iter = 213, Time = 1.775588e+00
Iter = 214, Time = 1.720209e+00
Iter = 215, Time = 1.803593e+00
Iter = 216, Time = 1.743909e+00
Iter = 217, Time = 1.955379e+00
Iter = 218, Time = 1.779317e+00
Iter = 219, Time = 1.896595e+00
Iter = 220, Time = 1.843402e+00
Iter = 221, Time = 1.809046e+00
Iter = 222, Time = 1.767018e+00
Iter = 223, Time = 1.798771e+00
Iter = 224, Time = 1.772113e+00
Iter = 225, Time = 1.820271e+00
Iter = 226, Time = 1.735980e+00
Iter = 227, Time = 1.901402e+00
Iter = 228, Time = 1.804336e+00
Iter = 229, Time = 1.906311e+00
Iter = 230, Time = 1.790952e+00
Iter = 231, Time = 1.802899e+00
Iter = 232, Time = 1.796885e+00
Iter = 233, Time = 1.841038e+00
Iter = 234, Time = 1.753770e+00
Iter = 235, Time = 1.846573e+00
Iter = 236, Time = 1.795206e+00
Iter = 237, Time = 1.799638e+00
Iter = 238, Time = 1.709224e+00
Iter = 239, Time = 1.781883e+00
Iter = 240, Time = 1.792017e+00
Iter = 241, Time = 1.932969e+00
Iter = 242, Time = 1.766199e+00
Iter = 243, Time = 1.827530e+00
Iter = 244, Time = 1.780608e+00
Iter = 245, Time = 1.753373e+00
Iter = 246, Time = 1.767845e+00
Iter = 247, Time = 1.800607e+00
Iter = 248, Time = 1.820985e+00
Iter = 249, Time = 1.828630e+00
Iter = 250, Time = 1.802293e+00
Iter = 251, Time = 1.795486e+00
Iter = 252, Time = 1.698622e+00
Iter = 253, Time = 1.759618e+00
Iter = 254, Time = 1.899961e+00
Iter = 255, Time = 1.797227e+00
Iter = 256, Time = 1.724812e+00
Iter = 257, Time = 1.769828e+00
Iter = 258, Time = 1.706001e+00
Iter = 259, Time = 1.846037e+00
Iter = 260, Time = 1.758536e+00
Iter = 261, Time = 1.727709e+00
Iter = 262, Time = 1.678797e+00
Iter = 263, Time = 1.766244e+00
Iter = 264, Time = 1.757682e+00
Iter = 265, Time = 1.798580e+00
Iter = 266, Time = 1.783660e+00
Iter = 267, Time = 1.810822e+00
Iter = 268, Time = 1.736759e+00
Iter = 269, Time = 1.835627e+00
Iter = 270, Time = 1.799362e+00
Iter = 271, Time = 1.868367e+00
Iter = 272, Time = 1.700503e+00
Iter = 273, Time = 1.778445e+00
Iter = 274, Time = 1.750071e+00
Iter = 275, Time = 1.819611e+00
Iter = 276, Time = 1.679068e+00
Iter = 277, Time = 1.834585e+00
Iter = 278, Time = 1.765061e+00
Iter = 279, Time = 1.979387e+00
Iter = 280, Time = 1.826366e+00
Iter = 281, Time = 1.788436e+00
Iter = 282, Time = 1.680930e+00
Iter = 283, Time = 1.733311e+00
Iter = 284, Time = 1.787999e+00
Iter = 285, Time = 1.820470e+00
Iter = 286, Time = 1.733495e+00
Iter = 287, Time = 1.829648e+00
Iter = 288, Time = 1.781926e+00
Iter = 289, Time = 1.843702e+00
Iter = 290, Time = 1.823308e+00
Iter = 291, Time = 2.073345e+00
Iter = 292, Time = 1.809494e+00
Iter = 293, Time = 1.898154e+00
Iter = 294, Time = 1.809022e+00
Iter = 295, Time = 1.850570e+00
Iter = 296, Time = 1.791193e+00
Iter = 297, Time = 1.860653e+00
Iter = 298, Time = 1.806986e+00
Iter = 299, Time = 1.844453e+00
Iter = 300, Time = 1.825972e+00
Iter 300
N-norm = 9.707015e+02, L21-norm = 4.527707e+04, rel_fval = 1.155281e-04
 epsilon = 4.107459e+03, residual = 4.028461e+03
 SNR = 2.078825e+01, aSNR = 1.900699e+01

Iter = 301, Time = 1.893520e+00
Iter = 302, Time = 1.765958e+00
Iter = 303, Time = 1.893400e+00
Iter = 304, Time = 1.843244e+00
Iter = 305, Time = 1.944873e+00
Iter = 306, Time = 1.803646e+00
Iter = 307, Time = 1.880083e+00
Iter = 308, Time = 1.816281e+00
Iter = 309, Time = 1.779199e+00
Iter = 310, Time = 1.780397e+00
Iter = 311, Time = 1.808947e+00
Iter = 312, Time = 1.824541e+00
Iter = 313, Time = 1.798806e+00
Iter = 314, Time = 1.852305e+00
Iter = 315, Time = 1.839884e+00
Iter = 316, Time = 1.908338e+00
Iter = 317, Time = 1.788967e+00
Iter = 318, Time = 1.813610e+00
Iter = 319, Time = 1.772433e+00
Iter = 320, Time = 1.793120e+00
Iter = 321, Time = 1.850259e+00
Iter = 322, Time = 1.783371e+00
Iter = 323, Time = 1.794196e+00
Iter = 324, Time = 1.952869e+00
Iter = 325, Time = 2.006271e+00
Iter = 326, Time = 1.771570e+00
Iter = 327, Time = 1.810082e+00
Iter = 328, Time = 1.756793e+00
Iter = 329, Time = 1.774237e+00
Iter = 330, Time = 1.747604e+00
Iter = 331, Time = 1.784600e+00
Iter = 332, Time = 1.787505e+00
Iter = 333, Time = 1.821786e+00
Iter = 334, Time = 1.811461e+00
Iter = 335, Time = 1.777066e+00
Iter = 336, Time = 1.766755e+00
Reweighting: 0

Iter = 337, Time = 1.819446e+00
Iter = 338, Time = 1.733037e+00
Iter = 339, Time = 1.794697e+00
Iter = 340, Time = 1.783564e+00
Iter = 341, Time = 1.793470e+00
Iter = 342, Time = 1.777164e+00
Iter = 343, Time = 1.839918e+00
Iter = 344, Time = 1.847984e+00
Iter = 345, Time = 1.837917e+00
Iter = 346, Time = 1.773225e+00
Iter = 347, Time = 1.764675e+00
Iter = 348, Time = 1.723501e+00
Iter = 349, Time = 1.833216e+00
Iter = 350, Time = 1.756165e+00
Iter = 351, Time = 1.808303e+00
Iter = 352, Time = 1.788252e+00
Iter = 353, Time = 1.819149e+00
Iter = 354, Time = 1.783068e+00
Iter = 355, Time = 1.818614e+00
Iter = 356, Time = 1.758602e+00
Iter = 357, Time = 1.666010e+00
Iter = 358, Time = 1.664375e+00
Iter = 359, Time = 1.855607e+00
Iter = 360, Time = 1.763039e+00
Iter = 361, Time = 1.745110e+00
Iter = 362, Time = 1.693797e+00
Iter = 363, Time = 1.867164e+00
Iter = 364, Time = 1.739049e+00
Iter = 365, Time = 1.765624e+00
Iter = 366, Time = 1.771518e+00
Iter = 367, Time = 1.787958e+00
Iter = 368, Time = 1.775886e+00
Iter = 369, Time = 1.788876e+00
Iter = 370, Time = 1.725530e+00
Iter = 371, Time = 1.766566e+00
Iter = 372, Time = 1.693883e+00
Iter = 373, Time = 1.767411e+00
Iter = 374, Time = 1.765718e+00
Iter = 375, Time = 1.776291e+00
Iter = 376, Time = 1.773669e+00
Iter = 377, Time = 1.846051e+00
Iter = 378, Time = 1.775074e+00
Iter = 379, Time = 1.735196e+00
Iter = 380, Time = 1.761982e+00
Iter = 381, Time = 1.779251e+00
Iter = 382, Time = 1.721266e+00
Iter = 383, Time = 1.844139e+00
Iter = 384, Time = 1.751278e+00
Iter = 385, Time = 1.826816e+00
Iter = 386, Time = 1.749324e+00
Iter = 387, Time = 1.753373e+00
Iter = 388, Time = 1.874017e+00
Iter = 389, Time = 1.736824e+00
Iter = 390, Time = 1.809786e+00
Iter = 391, Time = 1.787779e+00
Iter = 392, Time = 1.768165e+00
Iter = 393, Time = 1.843858e+00
Iter = 394, Time = 1.700653e+00
Iter = 395, Time = 1.821155e+00
Iter = 396, Time = 1.752139e+00
Iter = 397, Time = 1.778852e+00
Iter = 398, Time = 1.710347e+00
Iter = 399, Time = 1.800912e+00
Iter = 400, Time = 1.776025e+00
Iter 400
N-norm = 9.729619e+02, L21-norm = 4.544479e+04, rel_fval = 1.006691e-04
 epsilon = 4.107459e+03, residual = 3.961332e+03
 SNR = 2.086917e+01, aSNR = 1.914066e+01

Iter = 401, Time = 1.791569e+00
Iter = 402, Time = 1.777585e+00
Iter = 403, Time = 1.817248e+00
Iter = 404, Time = 1.710888e+00
Iter = 405, Time = 1.816064e+00
Iter = 406, Time = 1.754375e+00
Iter = 407, Time = 1.776570e+00
Iter = 408, Time = 1.708527e+00
Iter = 409, Time = 1.753654e+00
Iter = 410, Time = 1.691062e+00
Iter = 411, Time = 1.959545e+00
Iter = 412, Time = 1.815323e+00
Iter = 413, Time = 1.791769e+00
Iter = 414, Time = 1.754648e+00
Iter = 415, Time = 1.883825e+00
Iter = 416, Time = 1.791953e+00
Iter = 417, Time = 1.942896e+00
Iter = 418, Time = 1.845429e+00
Iter = 419, Time = 1.816257e+00
Iter = 420, Time = 1.774344e+00
Iter = 421, Time = 1.805471e+00
Iter = 422, Time = 1.784591e+00
Iter = 423, Time = 1.800632e+00
Iter = 424, Time = 1.765838e+00
Iter = 425, Time = 1.857718e+00
Iter = 426, Time = 1.721609e+00
Iter = 427, Time = 1.831615e+00
Iter = 428, Time = 1.746982e+00
Iter = 429, Time = 1.725875e+00
Iter = 430, Time = 1.867839e+00
Iter = 431, Time = 1.885367e+00
Iter = 432, Time = 1.784653e+00
Iter = 433, Time = 1.772041e+00
Iter = 434, Time = 1.795862e+00
Iter = 435, Time = 1.805959e+00
Iter = 436, Time = 1.798395e+00
Iter = 437, Time = 1.856261e+00
Iter = 438, Time = 1.785061e+00
Iter = 439, Time = 1.834045e+00
Iter = 440, Time = 1.797979e+00
Iter = 441, Time = 1.821038e+00
Iter = 442, Time = 1.764341e+00
Iter = 443, Time = 1.746491e+00
Iter = 444, Time = 1.766416e+00
Iter = 445, Time = 1.840381e+00
Iter = 446, Time = 1.795841e+00
Iter = 447, Time = 1.817492e+00
Iter = 448, Time = 1.801002e+00
Iter = 449, Time = 1.862145e+00
Iter = 450, Time = 1.791045e+00
Iter = 451, Time = 1.837104e+00
Iter = 452, Time = 1.957209e+00
Iter = 453, Time = 1.952803e+00
Iter = 454, Time = 1.822196e+00
Iter = 455, Time = 1.797750e+00
Iter = 456, Time = 1.802969e+00
Iter = 457, Time = 1.818773e+00
Iter = 458, Time = 1.769512e+00
Iter = 459, Time = 1.851126e+00
Iter = 460, Time = 1.733892e+00
Iter = 461, Time = 1.831585e+00
Iter = 462, Time = 1.774723e+00
Iter = 463, Time = 1.827372e+00
Iter = 464, Time = 1.715005e+00
Iter = 465, Time = 1.775626e+00
Iter = 466, Time = 1.899118e+00
Iter = 467, Time = 1.784444e+00
Iter = 468, Time = 1.823987e+00
Iter = 469, Time = 1.817321e+00
Iter = 470, Time = 1.765399e+00
Iter = 471, Time = 1.724020e+00
Iter = 472, Time = 1.715389e+00
Iter = 473, Time = 1.712758e+00
Iter = 474, Time = 1.696779e+00
Iter = 475, Time = 1.800437e+00
Iter = 476, Time = 1.741055e+00
Iter = 477, Time = 1.739654e+00
Iter = 478, Time = 1.785384e+00
Iter = 479, Time = 1.753956e+00
Iter = 480, Time = 1.721174e+00
Iter = 481, Time = 1.867013e+00
Iter = 482, Time = 1.728430e+00
Iter = 483, Time = 1.813121e+00
Iter = 484, Time = 1.809034e+00
Iter = 485, Time = 1.759532e+00
Iter = 486, Time = 1.776937e+00
Iter = 487, Time = 1.811172e+00
Iter = 488, Time = 1.809203e+00
Iter = 489, Time = 1.783022e+00
Iter = 490, Time = 1.734533e+00
Iter = 491, Time = 1.771203e+00
Iter = 492, Time = 1.749230e+00
Iter = 493, Time = 1.743552e+00
Iter = 494, Time = 1.749262e+00
Iter = 495, Time = 1.808754e+00
Iter = 496, Time = 1.768161e+00
Iter = 497, Time = 1.809545e+00
Iter = 498, Time = 1.766846e+00
Iter = 499, Time = 1.753633e+00
Iter = 500, Time = 1.702901e+00
Iter 500
N-norm = 9.724684e+02, L21-norm = 4.544348e+04, rel_fval = 4.171750e-05
 epsilon = 4.107459e+03, residual = 4.100832e+03
 SNR = 2.085551e+01, aSNR = 1.911851e+01

Iter = 501, Time = 1.781056e+00
Iter = 502, Time = 1.751181e+00
Iter = 503, Time = 1.771334e+00
Iter = 504, Time = 1.760916e+00
Iter = 505, Time = 1.788575e+00
Iter = 506, Time = 1.786770e+00
Iter = 507, Time = 1.703436e+00
Iter = 508, Time = 1.700115e+00
Iter = 509, Time = 1.793545e+00
Iter = 510, Time = 1.805225e+00
Iter = 511, Time = 1.802087e+00
Iter = 512, Time = 1.706235e+00
Iter = 513, Time = 1.810001e+00
Iter = 514, Time = 1.819590e+00
Iter = 515, Time = 1.850515e+00
Iter = 516, Time = 1.900608e+00
Iter = 517, Time = 1.843384e+00
Iter = 518, Time = 1.749127e+00
Iter = 519, Time = 1.839270e+00
Iter = 520, Time = 1.793544e+00
Iter = 521, Time = 1.868654e+00
Iter = 522, Time = 1.774638e+00
Iter = 523, Time = 1.815718e+00
Iter = 524, Time = 1.841833e+00
Iter = 525, Time = 1.811047e+00
Iter = 526, Time = 1.774985e+00
Iter = 527, Time = 1.834113e+00
Iter = 528, Time = 1.737510e+00
Iter = 529, Time = 1.799942e+00
Iter = 530, Time = 1.672943e+00
Iter = 531, Time = 1.702001e+00
Iter = 532, Time = 1.755888e+00
Iter = 533, Time = 1.774911e+00
Iter = 534, Time = 1.782375e+00
Iter = 535, Time = 1.817871e+00
Iter = 536, Time = 1.816992e+00
Iter = 537, Time = 1.813213e+00
Iter = 538, Time = 1.740077e+00
Iter = 539, Time = 1.772766e+00
Iter = 540, Time = 1.780406e+00
Iter = 541, Time = 1.726569e+00
Iter = 542, Time = 1.722571e+00
Iter = 543, Time = 1.834516e+00
Iter = 544, Time = 1.757729e+00
Iter = 545, Time = 1.776230e+00
Iter = 546, Time = 1.773785e+00
Iter = 547, Time = 1.761449e+00
Iter = 548, Time = 1.884034e+00
Iter = 549, Time = 1.808753e+00
Iter = 550, Time = 1.721839e+00
Iter = 551, Time = 1.819606e+00
Iter = 552, Time = 1.743339e+00
Iter = 553, Time = 1.859778e+00
Iter = 554, Time = 1.812116e+00
Iter = 555, Time = 1.831183e+00
Iter = 556, Time = 1.766721e+00
Iter = 557, Time = 1.862613e+00
Iter = 558, Time = 1.755761e+00
Iter = 559, Time = 1.788656e+00
Iter = 560, Time = 1.777892e+00
Iter = 561, Time = 1.905149e+00
Iter = 562, Time = 1.749865e+00
Iter = 563, Time = 1.791563e+00
Iter = 564, Time = 1.709040e+00
Iter = 565, Time = 1.776405e+00
Iter = 566, Time = 1.763693e+00
Iter = 567, Time = 1.906413e+00
Iter = 568, Time = 1.729052e+00
Iter = 569, Time = 1.778609e+00
Iter = 570, Time = 1.758660e+00
Iter = 571, Time = 1.803594e+00
Iter = 572, Time = 1.798433e+00
Iter = 573, Time = 1.813494e+00
Iter = 574, Time = 1.813196e+00
Iter = 575, Time = 1.823893e+00
Iter = 576, Time = 1.826432e+00
Iter = 577, Time = 1.885929e+00
Iter = 578, Time = 1.770414e+00
Iter = 579, Time = 1.842441e+00
Iter = 580, Time = 1.895864e+00
Iter = 581, Time = 1.855989e+00
Iter = 582, Time = 1.793167e+00
Iter = 583, Time = 1.853540e+00
Iter = 584, Time = 1.746446e+00
Iter = 585, Time = 1.851843e+00
Iter = 586, Time = 1.765767e+00
Iter = 587, Time = 1.847389e+00
Iter = 588, Time = 1.845311e+00
Iter = 589, Time = 1.820977e+00
Iter = 590, Time = 1.803733e+00
Iter = 591, Time = 1.819001e+00
Iter = 592, Time = 1.723384e+00
Iter = 593, Time = 1.858634e+00
Iter = 594, Time = 1.797712e+00
Iter = 595, Time = 1.858770e+00
Iter = 596, Time = 1.812042e+00
Iter = 597, Time = 1.795432e+00
Iter = 598, Time = 1.794317e+00
Iter = 599, Time = 1.838546e+00
Iter = 600, Time = 1.760003e+00
Iter 600
N-norm = 9.725652e+02, L21-norm = 4.551071e+04, rel_fval = 3.234680e-05
 epsilon = 4.107459e+03, residual = 4.106867e+03
 SNR = 2.081096e+01, aSNR = 1.908641e+01

Iter = 601, Time = 1.803090e+00
Iter = 602, Time = 1.792570e+00
Iter = 603, Time = 1.828486e+00
Iter = 604, Time = 1.764779e+00
Iter = 605, Time = 1.794399e+00
Iter = 606, Time = 1.782254e+00
Iter = 607, Time = 1.843312e+00
Iter = 608, Time = 1.767084e+00
Iter = 609, Time = 1.793878e+00
Iter = 610, Time = 1.733170e+00
Iter = 611, Time = 1.782404e+00
Iter = 612, Time = 1.742159e+00
Iter = 613, Time = 1.802384e+00
Iter = 614, Time = 1.793549e+00
Iter = 615, Time = 1.847454e+00
Iter = 616, Time = 1.697137e+00
Iter = 617, Time = 1.812341e+00
Iter = 618, Time = 1.834035e+00
Iter = 619, Time = 1.795136e+00
Iter = 620, Time = 1.783282e+00
Iter = 621, Time = 1.729858e+00
Iter = 622, Time = 1.741910e+00
Iter = 623, Time = 1.808454e+00
Iter = 624, Time = 1.742438e+00
Iter = 625, Time = 1.772282e+00
Iter = 626, Time = 1.764839e+00
Iter = 627, Time = 1.757547e+00
Iter = 628, Time = 1.771561e+00
Iter = 629, Time = 1.793928e+00
Iter = 630, Time = 1.765524e+00
Iter = 631, Time = 1.785698e+00
Iter = 632, Time = 1.878187e+00
Iter = 633, Time = 1.874110e+00
Iter = 634, Time = 1.834932e+00
Iter = 635, Time = 1.755249e+00
Iter = 636, Time = 1.726812e+00
Reweighting: 1

Iter = 637, Time = 1.854719e+00
Iter = 638, Time = 1.757465e+00
Iter = 639, Time = 1.817858e+00
Iter = 640, Time = 1.706856e+00
Iter = 641, Time = 1.751821e+00
Iter = 642, Time = 1.694878e+00
Iter = 643, Time = 1.757675e+00
Iter = 644, Time = 1.747420e+00
Iter = 645, Time = 1.838770e+00
Iter = 646, Time = 1.728618e+00
Iter = 647, Time = 1.818443e+00
Iter = 648, Time = 1.779721e+00
Iter = 649, Time = 1.792932e+00
Iter = 650, Time = 1.770533e+00
Iter = 651, Time = 1.783393e+00
Iter = 652, Time = 1.729326e+00
Iter = 653, Time = 2.801532e+00
Iter = 654, Time = 1.839632e+00
Iter = 655, Time = 1.790609e+00
Iter = 656, Time = 1.749287e+00
Iter = 657, Time = 1.745454e+00
Iter = 658, Time = 1.801216e+00
Iter = 659, Time = 1.851607e+00
Iter = 660, Time = 2.659342e+00
Iter = 661, Time = 1.816204e+00
Iter = 662, Time = 1.762387e+00
Iter = 663, Time = 1.723095e+00
Iter = 664, Time = 1.769232e+00
Iter = 665, Time = 1.787063e+00
Iter = 666, Time = 1.778293e+00
Iter = 667, Time = 1.773170e+00
Iter = 668, Time = 1.784230e+00
Iter = 669, Time = 1.789663e+00
Iter = 670, Time = 1.799019e+00
Iter = 671, Time = 1.699480e+00
Iter = 672, Time = 1.745108e+00
Iter = 673, Time = 1.726681e+00
Iter = 674, Time = 1.757736e+00
Iter = 675, Time = 1.722347e+00
Iter = 676, Time = 1.781464e+00
Iter = 677, Time = 1.760186e+00
Iter = 678, Time = 1.916133e+00
Iter = 679, Time = 1.752009e+00
Iter = 680, Time = 1.717061e+00
Iter = 681, Time = 1.716675e+00
Iter = 682, Time = 1.805220e+00
Iter = 683, Time = 1.789718e+00
Iter = 684, Time = 1.798188e+00
Iter = 685, Time = 1.774115e+00
Iter = 686, Time = 1.741668e+00
Iter = 687, Time = 1.776310e+00
Iter = 688, Time = 1.783340e+00
Iter = 689, Time = 1.829922e+00
Iter = 690, Time = 1.758365e+00
Iter = 691, Time = 1.746466e+00
Iter = 692, Time = 1.800545e+00
Iter = 693, Time = 1.833529e+00
Iter = 694, Time = 1.802939e+00
Iter = 695, Time = 1.779365e+00
Iter = 696, Time = 1.806755e+00
Iter = 697, Time = 1.802767e+00
Iter = 698, Time = 1.769035e+00
Iter = 699, Time = 1.772409e+00
Iter = 700, Time = 1.747065e+00
Iter 700
N-norm = 9.727087e+02, L21-norm = 4.557359e+04, rel_fval = 3.140935e-05
 epsilon = 4.107459e+03, residual = 4.105876e+03
 SNR = 2.078140e+01, aSNR = 1.907810e+01

Iter = 701, Time = 1.751907e+00
Iter = 702, Time = 1.785163e+00
Iter = 703, Time = 1.866926e+00
Iter = 704, Time = 1.827504e+00
Iter = 705, Time = 1.814209e+00
Iter = 706, Time = 1.795126e+00
Iter = 707, Time = 1.757267e+00
Iter = 708, Time = 1.758082e+00
Iter = 709, Time = 1.868018e+00
Iter = 710, Time = 1.800386e+00
Iter = 711, Time = 1.787441e+00
Iter = 712, Time = 1.792077e+00
Iter = 713, Time = 1.858038e+00
Iter = 714, Time = 1.771491e+00
Iter = 715, Time = 1.762570e+00
Iter = 716, Time = 1.730888e+00
Iter = 717, Time = 1.778808e+00
Iter = 718, Time = 1.827887e+00
Iter = 719, Time = 1.886741e+00
Iter = 720, Time = 1.802754e+00
Iter = 721, Time = 1.794614e+00
Iter = 722, Time = 1.755127e+00
Iter = 723, Time = 1.812412e+00
Iter = 724, Time = 1.919372e+00
Iter = 725, Time = 1.823661e+00
Iter = 726, Time = 1.796218e+00
Iter = 727, Time = 1.731749e+00
Iter = 728, Time = 1.813119e+00
Iter = 729, Time = 1.773337e+00
Iter = 730, Time = 1.762254e+00
Iter = 731, Time = 1.792163e+00
Iter = 732, Time = 1.790456e+00
Iter = 733, Time = 1.820626e+00
Iter = 734, Time = 1.855411e+00
Iter = 735, Time = 1.772063e+00
Iter = 736, Time = 1.760472e+00
Iter = 737, Time = 1.843329e+00
Iter = 738, Time = 1.746276e+00
Iter = 739, Time = 1.878670e+00
Iter = 740, Time = 1.753367e+00
Iter = 741, Time = 1.824767e+00
Iter = 742, Time = 1.823772e+00
Iter = 743, Time = 1.807529e+00
Iter = 744, Time = 1.805757e+00
Iter = 745, Time = 1.781779e+00
Iter = 746, Time = 1.783069e+00
Iter = 747, Time = 1.906307e+00
Iter = 748, Time = 1.806452e+00
Iter = 749, Time = 1.894126e+00
Iter = 750, Time = 1.828468e+00
Iter = 751, Time = 1.805017e+00
Iter = 752, Time = 1.755824e+00
Iter = 753, Time = 1.737088e+00
Iter = 754, Time = 1.744526e+00
Iter = 755, Time = 1.745656e+00
Iter = 756, Time = 1.745422e+00
Iter = 757, Time = 1.757857e+00
Iter = 758, Time = 1.756524e+00
Iter = 759, Time = 1.791977e+00
Iter = 760, Time = 1.781536e+00
Iter = 761, Time = 1.755984e+00
Iter = 762, Time = 1.783735e+00
Iter = 763, Time = 1.765804e+00
Iter = 764, Time = 1.782284e+00
Iter = 765, Time = 1.747394e+00
Iter = 766, Time = 1.804504e+00
Iter = 767, Time = 1.782939e+00
Iter = 768, Time = 1.817814e+00
Iter = 769, Time = 1.802915e+00
Iter = 770, Time = 1.754036e+00
Iter = 771, Time = 1.816653e+00
Iter = 772, Time = 1.785941e+00
Iter = 773, Time = 1.807182e+00
Iter = 774, Time = 1.889888e+00
Iter = 775, Time = 1.817359e+00
Iter = 776, Time = 1.755847e+00
Iter = 777, Time = 1.808322e+00
Iter = 778, Time = 1.749270e+00
Iter = 779, Time = 1.814546e+00
Iter = 780, Time = 1.788595e+00
Iter = 781, Time = 1.803233e+00
Iter = 782, Time = 1.730478e+00
Iter = 783, Time = 1.837943e+00
Iter = 784, Time = 1.769018e+00
Iter = 785, Time = 1.901436e+00
Iter = 786, Time = 1.942002e+00
Iter = 787, Time = 1.804382e+00
Iter = 788, Time = 1.769851e+00
Iter = 789, Time = 1.788885e+00
Iter = 790, Time = 1.799750e+00
Iter = 791, Time = 1.814208e+00
Iter = 792, Time = 1.761550e+00
Iter = 793, Time = 1.775881e+00
Iter = 794, Time = 1.800445e+00
Iter = 795, Time = 1.783482e+00
Iter = 796, Time = 1.768412e+00
Iter = 797, Time = 1.792613e+00
Iter = 798, Time = 1.811431e+00
Iter = 799, Time = 1.788745e+00
Iter = 800, Time = 1.720250e+00
Iter 800
N-norm = 9.728424e+02, L21-norm = 4.561803e+04, rel_fval = 3.167029e-05
 epsilon = 4.107459e+03, residual = 4.107280e+03
 SNR = 2.074395e+01, aSNR = 1.905150e+01

Iter = 801, Time = 1.758387e+00
Iter = 802, Time = 1.762230e+00
Iter = 803, Time = 1.815299e+00
Iter = 804, Time = 1.796544e+00
Iter = 805, Time = 1.825660e+00
Iter = 806, Time = 1.777922e+00
Iter = 807, Time = 1.810977e+00
Iter = 808, Time = 1.872547e+00
Iter = 809, Time = 1.825795e+00
Iter = 810, Time = 1.830743e+00
Iter = 811, Time = 1.805887e+00
Iter = 812, Time = 1.795939e+00
Iter = 813, Time = 1.806081e+00
Iter = 814, Time = 1.809237e+00
Iter = 815, Time = 1.804000e+00
Iter = 816, Time = 1.773252e+00
Iter = 817, Time = 1.754623e+00
Iter = 818, Time = 1.755264e+00
Iter = 819, Time = 1.745461e+00
Iter = 820, Time = 1.825399e+00
Iter = 821, Time = 1.772669e+00
Iter = 822, Time = 1.737760e+00
Iter = 823, Time = 1.772587e+00
Iter = 824, Time = 1.842876e+00
Iter = 825, Time = 1.805478e+00
Iter = 826, Time = 1.765074e+00
Iter = 827, Time = 1.788467e+00
Iter = 828, Time = 1.812631e+00
Iter = 829, Time = 1.819854e+00
Iter = 830, Time = 1.891351e+00
Iter = 831, Time = 1.821065e+00
Iter = 832, Time = 1.749523e+00
Iter = 833, Time = 1.839640e+00
Iter = 834, Time = 1.857164e+00
Iter = 835, Time = 1.790786e+00
Iter = 836, Time = 1.726090e+00
Iter = 837, Time = 1.828734e+00
Iter = 838, Time = 1.706239e+00
Iter = 839, Time = 1.751821e+00
Iter = 840, Time = 1.756295e+00
Iter = 841, Time = 1.852889e+00
Iter = 842, Time = 1.733349e+00
Iter = 843, Time = 1.803297e+00
Iter = 844, Time = 1.784352e+00
Iter = 845, Time = 1.739407e+00
Iter = 846, Time = 1.748700e+00
Iter = 847, Time = 1.763157e+00
Iter = 848, Time = 1.841750e+00
Iter = 849, Time = 1.800639e+00
Iter = 850, Time = 1.854718e+00
Iter = 851, Time = 1.806715e+00
Iter = 852, Time = 1.800184e+00
Iter = 853, Time = 1.785162e+00
Iter = 854, Time = 1.724110e+00
Iter = 855, Time = 1.803615e+00
Iter = 856, Time = 1.776756e+00
Iter = 857, Time = 1.761430e+00
Iter = 858, Time = 1.887298e+00
Iter = 859, Time = 1.762469e+00
Iter = 860, Time = 1.774831e+00
Iter = 861, Time = 1.803716e+00
Iter = 862, Time = 1.769917e+00
Iter = 863, Time = 1.764537e+00
Iter = 864, Time = 1.783069e+00
Iter = 865, Time = 1.762844e+00
Iter = 866, Time = 1.777626e+00
Iter = 867, Time = 1.855846e+00
Iter = 868, Time = 1.771869e+00
Iter = 869, Time = 1.922204e+00
Iter = 870, Time = 1.729928e+00
Iter = 871, Time = 1.768792e+00
Iter = 872, Time = 1.737458e+00
Iter = 873, Time = 1.777549e+00
Iter = 874, Time = 1.721700e+00
Iter = 875, Time = 1.795774e+00
Iter = 876, Time = 1.746625e+00
Iter = 877, Time = 1.779704e+00
Iter = 878, Time = 1.740973e+00
Iter = 879, Time = 1.726311e+00
Iter = 880, Time = 1.730543e+00
Iter = 881, Time = 1.746894e+00
Iter = 882, Time = 1.750701e+00
Iter = 883, Time = 1.780049e+00
Iter = 884, Time = 1.723888e+00
Iter = 885, Time = 1.791495e+00
Iter = 886, Time = 1.719995e+00
Iter = 887, Time = 1.759591e+00
Iter = 888, Time = 1.764078e+00
Iter = 889, Time = 1.788234e+00
Iter = 890, Time = 1.761260e+00
Iter = 891, Time = 1.795889e+00
Iter = 892, Time = 1.929733e+00
Iter = 893, Time = 1.769805e+00
Iter = 894, Time = 1.749624e+00
Iter = 895, Time = 1.823719e+00
Iter = 896, Time = 1.864776e+00
Iter = 897, Time = 1.887277e+00
Iter = 898, Time = 1.805847e+00
Iter = 899, Time = 1.790723e+00
Iter = 900, Time = 1.746257e+00
Iter 900
N-norm = 9.729845e+02, L21-norm = 4.565780e+04, rel_fval = 3.008044e-05
 epsilon = 4.107459e+03, residual = 4.107551e+03
 SNR = 2.070008e+01, aSNR = 1.901815e+01

Iter = 901, Time = 1.759612e+00
Iter = 902, Time = 1.717897e+00
Iter = 903, Time = 1.772531e+00
Iter = 904, Time = 1.752715e+00
Iter = 905, Time = 1.754972e+00
Iter = 906, Time = 1.759240e+00
Iter = 907, Time = 1.796368e+00
Iter = 908, Time = 1.778345e+00
Iter = 909, Time = 1.730855e+00
Iter = 910, Time = 1.801037e+00
Iter = 911, Time = 1.797609e+00
Iter = 912, Time = 1.778942e+00
Iter = 913, Time = 1.788370e+00
Iter = 914, Time = 1.783992e+00
Iter = 915, Time = 1.751498e+00
Iter = 916, Time = 1.751839e+00
Iter = 917, Time = 1.773751e+00
Iter = 918, Time = 1.900925e+00
Iter = 919, Time = 1.823823e+00
Iter = 920, Time = 1.834030e+00
Iter = 921, Time = 1.779234e+00
Iter = 922, Time = 1.780753e+00
Iter = 923, Time = 1.840032e+00
Iter = 924, Time = 1.755196e+00
Iter = 925, Time = 1.696293e+00
Iter = 926, Time = 1.699215e+00
Iter = 927, Time = 1.850252e+00
Iter = 928, Time = 1.850295e+00
Iter = 929, Time = 1.790950e+00
Iter = 930, Time = 1.775871e+00
Iter = 931, Time = 1.720534e+00
Iter = 932, Time = 1.754612e+00
Iter = 933, Time = 1.793932e+00
Iter = 934, Time = 1.776899e+00
Iter = 935, Time = 1.723748e+00
Iter = 936, Time = 1.697936e+00
Reweighting: 2

Iter = 937, Time = 1.840260e+00
Iter = 938, Time = 1.804942e+00
Iter = 939, Time = 1.790143e+00
Iter = 940, Time = 1.840177e+00
Iter = 941, Time = 1.792880e+00
Iter = 942, Time = 1.777449e+00
Iter = 943, Time = 1.811625e+00
Iter = 944, Time = 1.734556e+00
Iter = 945, Time = 1.771153e+00
Iter = 946, Time = 1.864613e+00
Iter = 947, Time = 1.764789e+00
Iter = 948, Time = 1.781057e+00
Iter = 949, Time = 1.779417e+00
Iter = 950, Time = 1.782355e+00
Iter = 951, Time = 1.913383e+00
Iter = 952, Time = 1.967673e+00
Iter = 953, Time = 1.814348e+00
Iter = 954, Time = 1.801100e+00
Iter = 955, Time = 1.764238e+00
Iter = 956, Time = 1.805658e+00
Iter = 957, Time = 1.806658e+00
Iter = 958, Time = 1.793000e+00
Iter = 959, Time = 1.795079e+00
Iter = 960, Time = 1.732592e+00
Iter = 961, Time = 1.755552e+00
Iter = 962, Time = 1.782238e+00
Iter = 963, Time = 1.720481e+00
Iter = 964, Time = 1.790823e+00
Iter = 965, Time = 1.815031e+00
Iter = 966, Time = 1.737873e+00
Iter = 967, Time = 1.765591e+00
Iter = 968, Time = 1.797220e+00
Iter = 969, Time = 1.737610e+00
Iter = 970, Time = 1.770672e+00
Iter = 971, Time = 1.864888e+00
Iter = 972, Time = 1.724837e+00
Iter = 973, Time = 1.795975e+00
Iter = 974, Time = 1.787034e+00
Iter = 975, Time = 1.772237e+00
Iter = 976, Time = 1.791241e+00
Iter = 977, Time = 1.786666e+00
Iter = 978, Time = 1.776664e+00
Iter = 979, Time = 1.823111e+00
Iter = 980, Time = 1.801394e+00
Iter = 981, Time = 1.710494e+00
Iter = 982, Time = 1.722273e+00
Iter = 983, Time = 1.660748e+00
Iter = 984, Time = 1.669854e+00
Iter = 985, Time = 1.778366e+00
Iter = 986, Time = 1.745404e+00
Iter = 987, Time = 1.770908e+00
Iter = 988, Time = 1.739139e+00
Iter = 989, Time = 1.724546e+00
Iter = 990, Time = 1.752849e+00
Iter = 991, Time = 1.819983e+00
Iter = 992, Time = 1.736380e+00
Iter = 993, Time = 1.857487e+00
Iter = 994, Time = 1.843144e+00
Iter = 995, Time = 1.823340e+00
Iter = 996, Time = 1.821343e+00
Iter = 997, Time = 1.895825e+00
Iter = 998, Time = 1.793431e+00
Iter = 999, Time = 1.798745e+00
Iter = 1000, Time = 1.810591e+00
Iter 1000
N-norm = 9.731685e+02, L21-norm = 4.570357e+04, rel_fval = 3.154457e-05
 epsilon = 4.107459e+03, residual = 4.106097e+03
 SNR = 2.066212e+01, aSNR = 1.899565e+01

Iter = 1001, Time = 1.752540e+00
Iter = 1002, Time = 1.799749e+00
Iter = 1003, Time = 1.792264e+00
Iter = 1004, Time = 1.909234e+00
Iter = 1005, Time = 1.769050e+00
Iter = 1006, Time = 1.783050e+00
Iter = 1007, Time = 1.703717e+00
Iter = 1008, Time = 1.761265e+00
Iter = 1009, Time = 1.767371e+00
Iter = 1010, Time = 1.684529e+00
Iter = 1011, Time = 1.678099e+00
Iter = 1012, Time = 1.777210e+00
Iter = 1013, Time = 1.770230e+00
Iter = 1014, Time = 1.786197e+00
Iter = 1015, Time = 1.761478e+00
Iter = 1016, Time = 1.741201e+00
Iter = 1017, Time = 1.751324e+00
Iter = 1018, Time = 1.742174e+00
Iter = 1019, Time = 1.824555e+00
Iter = 1020, Time = 1.818848e+00
Iter = 1021, Time = 1.824277e+00
Iter = 1022, Time = 1.813406e+00
Iter = 1023, Time = 1.816959e+00
Iter = 1024, Time = 1.779752e+00
Iter = 1025, Time = 1.747255e+00
Iter = 1026, Time = 1.769166e+00
Iter = 1027, Time = 1.711516e+00
Iter = 1028, Time = 1.739934e+00
Iter = 1029, Time = 1.783335e+00
Iter = 1030, Time = 1.741203e+00
Iter = 1031, Time = 1.693736e+00
Iter = 1032, Time = 1.702369e+00
Iter = 1033, Time = 1.748111e+00
Iter = 1034, Time = 1.727086e+00
Iter = 1035, Time = 1.780841e+00
Iter = 1036, Time = 1.743808e+00
Iter = 1037, Time = 1.754707e+00
Iter = 1038, Time = 1.715081e+00
Iter = 1039, Time = 1.758117e+00
Iter = 1040, Time = 1.823435e+00
Iter = 1041, Time = 1.791296e+00
Iter = 1042, Time = 1.837818e+00
Iter = 1043, Time = 1.813952e+00
Iter = 1044, Time = 1.762007e+00
Iter = 1045, Time = 1.773983e+00
Iter = 1046, Time = 1.749497e+00
Iter = 1047, Time = 1.730133e+00
Iter = 1048, Time = 1.886117e+00
Iter = 1049, Time = 1.805707e+00
Iter = 1050, Time = 1.725921e+00
Iter = 1051, Time = 1.684374e+00
Iter = 1052, Time = 1.774223e+00
Iter = 1053, Time = 1.745644e+00
Iter = 1054, Time = 1.747367e+00
Iter = 1055, Time = 1.789266e+00
Iter = 1056, Time = 1.768058e+00
Iter = 1057, Time = 1.830717e+00
Iter = 1058, Time = 1.759043e+00
Iter = 1059, Time = 1.751382e+00
Iter = 1060, Time = 1.739130e+00
Iter = 1061, Time = 1.885412e+00
Iter = 1062, Time = 1.765549e+00
Iter = 1063, Time = 1.706885e+00
Iter = 1064, Time = 1.719820e+00
Iter = 1065, Time = 1.747911e+00
Iter = 1066, Time = 1.723265e+00
Iter = 1067, Time = 1.749072e+00
Iter = 1068, Time = 1.730124e+00
Iter = 1069, Time = 1.763380e+00
Iter = 1070, Time = 1.747463e+00
Iter = 1071, Time = 1.801457e+00
Iter = 1072, Time = 1.765392e+00
Iter = 1073, Time = 1.752728e+00
Iter = 1074, Time = 1.728680e+00
Iter = 1075, Time = 1.798660e+00
Iter = 1076, Time = 1.829512e+00
Iter = 1077, Time = 1.731328e+00
Iter = 1078, Time = 1.782888e+00
Iter = 1079, Time = 1.765884e+00
Iter = 1080, Time = 1.765740e+00
Iter = 1081, Time = 1.778828e+00
Iter = 1082, Time = 1.771991e+00
Iter = 1083, Time = 1.770147e+00
Iter = 1084, Time = 1.785484e+00
Iter = 1085, Time = 1.719679e+00
Iter = 1086, Time = 1.801994e+00
Iter = 1087, Time = 1.866073e+00
Iter = 1088, Time = 1.762132e+00
Iter = 1089, Time = 1.727837e+00
Iter = 1090, Time = 1.775949e+00
Iter = 1091, Time = 1.734868e+00
Iter = 1092, Time = 1.794309e+00
Iter = 1093, Time = 1.821587e+00
Iter = 1094, Time = 1.783472e+00
Iter = 1095, Time = 1.806896e+00
Iter = 1096, Time = 1.739187e+00
Iter = 1097, Time = 1.758335e+00
Iter = 1098, Time = 1.802221e+00
Iter = 1099, Time = 1.790413e+00
Iter = 1100, Time = 1.801906e+00
Iter 1100
N-norm = 9.732935e+02, L21-norm = 4.573587e+04, rel_fval = 3.065716e-05
 epsilon = 4.107459e+03, residual = 4.107370e+03
 SNR = 2.061996e+01, aSNR = 1.896256e+01

Iter = 1101, Time = 1.738082e+00
Iter = 1102, Time = 1.773881e+00
Iter = 1103, Time = 1.786601e+00
Iter = 1104, Time = 1.792925e+00
Iter = 1105, Time = 1.787775e+00
Iter = 1106, Time = 1.737316e+00
Iter = 1107, Time = 1.715578e+00
Iter = 1108, Time = 1.748251e+00
Iter = 1109, Time = 1.774662e+00
Iter = 1110, Time = 1.783273e+00
Iter = 1111, Time = 1.755024e+00
Iter = 1112, Time = 1.724633e+00
Iter = 1113, Time = 1.764418e+00
Iter = 1114, Time = 1.831935e+00
Iter = 1115, Time = 1.795836e+00
Iter = 1116, Time = 1.771650e+00
Iter = 1117, Time = 1.774208e+00
Iter = 1118, Time = 1.741490e+00
Iter = 1119, Time = 1.761536e+00
Iter = 1120, Time = 1.722735e+00
Iter = 1121, Time = 1.771617e+00
Iter = 1122, Time = 1.713237e+00
Iter = 1123, Time = 1.836604e+00
Iter = 1124, Time = 1.712634e+00
Iter = 1125, Time = 1.723398e+00
Iter = 1126, Time = 1.685403e+00
Iter = 1127, Time = 1.742816e+00
Iter = 1128, Time = 1.753098e+00
Iter = 1129, Time = 1.838271e+00
Iter = 1130, Time = 1.761704e+00
Iter = 1131, Time = 1.804439e+00
Iter = 1132, Time = 1.783107e+00
Iter = 1133, Time = 1.924429e+00
Iter = 1134, Time = 1.867196e+00
Iter = 1135, Time = 1.785332e+00
Iter = 1136, Time = 1.715397e+00
Iter = 1137, Time = 1.719402e+00
Iter = 1138, Time = 1.758874e+00
Iter = 1139, Time = 1.781423e+00
Iter = 1140, Time = 1.749335e+00
Iter = 1141, Time = 1.739529e+00
Iter = 1142, Time = 1.766442e+00
Iter = 1143, Time = 1.777816e+00
Iter = 1144, Time = 1.797052e+00
Iter = 1145, Time = 1.868853e+00
Iter = 1146, Time = 1.808479e+00
Iter = 1147, Time = 1.745716e+00
Iter = 1148, Time = 1.729841e+00
Iter = 1149, Time = 1.765547e+00
Iter = 1150, Time = 1.742441e+00
Iter = 1151, Time = 1.759008e+00
Iter = 1152, Time = 1.735166e+00
Iter = 1153, Time = 1.887355e+00
Iter = 1154, Time = 1.808862e+00
Iter = 1155, Time = 1.826133e+00
Iter = 1156, Time = 1.852907e+00
Iter = 1157, Time = 1.833303e+00
Iter = 1158, Time = 1.807192e+00
Iter = 1159, Time = 1.749299e+00
Iter = 1160, Time = 1.746428e+00
Iter = 1161, Time = 1.753988e+00
Iter = 1162, Time = 1.764787e+00
Iter = 1163, Time = 1.734810e+00
Iter = 1164, Time = 1.841355e+00
Iter = 1165, Time = 1.805217e+00
Iter = 1166, Time = 1.777808e+00
Iter = 1167, Time = 1.785774e+00
Iter = 1168, Time = 1.781246e+00
Iter = 1169, Time = 1.749539e+00
Iter = 1170, Time = 1.824104e+00
Iter = 1171, Time = 1.729017e+00
Iter = 1172, Time = 1.787589e+00
Iter = 1173, Time = 1.816166e+00
Iter = 1174, Time = 1.792635e+00
Iter = 1175, Time = 1.803242e+00
Iter = 1176, Time = 1.816025e+00
Iter = 1177, Time = 1.790771e+00
Iter = 1178, Time = 1.846284e+00
Iter = 1179, Time = 1.773846e+00
Iter = 1180, Time = 1.705039e+00
Iter = 1181, Time = 1.832015e+00
Iter = 1182, Time = 1.735887e+00
Iter = 1183, Time = 1.779622e+00
Iter = 1184, Time = 1.807604e+00
Iter = 1185, Time = 1.755152e+00
Iter = 1186, Time = 1.778010e+00
Iter = 1187, Time = 1.742549e+00
Iter = 1188, Time = 1.743442e+00
Iter = 1189, Time = 1.777013e+00
Iter = 1190, Time = 1.800625e+00
Iter = 1191, Time = 1.756630e+00
Iter = 1192, Time = 1.759282e+00
Iter = 1193, Time = 1.786700e+00
Iter = 1194, Time = 1.996455e+00
Iter = 1195, Time = 1.795699e+00
Iter = 1196, Time = 1.752121e+00
Iter = 1197, Time = 1.777678e+00
Iter = 1198, Time = 1.927314e+00
Iter = 1199, Time = 1.836821e+00
Iter = 1200, Time = 1.749457e+00
Iter 1200
N-norm = 9.734343e+02, L21-norm = 4.577009e+04, rel_fval = 3.307669e-05
 epsilon = 4.107459e+03, residual = 4.107496e+03
 SNR = 2.057446e+01, aSNR = 1.892607e+01

Iter = 1201, Time = 1.800875e+00
Iter = 1202, Time = 1.775486e+00
Iter = 1203, Time = 1.859894e+00
Iter = 1204, Time = 1.715446e+00
Iter = 1205, Time = 1.791354e+00
Iter = 1206, Time = 1.741290e+00
Iter = 1207, Time = 1.742394e+00
Iter = 1208, Time = 1.832276e+00
Iter = 1209, Time = 1.737767e+00
Iter = 1210, Time = 1.746391e+00
Iter = 1211, Time = 1.790124e+00
Iter = 1212, Time = 1.774897e+00
Iter = 1213, Time = 1.749545e+00
Iter = 1214, Time = 1.712676e+00
Iter = 1215, Time = 1.702204e+00
Iter = 1216, Time = 1.756922e+00
Iter = 1217, Time = 1.734385e+00
Iter = 1218, Time = 1.929324e+00
Iter = 1219, Time = 1.769779e+00
Iter = 1220, Time = 1.769462e+00
Iter = 1221, Time = 1.730779e+00
Iter = 1222, Time = 1.731261e+00
Iter = 1223, Time = 1.740928e+00
Iter = 1224, Time = 1.784459e+00
Iter = 1225, Time = 1.725233e+00
Iter = 1226, Time = 1.741134e+00
Iter = 1227, Time = 1.773484e+00
Iter = 1228, Time = 1.736504e+00
Iter = 1229, Time = 1.801454e+00
Iter = 1230, Time = 1.793567e+00
Iter = 1231, Time = 1.746739e+00
Iter = 1232, Time = 1.826782e+00
Iter = 1233, Time = 1.810235e+00
Iter = 1234, Time = 1.793688e+00
Iter = 1235, Time = 1.755434e+00
Iter = 1236, Time = 1.682454e+00
Reweighting: 3

Iter = 1237, Time = 1.786660e+00
Iter = 1238, Time = 1.770068e+00
Iter = 1239, Time = 1.740221e+00
Iter = 1240, Time = 1.729481e+00
Iter = 1241, Time = 1.710103e+00
Iter = 1242, Time = 1.714113e+00
Iter = 1243, Time = 1.760448e+00
Iter = 1244, Time = 3.212978e+00
Iter = 1245, Time = 1.768195e+00
Iter = 1246, Time = 1.784143e+00
Iter = 1247, Time = 1.718551e+00
Iter = 1248, Time = 1.723153e+00
Iter = 1249, Time = 1.839046e+00
Iter = 1250, Time = 1.750379e+00
Iter = 1251, Time = 1.891606e+00
Iter = 1252, Time = 1.773181e+00
Iter = 1253, Time = 1.840534e+00
Iter = 1254, Time = 1.796736e+00
Iter = 1255, Time = 1.750415e+00
Iter = 1256, Time = 1.738971e+00
Iter = 1257, Time = 1.783080e+00
Iter = 1258, Time = 1.766892e+00
Iter = 1259, Time = 1.765743e+00
Iter = 1260, Time = 1.796203e+00
Iter = 1261, Time = 1.812515e+00
Iter = 1262, Time = 1.754581e+00
Iter = 1263, Time = 1.892731e+00
Iter = 1264, Time = 1.921013e+00
Iter = 1265, Time = 1.764178e+00
Iter = 1266, Time = 1.801906e+00
Iter = 1267, Time = 1.818320e+00
Iter = 1268, Time = 1.820495e+00
Iter = 1269, Time = 1.801581e+00
Iter = 1270, Time = 1.818482e+00
Iter = 1271, Time = 1.760192e+00
Iter = 1272, Time = 1.811688e+00
Iter = 1273, Time = 1.792619e+00
Iter = 1274, Time = 1.791476e+00
Iter = 1275, Time = 1.791556e+00
Iter = 1276, Time = 1.934896e+00
Iter = 1277, Time = 1.730996e+00
Iter = 1278, Time = 1.785695e+00
Iter = 1279, Time = 1.788576e+00
Iter = 1280, Time = 1.770992e+00
Iter = 1281, Time = 1.800663e+00
Iter = 1282, Time = 1.803096e+00
Iter = 1283, Time = 1.804597e+00
Iter = 1284, Time = 1.728425e+00
Iter = 1285, Time = 1.797173e+00
Iter = 1286, Time = 1.784667e+00
Iter = 1287, Time = 1.790801e+00
Iter = 1288, Time = 1.778567e+00
Iter = 1289, Time = 1.787131e+00
Iter = 1290, Time = 1.762901e+00
Iter = 1291, Time = 1.809556e+00
Iter = 1292, Time = 1.735354e+00
Iter = 1293, Time = 1.764510e+00
Iter = 1294, Time = 1.733821e+00
Iter = 1295, Time = 1.774550e+00
Iter = 1296, Time = 1.751690e+00
Iter = 1297, Time = 1.719356e+00
Iter = 1298, Time = 1.789620e+00
Iter = 1299, Time = 1.774036e+00
Iter = 1300, Time = 1.774347e+00
Iter 1300
N-norm = 9.736351e+02, L21-norm = 4.580429e+04, rel_fval = 4.388382e-05
 epsilon = 4.107459e+03, residual = 4.106378e+03
 SNR = 2.053895e+01, aSNR = 1.890495e+01

Iter = 1301, Time = 1.711172e+00
Iter = 1302, Time = 1.730219e+00
Iter = 1303, Time = 1.730692e+00
Iter = 1304, Time = 1.756498e+00
Iter = 1305, Time = 1.813967e+00
Iter = 1306, Time = 1.772715e+00
Iter = 1307, Time = 1.737741e+00
Iter = 1308, Time = 1.704623e+00
Iter = 1309, Time = 1.850550e+00
Iter = 1310, Time = 1.738156e+00
Iter = 1311, Time = 1.880891e+00
Iter = 1312, Time = 1.788366e+00
Iter = 1313, Time = 1.825378e+00
Iter = 1314, Time = 1.835569e+00
Iter = 1315, Time = 1.783146e+00
Iter = 1316, Time = 1.864010e+00
Iter = 1317, Time = 1.776014e+00
Iter = 1318, Time = 1.784062e+00
Iter = 1319, Time = 1.915145e+00
Iter = 1320, Time = 1.701007e+00
Iter = 1321, Time = 1.772652e+00
Iter = 1322, Time = 1.767632e+00
Iter = 1323, Time = 1.781432e+00
Iter = 1324, Time = 1.773031e+00
Iter = 1325, Time = 1.788957e+00
Iter = 1326, Time = 1.759930e+00
Iter = 1327, Time = 1.746774e+00
Iter = 1328, Time = 1.787890e+00
Iter = 1329, Time = 1.750688e+00
Iter = 1330, Time = 1.721422e+00
Iter = 1331, Time = 1.726206e+00
Iter = 1332, Time = 1.705800e+00
Iter = 1333, Time = 1.775790e+00
Iter = 1334, Time = 1.927531e+00
Iter = 1335, Time = 1.777830e+00
Iter = 1336, Time = 1.757423e+00
Iter = 1337, Time = 1.734187e+00
Iter = 1338, Time = 1.733278e+00
Iter = 1339, Time = 1.718200e+00
Iter = 1340, Time = 1.791838e+00
Iter = 1341, Time = 1.866869e+00
Iter = 1342, Time = 1.846212e+00
Iter = 1343, Time = 1.858909e+00
Iter = 1344, Time = 1.805411e+00
Iter = 1345, Time = 1.788012e+00
Iter = 1346, Time = 1.745487e+00
Iter = 1347, Time = 1.725033e+00
Iter = 1348, Time = 1.658829e+00
Iter = 1349, Time = 1.710482e+00
Iter = 1350, Time = 1.708199e+00
Iter = 1351, Time = 1.726155e+00
Iter = 1352, Time = 1.738626e+00
Iter = 1353, Time = 1.755390e+00
Iter = 1354, Time = 1.794045e+00
Iter = 1355, Time = 1.714699e+00
Iter = 1356, Time = 1.702913e+00
Iter = 1357, Time = 1.701601e+00
Iter = 1358, Time = 1.712669e+00
Iter = 1359, Time = 1.698078e+00
Iter = 1360, Time = 1.770266e+00
Iter = 1361, Time = 1.700684e+00
Iter = 1362, Time = 1.818369e+00
Iter = 1363, Time = 1.750118e+00
Iter = 1364, Time = 1.753147e+00
Iter = 1365, Time = 1.798795e+00
Iter = 1366, Time = 1.733633e+00
Iter = 1367, Time = 1.716993e+00
Iter = 1368, Time = 1.825615e+00
Iter = 1369, Time = 1.793545e+00
Iter = 1370, Time = 1.730393e+00
Iter = 1371, Time = 1.750628e+00
Iter = 1372, Time = 1.812519e+00
Iter = 1373, Time = 1.769636e+00
Iter = 1374, Time = 1.769900e+00
Iter = 1375, Time = 1.766185e+00
Iter = 1376, Time = 1.746603e+00
Iter = 1377, Time = 1.782807e+00
Iter = 1378, Time = 1.806665e+00
Iter = 1379, Time = 1.776424e+00
Iter = 1380, Time = 1.716068e+00
Iter = 1381, Time = 1.732226e+00
Iter = 1382, Time = 1.775871e+00
Iter = 1383, Time = 1.711345e+00
Iter = 1384, Time = 1.741861e+00
Iter = 1385, Time = 1.749313e+00
Iter = 1386, Time = 1.734867e+00
Iter = 1387, Time = 1.642751e+00
Iter = 1388, Time = 1.706814e+00
Iter = 1389, Time = 1.702845e+00
Iter = 1390, Time = 1.686481e+00
Iter = 1391, Time = 1.748961e+00
Iter = 1392, Time = 1.766900e+00
Iter = 1393, Time = 1.736760e+00
Iter = 1394, Time = 1.771371e+00
Iter = 1395, Time = 1.764906e+00
Iter = 1396, Time = 1.748167e+00
Iter = 1397, Time = 1.804106e+00
Iter = 1398, Time = 1.715281e+00
Iter = 1399, Time = 1.719177e+00
Iter = 1400, Time = 1.756796e+00
Iter 1400
N-norm = 9.737477e+02, L21-norm = 4.583273e+04, rel_fval = 4.019584e-05
 epsilon = 4.107459e+03, residual = 4.107348e+03
 SNR = 2.050121e+01, aSNR = 1.887566e+01

Iter = 1401, Time = 1.642218e+00
Iter = 1402, Time = 1.722110e+00
Iter = 1403, Time = 1.819499e+00
Iter = 1404, Time = 1.735756e+00
Iter = 1405, Time = 1.763442e+00
Iter = 1406, Time = 1.872117e+00
Iter = 1407, Time = 1.802940e+00
Iter = 1408, Time = 1.808508e+00
Iter = 1409, Time = 1.783117e+00
Iter = 1410, Time = 1.726846e+00
Iter = 1411, Time = 1.774968e+00
Iter = 1412, Time = 1.731355e+00
Iter = 1413, Time = 1.769939e+00
Iter = 1414, Time = 1.735319e+00
Iter = 1415, Time = 1.732787e+00
Iter = 1416, Time = 1.724662e+00
Iter = 1417, Time = 1.787071e+00
Iter = 1418, Time = 1.743282e+00
Iter = 1419, Time = 1.730759e+00
Iter = 1420, Time = 1.750609e+00
Iter = 1421, Time = 1.773513e+00
Iter = 1422, Time = 1.753991e+00
Iter = 1423, Time = 1.731781e+00
Iter = 1424, Time = 1.775562e+00
Iter = 1425, Time = 1.790924e+00
Iter = 1426, Time = 1.713877e+00
Iter = 1427, Time = 1.791653e+00
Iter = 1428, Time = 1.735499e+00
Iter = 1429, Time = 1.784270e+00
Iter = 1430, Time = 1.672536e+00
Iter = 1431, Time = 1.734679e+00
Iter = 1432, Time = 1.673113e+00
Iter = 1433, Time = 1.769245e+00
Iter = 1434, Time = 1.761424e+00
Iter = 1435, Time = 1.761591e+00
Iter = 1436, Time = 1.773461e+00
Iter = 1437, Time = 1.802316e+00
Iter = 1438, Time = 1.760519e+00
Iter = 1439, Time = 1.750766e+00
Iter = 1440, Time = 1.762899e+00
Iter = 1441, Time = 1.731267e+00
Iter = 1442, Time = 1.754379e+00
Iter = 1443, Time = 1.798670e+00
Iter = 1444, Time = 1.731366e+00
Iter = 1445, Time = 1.717100e+00
Iter = 1446, Time = 1.779285e+00
Iter = 1447, Time = 1.724903e+00
Iter = 1448, Time = 1.707575e+00
Iter = 1449, Time = 1.712371e+00
Iter = 1450, Time = 1.635065e+00
Iter = 1451, Time = 1.694847e+00
Iter = 1452, Time = 1.716513e+00
Iter = 1453, Time = 1.781110e+00
Iter = 1454, Time = 1.692198e+00
Iter = 1455, Time = 1.779909e+00
Iter = 1456, Time = 1.763112e+00
Iter = 1457, Time = 1.692001e+00
Iter = 1458, Time = 1.858536e+00
Iter = 1459, Time = 1.716491e+00
Iter = 1460, Time = 1.717145e+00
Iter = 1461, Time = 1.693038e+00
Iter = 1462, Time = 1.669488e+00
Iter = 1463, Time = 1.742777e+00
Iter = 1464, Time = 1.721956e+00
Iter = 1465, Time = 1.841682e+00
Iter = 1466, Time = 1.758923e+00
Iter = 1467, Time = 1.717414e+00
Iter = 1468, Time = 1.703096e+00
Iter = 1469, Time = 1.775551e+00
Iter = 1470, Time = 1.703273e+00
Iter = 1471, Time = 1.761636e+00
Iter = 1472, Time = 1.750400e+00
Iter = 1473, Time = 1.785167e+00
Iter = 1474, Time = 1.755433e+00
Iter = 1475, Time = 1.719019e+00
Iter = 1476, Time = 1.755579e+00
Iter = 1477, Time = 1.749629e+00
Iter = 1478, Time = 1.690709e+00
Iter = 1479, Time = 1.699764e+00
Iter = 1480, Time = 1.833896e+00
Iter = 1481, Time = 1.798376e+00
Iter = 1482, Time = 1.801220e+00
Iter = 1483, Time = 1.776281e+00
Iter = 1484, Time = 1.865332e+00
Iter = 1485, Time = 1.721530e+00
Iter = 1486, Time = 1.729264e+00
Iter = 1487, Time = 1.716981e+00
Iter = 1488, Time = 1.839299e+00
Iter = 1489, Time = 1.775403e+00
Iter = 1490, Time = 1.689745e+00
Iter = 1491, Time = 1.695564e+00
Iter = 1492, Time = 1.779759e+00
Iter = 1493, Time = 1.704086e+00
Iter = 1494, Time = 1.722596e+00
Iter = 1495, Time = 1.716175e+00
Iter = 1496, Time = 1.729368e+00
Iter = 1497, Time = 1.784213e+00
Iter = 1498, Time = 1.761065e+00
Iter = 1499, Time = 1.775390e+00
Iter = 1500, Time = 1.758999e+00
Iter 1500
N-norm = 9.738625e+02, L21-norm = 4.586416e+04, rel_fval = 3.542388e-05
 epsilon = 4.107459e+03, residual = 4.107324e+03
 SNR = 2.045995e+01, aSNR = 1.884361e+01

Iter = 1501, Time = 1.770941e+00
Iter = 1502, Time = 1.727792e+00
Iter = 1503, Time = 1.738251e+00
Iter = 1504, Time = 1.692960e+00
Iter = 1505, Time = 1.710023e+00
Iter = 1506, Time = 1.786596e+00
Iter = 1507, Time = 1.780447e+00
Iter = 1508, Time = 1.771069e+00
Iter = 1509, Time = 1.798627e+00
Iter = 1510, Time = 1.759756e+00
Iter = 1511, Time = 1.795521e+00
Iter = 1512, Time = 1.806070e+00
Iter = 1513, Time = 1.778942e+00
Iter = 1514, Time = 1.743453e+00
Iter = 1515, Time = 1.725219e+00
Iter = 1516, Time = 1.683909e+00
Iter = 1517, Time = 1.703190e+00
Iter = 1518, Time = 1.702595e+00
Iter = 1519, Time = 1.753621e+00
Iter = 1520, Time = 1.729364e+00
Iter = 1521, Time = 1.692033e+00
Iter = 1522, Time = 1.785176e+00
Iter = 1523, Time = 1.754471e+00
Iter = 1524, Time = 1.795635e+00
Iter = 1525, Time = 1.754249e+00
Iter = 1526, Time = 1.781681e+00
Iter = 1527, Time = 1.696318e+00
Iter = 1528, Time = 1.680056e+00
Iter = 1529, Time = 1.757426e+00
Iter = 1530, Time = 1.749266e+00
Iter = 1531, Time = 1.827516e+00
Iter = 1532, Time = 1.723700e+00
Iter = 1533, Time = 1.794084e+00
Iter = 1534, Time = 1.784275e+00
Iter = 1535, Time = 1.836279e+00
Iter = 1536, Time = 1.886841e+00
Reweighting: 4

Iter = 1537, Time = 1.805178e+00
Iter = 1538, Time = 1.815806e+00
Iter = 1539, Time = 1.744463e+00
Iter = 1540, Time = 1.841985e+00
Iter = 1541, Time = 1.730879e+00
Iter = 1542, Time = 1.784355e+00
Iter = 1543, Time = 1.728287e+00
Iter = 1544, Time = 1.797322e+00
Iter = 1545, Time = 1.847857e+00
Iter = 1546, Time = 1.872279e+00
Iter = 1547, Time = 1.832813e+00
Iter = 1548, Time = 1.764949e+00
Iter = 1549, Time = 1.763670e+00
Iter = 1550, Time = 1.801655e+00
Iter = 1551, Time = 1.785845e+00
Iter = 1552, Time = 1.801830e+00
Iter = 1553, Time = 1.888312e+00
Iter = 1554, Time = 1.726731e+00
Iter = 1555, Time = 1.774513e+00
Iter = 1556, Time = 1.680213e+00
Iter = 1557, Time = 1.793184e+00
Iter = 1558, Time = 1.829439e+00
Iter = 1559, Time = 1.719236e+00
Iter = 1560, Time = 1.774361e+00
Iter = 1561, Time = 1.805992e+00
Iter = 1562, Time = 1.853345e+00
Iter = 1563, Time = 1.841481e+00
Iter = 1564, Time = 1.766652e+00
Iter = 1565, Time = 1.758483e+00
Iter = 1566, Time = 1.758589e+00
Iter = 1567, Time = 1.914574e+00
Iter = 1568, Time = 1.867680e+00
Iter = 1569, Time = 1.811435e+00
Iter = 1570, Time = 1.757818e+00
Iter = 1571, Time = 1.792813e+00
Iter = 1572, Time = 1.770034e+00
Iter = 1573, Time = 1.759660e+00
Iter = 1574, Time = 1.807325e+00
Iter = 1575, Time = 1.796259e+00
Iter = 1576, Time = 1.757545e+00
Iter = 1577, Time = 1.783757e+00
Iter = 1578, Time = 1.777857e+00
Iter = 1579, Time = 1.746083e+00
Iter = 1580, Time = 1.799121e+00
Iter = 1581, Time = 1.789550e+00
Iter = 1582, Time = 1.786747e+00
Iter = 1583, Time = 1.771413e+00
Iter = 1584, Time = 1.831056e+00
Iter = 1585, Time = 1.767224e+00
Iter = 1586, Time = 1.813010e+00
Iter = 1587, Time = 1.703212e+00
Iter = 1588, Time = 1.784153e+00
Iter = 1589, Time = 1.873404e+00
Iter = 1590, Time = 1.680765e+00
Iter = 1591, Time = 1.765235e+00
Iter = 1592, Time = 1.758912e+00
Iter = 1593, Time = 1.783202e+00
Iter = 1594, Time = 1.736473e+00
Iter = 1595, Time = 1.774433e+00
Iter = 1596, Time = 1.747374e+00
Iter = 1597, Time = 1.899948e+00
Iter = 1598, Time = 1.751569e+00
Iter = 1599, Time = 1.775588e+00
Iter = 1600, Time = 1.994202e+00
Iter 1600
N-norm = 9.740396e+02, L21-norm = 4.589661e+04, rel_fval = 3.768724e-05
 epsilon = 4.107459e+03, residual = 4.106551e+03
 SNR = 2.042838e+01, aSNR = 1.882533e+01

Iter = 1601, Time = 1.751466e+00
Iter = 1602, Time = 1.797558e+00
Iter = 1603, Time = 1.827179e+00
Iter = 1604, Time = 1.874432e+00
Iter = 1605, Time = 1.858216e+00
Iter = 1606, Time = 1.939832e+00
Iter = 1607, Time = 1.902794e+00
Iter = 1608, Time = 1.835663e+00
Iter = 1609, Time = 1.838914e+00
Iter = 1610, Time = 1.848032e+00
Iter = 1611, Time = 1.782964e+00
Iter = 1612, Time = 1.961938e+00
Iter = 1613, Time = 1.809402e+00
Iter = 1614, Time = 1.765767e+00
Iter = 1615, Time = 1.777044e+00
Iter = 1616, Time = 1.798000e+00
Iter = 1617, Time = 1.815034e+00
Iter = 1618, Time = 1.767669e+00
Iter = 1619, Time = 1.810262e+00
Iter = 1620, Time = 1.826154e+00
Iter = 1621, Time = 1.823297e+00
Iter = 1622, Time = 1.752789e+00
Iter = 1623, Time = 1.887486e+00
Iter = 1624, Time = 1.852946e+00
Iter = 1625, Time = 1.797669e+00
Iter = 1626, Time = 1.810330e+00
Iter = 1627, Time = 1.821464e+00
Iter = 1628, Time = 1.859233e+00
Iter = 1629, Time = 1.912650e+00
Iter = 1630, Time = 1.834832e+00
Iter = 1631, Time = 1.820854e+00
Iter = 1632, Time = 1.804581e+00
Iter = 1633, Time = 1.781549e+00
Iter = 1634, Time = 1.826970e+00
Iter = 1635, Time = 1.861317e+00
Iter = 1636, Time = 1.904336e+00
Iter = 1637, Time = 1.811205e+00
Iter = 1638, Time = 1.840357e+00
Iter = 1639, Time = 1.828767e+00
Iter = 1640, Time = 1.770472e+00
Iter = 1641, Time = 1.830016e+00
Iter = 1642, Time = 1.797081e+00
Iter = 1643, Time = 1.955569e+00
Iter = 1644, Time = 1.805721e+00
Iter = 1645, Time = 1.867619e+00
Iter = 1646, Time = 1.814692e+00
Iter = 1647, Time = 1.879757e+00
Iter = 1648, Time = 1.869845e+00
Iter = 1649, Time = 1.814098e+00
Iter = 1650, Time = 1.873060e+00
Iter = 1651, Time = 1.886592e+00
Iter = 1652, Time = 1.807604e+00
Iter = 1653, Time = 1.832470e+00
Iter = 1654, Time = 1.839796e+00
Iter = 1655, Time = 1.801831e+00
Iter = 1656, Time = 1.750314e+00
Iter = 1657, Time = 1.822975e+00
Iter = 1658, Time = 1.807113e+00
Iter = 1659, Time = 1.764602e+00
Iter = 1660, Time = 1.881269e+00
Iter = 1661, Time = 1.833091e+00
Iter = 1662, Time = 1.998204e+00
Iter = 1663, Time = 1.845847e+00
Iter = 1664, Time = 1.841154e+00
Iter = 1665, Time = 1.855605e+00
Iter = 1666, Time = 1.924528e+00
Iter = 1667, Time = 1.864059e+00
Iter = 1668, Time = 1.905230e+00
Iter = 1669, Time = 1.818075e+00
Iter = 1670, Time = 1.843999e+00
Iter = 1671, Time = 1.890704e+00
Iter = 1672, Time = 1.838915e+00
Iter = 1673, Time = 1.758865e+00
Iter = 1674, Time = 1.797579e+00
Iter = 1675, Time = 1.765108e+00
Iter = 1676, Time = 1.757967e+00
Iter = 1677, Time = 1.740582e+00
Iter = 1678, Time = 1.709378e+00
Iter = 1679, Time = 1.821391e+00
Iter = 1680, Time = 1.824453e+00
Iter = 1681, Time = 1.810007e+00
Iter = 1682, Time = 1.849545e+00
Iter = 1683, Time = 2.006481e+00
Iter = 1684, Time = 1.794058e+00
Iter = 1685, Time = 1.815657e+00
Iter = 1686, Time = 1.811514e+00
Iter = 1687, Time = 1.772484e+00
Iter = 1688, Time = 1.843285e+00
Iter = 1689, Time = 1.933961e+00
Iter = 1690, Time = 1.819463e+00
Iter = 1691, Time = 1.858795e+00
Iter = 1692, Time = 1.800412e+00
Iter = 1693, Time = 1.779559e+00
Iter = 1694, Time = 1.823426e+00
Iter = 1695, Time = 1.952869e+00
Iter = 1696, Time = 1.780706e+00
Iter = 1697, Time = 1.820234e+00
Iter = 1698, Time = 1.851965e+00
Iter = 1699, Time = 1.826529e+00
Iter = 1700, Time = 1.797874e+00
Iter 1700
N-norm = 9.741443e+02, L21-norm = 4.592263e+04, rel_fval = 3.694298e-05
 epsilon = 4.107459e+03, residual = 4.107307e+03
 SNR = 2.039690e+01, aSNR = 1.880061e+01

Iter = 1701, Time = 1.800278e+00
Iter = 1702, Time = 1.836022e+00
Iter = 1703, Time = 1.769380e+00
Iter = 1704, Time = 1.776850e+00
Iter = 1705, Time = 1.795338e+00
Iter = 1706, Time = 1.737637e+00
Iter = 1707, Time = 1.808540e+00
Iter = 1708, Time = 1.817582e+00
Iter = 1709, Time = 1.759468e+00
Iter = 1710, Time = 1.766145e+00
Iter = 1711, Time = 1.880305e+00
Iter = 1712, Time = 1.815882e+00
Iter = 1713, Time = 1.850933e+00
Iter = 1714, Time = 1.768255e+00
Iter = 1715, Time = 1.813542e+00
Iter = 1716, Time = 1.784864e+00
Iter = 1717, Time = 1.762749e+00
Iter = 1718, Time = 1.741965e+00
Iter = 1719, Time = 1.787826e+00
Iter = 1720, Time = 1.745168e+00
Iter = 1721, Time = 1.704712e+00
Iter = 1722, Time = 1.770408e+00
Iter = 1723, Time = 1.821398e+00
Iter = 1724, Time = 1.793499e+00
Iter = 1725, Time = 1.755784e+00
Iter = 1726, Time = 1.818888e+00
Iter = 1727, Time = 1.839504e+00
Iter = 1728, Time = 1.812145e+00
Iter = 1729, Time = 1.766769e+00
Iter = 1730, Time = 1.846023e+00
Iter = 1731, Time = 1.759575e+00
Iter = 1732, Time = 1.759867e+00
Iter = 1733, Time = 1.808009e+00
Iter = 1734, Time = 1.809972e+00
Iter = 1735, Time = 1.909127e+00
Iter = 1736, Time = 1.761758e+00
Iter = 1737, Time = 1.742098e+00
Iter = 1738, Time = 1.777409e+00
Iter = 1739, Time = 1.818891e+00
Iter = 1740, Time = 1.810030e+00
Iter = 1741, Time = 1.839811e+00
Iter = 1742, Time = 1.780594e+00
Iter = 1743, Time = 1.797582e+00
Iter = 1744, Time = 2.412179e+00
Iter = 1745, Time = 1.802815e+00
Iter = 1746, Time = 1.776650e+00
Iter = 1747, Time = 1.785280e+00
Iter = 1748, Time = 1.802726e+00
Iter = 1749, Time = 1.816987e+00
Iter = 1750, Time = 1.794018e+00
Iter = 1751, Time = 1.807035e+00
Iter = 1752, Time = 1.852514e+00
Iter = 1753, Time = 1.819350e+00
Iter = 1754, Time = 1.784297e+00
Iter = 1755, Time = 1.852104e+00
Iter = 1756, Time = 1.857242e+00
Iter = 1757, Time = 1.810672e+00
Iter = 1758, Time = 1.819868e+00
Iter = 1759, Time = 1.878289e+00
Iter = 1760, Time = 1.845539e+00
Iter = 1761, Time = 1.742847e+00
Iter = 1762, Time = 1.777980e+00
Iter = 1763, Time = 1.793479e+00
Iter = 1764, Time = 1.790663e+00
Iter = 1765, Time = 1.892072e+00
Iter = 1766, Time = 1.831719e+00
Iter = 1767, Time = 1.805089e+00
Iter = 1768, Time = 1.764158e+00
Iter = 1769, Time = 1.809040e+00
Iter = 1770, Time = 1.798984e+00
Iter = 1771, Time = 1.851482e+00
Iter = 1772, Time = 1.789739e+00
Iter = 1773, Time = 1.787132e+00
Iter = 1774, Time = 1.721987e+00
Iter = 1775, Time = 1.801377e+00
Iter = 1776, Time = 1.814372e+00
Iter = 1777, Time = 1.773759e+00
Iter = 1778, Time = 1.802669e+00
Iter = 1779, Time = 1.787493e+00
Iter = 1780, Time = 1.810805e+00
Iter = 1781, Time = 1.788064e+00
Iter = 1782, Time = 1.798021e+00
Iter = 1783, Time = 1.860983e+00
Iter = 1784, Time = 1.778308e+00
Iter = 1785, Time = 1.812268e+00
Iter = 1786, Time = 1.809156e+00
Iter = 1787, Time = 1.727153e+00
Iter = 1788, Time = 1.739928e+00
Iter = 1789, Time = 1.755864e+00
Iter = 1790, Time = 1.820491e+00
Iter = 1791, Time = 1.749284e+00
Iter = 1792, Time = 1.824872e+00
Iter = 1793, Time = 1.781372e+00
Iter = 1794, Time = 1.783586e+00
Iter = 1795, Time = 1.794929e+00
Iter = 1796, Time = 1.852849e+00
Iter = 1797, Time = 1.866749e+00
Iter = 1798, Time = 1.743376e+00
Iter = 1799, Time = 1.828863e+00
Iter = 1800, Time = 1.804421e+00
Iter 1800
N-norm = 9.742411e+02, L21-norm = 4.595289e+04, rel_fval = 3.553899e-05
 epsilon = 4.107459e+03, residual = 4.107358e+03
 SNR = 2.036300e+01, aSNR = 1.877408e+01

Iter = 1801, Time = 1.724616e+00
Iter = 1802, Time = 1.757792e+00
Iter = 1803, Time = 1.813780e+00
Iter = 1804, Time = 1.885558e+00
Iter = 1805, Time = 1.768448e+00
Iter = 1806, Time = 1.836203e+00
Iter = 1807, Time = 1.805307e+00
Iter = 1808, Time = 1.855410e+00
Iter = 1809, Time = 1.783504e+00
Iter = 1810, Time = 1.845931e+00
Iter = 1811, Time = 1.821050e+00
Iter = 1812, Time = 1.957456e+00
Iter = 1813, Time = 1.981337e+00
Iter = 1814, Time = 1.763526e+00
Iter = 1815, Time = 1.730183e+00
Iter = 1816, Time = 1.784280e+00
Iter = 1817, Time = 1.823456e+00
Iter = 1818, Time = 1.785830e+00
Iter = 1819, Time = 1.820066e+00
Iter = 1820, Time = 1.815253e+00
Iter = 1821, Time = 1.834856e+00
Iter = 1822, Time = 1.842911e+00
Iter = 1823, Time = 1.843161e+00
Iter = 1824, Time = 1.889109e+00
Iter = 1825, Time = 1.832064e+00
Iter = 1826, Time = 1.762807e+00
Iter = 1827, Time = 1.824886e+00
Iter = 1828, Time = 1.871401e+00
Iter = 1829, Time = 1.831051e+00
Iter = 1830, Time = 1.773545e+00
Iter = 1831, Time = 1.790977e+00
Iter = 1832, Time = 1.834885e+00
Iter = 1833, Time = 1.782666e+00
Iter = 1834, Time = 1.769882e+00
Iter = 1835, Time = 1.797227e+00
Iter = 1836, Time = 1.871693e+00
Reweighting: 5



 No more reweights 

Elapsed time is 3500.141969 seconds.
Maximum number of iterations reached
Iter 1836
N-norm = 9.742761e+02, L21-norm = 4.596478e+04, rel_fval = 3.646095e-05
epsilon = 4.107459e+03, residual = 4.107358e+03
SNR = 2.035013e+01, aSNR = 1.876360e+01


SNR =

   20.3501


SNR_average =

   18.7636


Time_iter_average =

    0.3304

