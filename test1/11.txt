
                            < M A T L A B (R) >
                  Copyright 1984-2018 The MathWorks, Inc.
                   R2018a (9.4.0.813654) 64-bit (glnxa64)
                             February 23, 2018

 
To get started, type one of these: helpwin, helpdesk, or demo.
For product information, visit www.mathworks.com.
 

irtdir =

    '/lustre/home/sc004/aa61/HyperSARA_dist_Full/irt'

Path setup for irt appears to have succeeded.
/*----------------------------------------------------------------*/
 example: Simulation of wide band radio interferometric data
/*----------------------------------------------------------------*/

n_src =

    11


ans =

     9


param_HSI = 

  struct with fields:

    num_workers: 12


T =

   100


hrs =

     6


ans =

     0     1


bmax =

    3.1416


ans =

     0     1


bmax =

    3.1416


ans =

       35100           1

Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 2s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
norm it n=2 norm=55231.1356
norm it n=3 norm=224419.4607
norm it n=4 norm=259236.0951
norm it n=5 norm=277689.5441
norm it n=6 norm=289803.0908
norm it n=7 norm=298829.5135
norm it n=8 norm=306056.6454
norm it n=9 norm=312102.9056
norm it n=10 norm=317312.0017
norm it n=11 norm=321897.5122
norm it n=12 norm=326003.5138
norm it n=13 norm=329732.7839
norm it n=14 norm=333161.1805
norm it n=15 norm=336345.6597
norm it n=16 norm=339329.1632
norm it n=17 norm=342143.8638
norm it n=18 norm=344813.4945
norm it n=19 norm=347355.1297
norm it n=20 norm=349780.6185
norm it n=21 norm=352097.7777
norm it n=22 norm=354311.404
norm it n=23 norm=356424.1385
norm it n=24 norm=358437.1982
norm it n=25 norm=360350.9841
norm it n=26 norm=362165.5694
norm it n=27 norm=363881.075
norm it n=28 norm=365497.9389
norm it n=29 norm=367017.0911
norm it n=30 norm=368440.0463
norm it n=31 norm=369768.9306
norm it n=32 norm=371006.4564
norm it n=33 norm=372155.8614
norm it n=34 norm=373220.8245
norm it n=35 norm=374205.3697
norm it n=36 norm=375113.7677
norm it n=37 norm=375950.4412
norm it n=38 norm=376719.8784
norm it n=39 norm=377426.5575
norm it n=40 norm=378074.8836
norm it n=41 norm=378669.1377
norm it n=42 norm=379213.4372
norm it n=43 norm=379711.7074
norm it n=44 norm=380167.6622
norm it n=45 norm=380584.7923
norm it n=46 norm=380966.3606
norm it n=47 norm=381315.4016
norm it n=48 norm=381634.7265
norm it n=49 norm=381926.9295
norm it n=50 norm=382194.3978
norm it n=51 norm=382439.3219
norm it n=52 norm=382663.7075
norm it n=53 norm=382869.3877
norm it n=54 norm=383058.035
norm it n=55 norm=383231.1734
norm it n=56 norm=383390.1903
norm it n=57 norm=383536.3472
norm it n=58 norm=383670.7906
norm it n=59 norm=383794.5621
norm it n=60 norm=383908.6072
norm it n=61 norm=384013.7842
norm it n=62 norm=384110.8722
norm it n=63 norm=384200.5782
norm it n=64 norm=384283.544
norm it n=65 norm=384360.352
norm it n=66 norm=384431.5311
norm it n=67 norm=384497.5617
norm it n=68 norm=384558.88
norm it n=69 norm=384615.8827
norm it n=70 norm=384668.9302
norm it n=71 norm=384718.3504
norm it n=72 norm=384764.4419
norm it n=73 norm=384807.4764
norm it n=74 norm=384847.7013
norm it n=75 norm=384885.3424
norm it n=76 norm=384920.6054
norm it n=77 norm=384953.6782
norm it n=78 norm=384984.7322
norm it n=79 norm=385013.9242
norm it n=80 norm=385041.3974
norm it n=81 norm=385067.2829
norm it n=82 norm=385091.7008
norm it n=83 norm=385114.7609
norm it n=84 norm=385136.564
norm it n=85 norm=385157.2026
norm it n=86 norm=385176.7615
norm it n=87 norm=385195.3186
norm it n=88 norm=385212.9454
norm it n=89 norm=385229.708
norm it n=90 norm=385245.6668
norm it n=91 norm=385260.8777
norm it n=92 norm=385275.392
norm it n=93 norm=385289.2572
norm it n=94 norm=385302.5169
norm it n=95 norm=385315.2115
norm it n=96 norm=385327.3783
norm it n=97 norm=385339.0517
norm it n=98 norm=385350.2636
norm it n=99 norm=385361.0434
norm it n=100 norm=385371.4183
norm it n=101 norm=385381.4137
norm it n=102 norm=385391.053
norm it n=103 norm=385400.3577
norm it n=104 norm=385409.3482
norm it n=105 norm=385418.0431
norm it n=106 norm=385426.4596
norm it n=107 norm=385434.6141
norm it n=108 norm=385442.5214
norm it n=109 norm=385450.1954
norm it n=110 norm=385457.6493
norm it n=111 norm=385464.895
norm it n=112 norm=385471.9439
norm it n=113 norm=385478.8063
norm it n=114 norm=385485.4921
norm it n=115 norm=385492.0105
norm it n=116 norm=385498.3698
norm it n=117 norm=385504.5782
norm it n=118 norm=385510.643
norm it n=119 norm=385516.5711
norm it n=120 norm=385522.369
norm it n=121 norm=385528.0429
norm it n=122 norm=385533.5984
norm it n=123 norm=385539.0408
norm it n=124 norm=385544.3751
norm it n=125 norm=385549.606
norm it n=126 norm=385554.7379
norm it n=127 norm=385559.7749
norm it n=128 norm=385564.7209
norm it n=129 norm=385569.5794
norm it n=130 norm=385574.3539
norm it n=131 norm=385579.0476
norm it n=132 norm=385583.6635
norm it n=133 norm=385588.2045
norm it n=134 norm=385592.6732
norm it n=135 norm=385597.072
norm it n=136 norm=385601.4035
norm it n=137 norm=385605.6698
norm it n=138 norm=385609.8731
norm it n=139 norm=385614.0153
norm it n=140 norm=385618.0983
norm it n=141 norm=385622.1239
norm it n=142 norm=385626.0938
norm it n=143 norm=385630.0095
norm it n=144 norm=385633.8726
norm it n=145 norm=385637.6845
norm it n=146 norm=385641.4466
norm it n=147 norm=385645.1602
norm it n=148 norm=385648.8263
norm it n=149 norm=385652.4464
norm it n=150 norm=385656.0213
norm it n=151 norm=385659.5522
norm it n=152 norm=385663.0401
norm it n=153 norm=385666.4859
norm it n=154 norm=385669.8905
norm it n=155 norm=385673.2548
norm it n=156 norm=385676.5797
norm it n=157 norm=385679.8658
norm it n=158 norm=385683.1141
norm it n=159 norm=385686.3251
norm it n=160 norm=385689.4995
norm it n=161 norm=385692.6381
norm it n=162 norm=385695.7415
norm it n=163 norm=385698.8103
norm it n=164 norm=385701.8451
norm it n=165 norm=385704.8464
norm it n=166 norm=385707.8147
norm it n=167 norm=385710.7507
norm it n=168 norm=385713.6548
norm it n=169 norm=385716.5274
norm it n=170 norm=385719.3692
norm it n=171 norm=385722.1804
norm it n=172 norm=385724.9616
norm it n=173 norm=385727.7132
norm it n=174 norm=385730.4356
norm it n=175 norm=385733.1291
norm it n=176 norm=385735.7942
norm it n=177 norm=385738.4313
norm it n=178 norm=385741.0407
norm it n=179 norm=385743.6228
norm it n=180 norm=385746.1779
norm it n=181 norm=385748.7063
norm it n=182 norm=385751.2084
norm it n=183 norm=385753.6845
norm it n=184 norm=385756.1349
norm it n=185 norm=385758.5599
norm it n=186 norm=385760.9598
norm it n=187 norm=385763.3349
norm it n=188 norm=385765.6855
norm it n=189 norm=385768.0118
norm it n=190 norm=385770.3142
norm it n=191 norm=385772.5929
norm it n=192 norm=385774.8481
norm it n=193 norm=385777.0801
norm it n=194 norm=385779.2892
norm it n=195 norm=385781.4756
norm it n=196 norm=385783.6396
norm it n=197 norm=385785.7814
norm it n=198 norm=385787.9011
norm it n=199 norm=385789.9992
norm it n=200 norm=385792.0757
 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  WARNING: Change DWT Extension Mode  !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                        
****************************************
**  DWT Extension Mode: Zero Padding  **
****************************************
                                        
                                        
****************************************
**  DWT Extension Mode: Zero Padding  **
****************************************
                                        
norm it n=2 norm=1
norm it n=3 norm=1
-----------------------------------------
HyperSARA - parfeval
-----------------------------------------
xsol NOT uploaded 

v0 NOT uploaded 

weights0 NOT uploaded 

v1 NOT uploaded 

weights1 NOT uploaded 

v2 NOT uploaded 

g NOT uploaded 

proj NOT uploaded 

t t_block NOT uploaded 

Starting parallel pool (parpool) using the 'local' profile ...
connected to 12 workers.
Created parallel pool ... 
Setting DWT mode ... 
Lab  1: 
   
Lab  3: 
   
Lab  4: 
   
Lab  5: 
   
Lab  6: 
   
Lab  7: 
   
Lab  8: 
   
Lab  9: 
   
Lab 10: 
   
Lab 11: 
   
Lab 12: 
   
Lab  1: 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Lab  2: 
   
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Lab  3: 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Lab  4: 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Lab  5: 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Lab  6: 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Lab  7: 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Lab  8: 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Lab  9: 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Lab 10: 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Lab 11: 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Lab 12: 
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !  WARNING: Change DWT Extension Mode  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                          
  ****************************************
  **  DWT Extension Mode: Zero Padding  **
  ****************************************
                                          
Iter = 1, Time = 5.452900e+00
Iter = 2, Time = 4.677415e+00
Iter = 3, Time = 4.545492e+00
Iter = 4, Time = 4.668762e+00
Iter = 5, Time = 4.504254e+00
Iter = 6, Time = 4.668338e+00
Iter = 7, Time = 4.547448e+00
Iter = 8, Time = 4.837328e+00
Iter = 9, Time = 4.530918e+00
Iter = 10, Time = 4.572138e+00
Iter = 11, Time = 4.553136e+00
Iter = 12, Time = 4.436620e+00
Iter = 13, Time = 4.561604e+00
Iter = 14, Time = 4.452652e+00
Iter = 15, Time = 4.557757e+00
Iter = 16, Time = 4.540281e+00
Iter = 17, Time = 4.514830e+00
Iter = 18, Time = 4.732259e+00
Iter = 19, Time = 4.641230e+00
Iter = 20, Time = 4.463917e+00
Iter = 21, Time = 4.481791e+00
Iter = 22, Time = 4.435940e+00
Iter = 23, Time = 4.509906e+00
Iter = 24, Time = 4.327200e+00
Iter = 25, Time = 4.481781e+00
Iter = 26, Time = 4.453680e+00
Iter = 27, Time = 4.459480e+00
Iter = 28, Time = 4.575484e+00
Iter = 29, Time = 4.535471e+00
Iter = 30, Time = 4.428917e+00
Iter = 31, Time = 4.477671e+00
Iter = 32, Time = 4.454175e+00
Iter = 33, Time = 4.699469e+00
Iter = 34, Time = 4.631283e+00
Iter = 35, Time = 4.497846e+00
Iter = 36, Time = 4.548074e+00
Iter = 37, Time = 4.459107e+00
Iter = 38, Time = 4.554703e+00
Iter = 39, Time = 4.617729e+00
Iter = 40, Time = 4.531800e+00
Iter = 41, Time = 4.476824e+00
Iter = 42, Time = 4.509714e+00
Iter = 43, Time = 4.599199e+00
Iter = 44, Time = 4.497611e+00
Iter = 45, Time = 4.477239e+00
Iter = 46, Time = 4.411260e+00
Iter = 47, Time = 4.915912e+00
Iter = 48, Time = 4.492943e+00
Iter = 49, Time = 4.552487e+00
Iter = 50, Time = 4.545421e+00
Iter = 51, Time = 4.802862e+00
Iter = 52, Time = 4.439717e+00
Iter = 53, Time = 4.551605e+00
Iter = 54, Time = 4.523645e+00
Iter = 55, Time = 4.516831e+00
Iter = 56, Time = 4.669493e+00
Iter = 57, Time = 4.447999e+00
Iter = 58, Time = 4.544053e+00
Iter = 59, Time = 4.474823e+00
Iter = 60, Time = 4.536999e+00
Iter = 61, Time = 4.554618e+00
Iter = 62, Time = 4.520016e+00
Iter = 63, Time = 4.409267e+00
Iter = 64, Time = 4.577120e+00
Iter = 65, Time = 4.576436e+00
Iter = 66, Time = 4.626298e+00
Iter = 67, Time = 4.551427e+00
Iter = 68, Time = 4.532886e+00
Iter = 69, Time = 4.501815e+00
Iter = 70, Time = 4.736636e+00
Iter = 71, Time = 4.523015e+00
Iter = 72, Time = 4.541388e+00
Iter = 73, Time = 4.556877e+00
Iter = 74, Time = 4.655968e+00
Iter = 75, Time = 4.581971e+00
Iter = 76, Time = 4.522408e+00
Iter = 77, Time = 4.495771e+00
Iter = 78, Time = 4.595459e+00
Iter = 79, Time = 4.567785e+00
Iter = 80, Time = 4.606445e+00
Iter = 81, Time = 4.451844e+00
Iter = 82, Time = 4.552153e+00
Iter = 83, Time = 4.494339e+00
Iter = 84, Time = 4.509426e+00
Iter = 85, Time = 4.763351e+00
Iter = 86, Time = 4.512950e+00
Iter = 87, Time = 4.587702e+00
Iter = 88, Time = 4.530362e+00
Iter = 89, Time = 4.757644e+00
Iter = 90, Time = 4.484816e+00
Iter = 91, Time = 4.476800e+00
Iter = 92, Time = 4.474661e+00
Iter = 93, Time = 4.509642e+00
Iter = 94, Time = 4.506391e+00
Iter = 95, Time = 4.648590e+00
Iter = 96, Time = 4.533047e+00
Iter = 97, Time = 4.438033e+00
Iter = 98, Time = 4.638127e+00
Iter = 99, Time = 4.560607e+00
Iter = 100, Time = 4.605853e+00
Iter 100
N-norm = 1.008714e+03, L21-norm = 4.979304e+04, rel_fval = 2.797404e-04
 epsilon = 4.107459e+03, residual = 3.474885e+03
 SNR = 2.413231e+01, aSNR = 2.334231e+01

Iter = 101, Time = 4.593046e+00
Iter = 102, Time = 4.704184e+00
Iter = 103, Time = 4.623538e+00
Iter = 104, Time = 4.925994e+00
Iter = 105, Time = 4.775524e+00
Iter = 106, Time = 4.724734e+00
Iter = 107, Time = 4.698894e+00
Iter = 108, Time = 4.718746e+00
Iter = 109, Time = 4.660988e+00
Iter = 110, Time = 4.696896e+00
Iter = 111, Time = 4.577697e+00
Iter = 112, Time = 4.569412e+00
Iter = 113, Time = 4.890573e+00
Iter = 114, Time = 4.584073e+00
Iter = 115, Time = 4.663776e+00
Iter = 116, Time = 4.604803e+00
Iter = 117, Time = 4.846002e+00
Iter = 118, Time = 4.466867e+00
Iter = 119, Time = 4.512176e+00
Iter = 120, Time = 4.528600e+00
Iter = 121, Time = 4.517416e+00
Iter = 122, Time = 4.571015e+00
Iter = 123, Time = 4.627254e+00
Iter = 124, Time = 4.572227e+00
Iter = 125, Time = 4.602366e+00
Iter = 126, Time = 4.608864e+00
Iter = 127, Time = 4.402158e+00
Iter = 128, Time = 4.530166e+00
Iter = 129, Time = 4.506552e+00
Iter = 130, Time = 4.523541e+00
Iter = 131, Time = 4.510868e+00
Iter = 132, Time = 4.763308e+00
Iter = 133, Time = 4.629415e+00
Iter = 134, Time = 4.805248e+00
Iter = 135, Time = 4.586087e+00
Iter = 136, Time = 4.653972e+00
Iter = 137, Time = 4.691033e+00
Iter = 138, Time = 4.657811e+00
Iter = 139, Time = 4.599100e+00
Iter = 140, Time = 4.552352e+00
Iter = 141, Time = 4.685512e+00
Iter = 142, Time = 4.578885e+00
Iter = 143, Time = 4.438741e+00
Iter = 144, Time = 4.664933e+00
Iter = 145, Time = 4.623899e+00
Iter = 146, Time = 4.872899e+00
Iter = 147, Time = 4.677813e+00
Iter = 148, Time = 4.687420e+00
Iter = 149, Time = 4.611072e+00
Iter = 150, Time = 4.976344e+00
Iter = 151, Time = 4.729909e+00
Iter = 152, Time = 4.802182e+00
Iter = 153, Time = 4.748746e+00
Iter = 154, Time = 4.709603e+00
Iter = 155, Time = 4.602883e+00
Iter = 156, Time = 4.862995e+00
Iter = 157, Time = 4.732057e+00
Iter = 158, Time = 4.760399e+00
Iter = 159, Time = 4.707600e+00
Iter = 160, Time = 5.205998e+00
Iter = 161, Time = 4.768615e+00
Iter = 162, Time = 4.768258e+00
Iter = 163, Time = 4.796481e+00
Iter = 164, Time = 4.778741e+00
Iter = 165, Time = 4.789337e+00
Iter = 166, Time = 4.773953e+00
Iter = 167, Time = 4.704159e+00
Iter = 168, Time = 4.659445e+00
Iter = 169, Time = 4.918993e+00
Iter = 170, Time = 4.969105e+00
Iter = 171, Time = 4.652001e+00
Iter = 172, Time = 4.761316e+00
Iter = 173, Time = 4.737664e+00
Iter = 174, Time = 4.652723e+00
Iter = 175, Time = 4.717988e+00
Iter = 176, Time = 4.772659e+00
Iter = 177, Time = 4.681651e+00
Iter = 178, Time = 4.972490e+00
Iter = 179, Time = 4.705281e+00
Iter = 180, Time = 4.675909e+00
Iter = 181, Time = 4.722299e+00
Iter = 182, Time = 4.785731e+00
Iter = 183, Time = 4.677762e+00
Iter = 184, Time = 4.778455e+00
Iter = 185, Time = 4.689401e+00
Iter = 186, Time = 4.612360e+00
Iter = 187, Time = 4.894115e+00
Iter = 188, Time = 4.639418e+00
Iter = 189, Time = 4.789890e+00
Iter = 190, Time = 4.735678e+00
Iter = 191, Time = 4.635576e+00
Reweighting: 0

Iter = 192, Time = 4.794882e+00
Iter = 193, Time = 4.811970e+00
Iter = 194, Time = 4.787421e+00
Iter = 195, Time = 5.025604e+00
Iter = 196, Time = 4.763827e+00
Iter = 197, Time = 4.721230e+00
Iter = 198, Time = 4.800884e+00
Iter = 199, Time = 4.836746e+00
Iter = 200, Time = 4.871840e+00
Iter 200
N-norm = 9.937752e+02, L21-norm = 4.927554e+04, rel_fval = 4.261872e-04
 epsilon = 4.107459e+03, residual = 3.471004e+03
 SNR = 2.450735e+01, aSNR = 2.368787e+01

Iter = 201, Time = 4.818791e+00
Iter = 202, Time = 4.763929e+00
Iter = 203, Time = 4.785331e+00
Iter = 204, Time = 4.754774e+00
Iter = 205, Time = 4.828825e+00
Iter = 206, Time = 4.849809e+00
Iter = 207, Time = 4.838565e+00
Iter = 208, Time = 4.755659e+00
Iter = 209, Time = 4.935925e+00
Iter = 210, Time = 4.769068e+00
Iter = 211, Time = 4.822638e+00
Iter = 212, Time = 4.798442e+00
Iter = 213, Time = 4.840132e+00
Iter = 214, Time = 4.732015e+00
Iter = 215, Time = 4.765863e+00
Iter = 216, Time = 4.815675e+00
Iter = 217, Time = 4.854991e+00
Iter = 218, Time = 4.853702e+00
Iter = 219, Time = 4.847193e+00
Iter = 220, Time = 4.902488e+00
Iter = 221, Time = 4.856317e+00
Iter = 222, Time = 4.737881e+00
Iter = 223, Time = 4.779589e+00
Iter = 224, Time = 4.783107e+00
Iter = 225, Time = 4.841749e+00
Iter = 226, Time = 4.903974e+00
Iter = 227, Time = 4.859707e+00
Iter = 228, Time = 4.753198e+00
Iter = 229, Time = 4.799619e+00
Iter = 230, Time = 4.799335e+00
Iter = 231, Time = 4.850171e+00
Iter = 232, Time = 4.804934e+00
Iter = 233, Time = 4.933871e+00
Iter = 234, Time = 4.768836e+00
Iter = 235, Time = 4.798922e+00
Iter = 236, Time = 4.822044e+00
Iter = 237, Time = 4.842135e+00
Iter = 238, Time = 4.744779e+00
Iter = 239, Time = 4.861561e+00
Iter = 240, Time = 4.957574e+00
Iter = 241, Time = 4.880498e+00
Iter = 242, Time = 4.773807e+00
Iter = 243, Time = 4.879316e+00
Iter = 244, Time = 4.998822e+00
Iter = 245, Time = 4.782319e+00
Iter = 246, Time = 4.763780e+00
Iter = 247, Time = 4.819336e+00
Iter = 248, Time = 4.781537e+00
Iter = 249, Time = 4.998419e+00
Iter = 250, Time = 4.829349e+00
Iter = 251, Time = 4.903836e+00
Iter = 252, Time = 4.894988e+00
Iter = 253, Time = 4.886398e+00
Iter = 254, Time = 4.848564e+00
Iter = 255, Time = 4.796491e+00
Iter = 256, Time = 4.842004e+00
Iter = 257, Time = 4.900021e+00
Iter = 258, Time = 5.119062e+00
Iter = 259, Time = 4.894505e+00
Iter = 260, Time = 4.846474e+00
Iter = 261, Time = 4.777256e+00
Iter = 262, Time = 4.793809e+00
Iter = 263, Time = 4.680845e+00
Iter = 264, Time = 4.831862e+00
Iter = 265, Time = 4.884155e+00
Iter = 266, Time = 5.060650e+00
Iter = 267, Time = 4.895597e+00
Iter = 268, Time = 4.908121e+00
Iter = 269, Time = 4.883808e+00
Iter = 270, Time = 4.846353e+00
Iter = 271, Time = 4.817849e+00
Iter = 272, Time = 4.765923e+00
Iter = 273, Time = 4.825487e+00
Iter = 274, Time = 4.744228e+00
Iter = 275, Time = 4.994646e+00
Iter = 276, Time = 4.742873e+00
Iter = 277, Time = 4.764162e+00
Iter = 278, Time = 4.740535e+00
Iter = 279, Time = 4.815252e+00
Iter = 280, Time = 4.648808e+00
Iter = 281, Time = 4.802806e+00
Iter = 282, Time = 4.707799e+00
Iter = 283, Time = 4.693614e+00
Iter = 284, Time = 4.971519e+00
Iter = 285, Time = 4.740807e+00
Iter = 286, Time = 4.801526e+00
Iter = 287, Time = 4.768024e+00
Iter = 288, Time = 4.758756e+00
Iter = 289, Time = 4.752963e+00
Iter = 290, Time = 4.674226e+00
Iter = 291, Time = 4.823571e+00
Iter = 292, Time = 4.671076e+00
Iter = 293, Time = 5.022319e+00
Iter = 294, Time = 4.734935e+00
Iter = 295, Time = 4.945693e+00
Iter = 296, Time = 4.775907e+00
Iter = 297, Time = 4.748552e+00
Iter = 298, Time = 4.976923e+00
Iter = 299, Time = 4.809183e+00
Iter = 300, Time = 4.720048e+00
Iter 300
N-norm = 9.827423e+02, L21-norm = 4.866122e+04, rel_fval = 6.566552e-05
 epsilon = 4.107459e+03, residual = 3.950170e+03
 SNR = 2.463301e+01, aSNR = 2.378565e+01

Iter = 301, Time = 4.696162e+00
Iter = 302, Time = 4.759941e+00
Iter = 303, Time = 4.727264e+00
Iter = 304, Time = 4.708352e+00
Iter = 305, Time = 4.708456e+00
Iter = 306, Time = 4.700643e+00
Iter = 307, Time = 4.703881e+00
Iter = 308, Time = 4.834387e+00
Iter = 309, Time = 4.780927e+00
Iter = 310, Time = 4.872266e+00
Iter = 311, Time = 4.955877e+00
Iter = 312, Time = 4.815619e+00
Iter = 313, Time = 4.676993e+00
Iter = 314, Time = 4.825842e+00
Iter = 315, Time = 4.651725e+00
Iter = 316, Time = 4.824758e+00
Iter = 317, Time = 4.649674e+00
Iter = 318, Time = 4.867284e+00
Iter = 319, Time = 4.633759e+00
Iter = 320, Time = 5.229900e+00
Iter = 321, Time = 4.881569e+00
Iter = 322, Time = 4.888767e+00
Iter = 323, Time = 4.838860e+00
Iter = 324, Time = 4.816434e+00
Iter = 325, Time = 4.671177e+00
Iter = 326, Time = 4.761717e+00
Iter = 327, Time = 4.740407e+00
Iter = 328, Time = 4.779641e+00
Iter = 329, Time = 4.877822e+00
Iter = 330, Time = 4.782205e+00
Iter = 331, Time = 4.734666e+00
Iter = 332, Time = 4.806491e+00
Iter = 333, Time = 4.654956e+00
Iter = 334, Time = 4.791236e+00
Iter = 335, Time = 4.692810e+00
Iter = 336, Time = 4.782376e+00
Iter = 337, Time = 4.660321e+00
Iter = 338, Time = 4.796529e+00
Iter = 339, Time = 4.666736e+00
Iter = 340, Time = 4.842983e+00
Iter = 341, Time = 4.726792e+00
Iter = 342, Time = 4.879178e+00
Iter = 343, Time = 4.783116e+00
Iter = 344, Time = 4.834089e+00
Iter = 345, Time = 5.299449e+00
Iter = 346, Time = 4.906017e+00
Iter = 347, Time = 4.821059e+00
Iter = 348, Time = 4.825434e+00
Iter = 349, Time = 4.874431e+00
Iter = 350, Time = 4.805732e+00
Iter = 351, Time = 4.917451e+00
Iter = 352, Time = 5.023769e+00
Iter = 353, Time = 4.914963e+00
Iter = 354, Time = 4.854175e+00
Iter = 355, Time = 4.867885e+00
Iter = 356, Time = 4.882413e+00
Iter = 357, Time = 4.821846e+00
Iter = 358, Time = 4.943071e+00
Iter = 359, Time = 4.980824e+00
Iter = 360, Time = 4.921156e+00
Iter = 361, Time = 5.102796e+00
Iter = 362, Time = 4.873173e+00
Iter = 363, Time = 4.903151e+00
Iter = 364, Time = 4.814138e+00
Iter = 365, Time = 4.946853e+00
Iter = 366, Time = 4.774890e+00
Iter = 367, Time = 4.882239e+00
Iter = 368, Time = 4.819763e+00
Iter = 369, Time = 4.886643e+00
Iter = 370, Time = 5.006282e+00
Iter = 371, Time = 4.865478e+00
Iter = 372, Time = 4.767191e+00
Iter = 373, Time = 4.931450e+00
Iter = 374, Time = 4.896342e+00
Iter = 375, Time = 4.889196e+00
Iter = 376, Time = 4.936882e+00
Iter = 377, Time = 4.851873e+00
Iter = 378, Time = 4.952007e+00
Iter = 379, Time = 5.075171e+00
Iter = 380, Time = 4.854366e+00
Iter = 381, Time = 4.923114e+00
Iter = 382, Time = 4.774940e+00
Iter = 383, Time = 4.955686e+00
Iter = 384, Time = 4.845015e+00
Iter = 385, Time = 4.968756e+00
Iter = 386, Time = 4.837743e+00
Iter = 387, Time = 5.042107e+00
Iter = 388, Time = 4.855626e+00
Iter = 389, Time = 4.923192e+00
Iter = 390, Time = 4.847489e+00
Iter = 391, Time = 4.857585e+00
Iter = 392, Time = 4.795274e+00
Iter = 393, Time = 4.947101e+00
Iter = 394, Time = 5.017429e+00
Iter = 395, Time = 4.952664e+00
Iter = 396, Time = 4.901604e+00
Iter = 397, Time = 4.935963e+00
Iter = 398, Time = 4.878229e+00
Iter = 399, Time = 4.882158e+00
Iter = 400, Time = 4.947240e+00
Iter 400
N-norm = 9.813982e+02, L21-norm = 4.814695e+04, rel_fval = 5.476620e-05
 epsilon = 4.107459e+03, residual = 4.093762e+03
 SNR = 2.457240e+01, aSNR = 2.372672e+01

Iter = 401, Time = 5.047795e+00
Iter = 402, Time = 5.024713e+00
Iter = 403, Time = 4.864287e+00
Iter = 404, Time = 4.929860e+00
Iter = 405, Time = 4.942833e+00
Iter = 406, Time = 4.911384e+00
Iter = 407, Time = 4.938127e+00
Iter = 408, Time = 4.903727e+00
Iter = 409, Time = 5.021430e+00
Iter = 410, Time = 4.828654e+00
Iter = 411, Time = 4.866815e+00
Iter = 412, Time = 4.820507e+00
Iter = 413, Time = 4.895812e+00
Iter = 414, Time = 5.023819e+00
Iter = 415, Time = 4.938582e+00
Iter = 416, Time = 4.922515e+00
Iter = 417, Time = 4.911656e+00
Iter = 418, Time = 4.941677e+00
Iter = 419, Time = 5.026224e+00
Iter = 420, Time = 4.919696e+00
Iter = 421, Time = 4.775678e+00
Iter = 422, Time = 4.801857e+00
Iter = 423, Time = 4.902967e+00
Iter = 424, Time = 4.787565e+00
Iter = 425, Time = 4.927384e+00
Iter = 426, Time = 4.940495e+00
Iter = 427, Time = 5.130200e+00
Iter = 428, Time = 4.923650e+00
Iter = 429, Time = 4.813736e+00
Iter = 430, Time = 4.894580e+00
Iter = 431, Time = 4.839668e+00
Iter = 432, Time = 5.110137e+00
Iter = 433, Time = 4.900197e+00
Iter = 434, Time = 4.790597e+00
Iter = 435, Time = 4.899296e+00
Iter = 436, Time = 4.734062e+00
Iter = 437, Time = 4.858387e+00
Iter = 438, Time = 4.732459e+00
Iter = 439, Time = 4.892711e+00
Iter = 440, Time = 4.734622e+00
Iter = 441, Time = 4.952888e+00
Iter = 442, Time = 4.746623e+00
Iter = 443, Time = 4.889350e+00
Iter = 444, Time = 4.743389e+00
Iter = 445, Time = 4.791760e+00
Iter = 446, Time = 4.730878e+00
Iter = 447, Time = 4.787810e+00
Iter = 448, Time = 4.758998e+00
Iter = 449, Time = 4.703968e+00
Iter = 450, Time = 4.974118e+00
Iter = 451, Time = 4.855285e+00
Iter = 452, Time = 4.836690e+00
Iter = 453, Time = 4.840212e+00
Iter = 454, Time = 4.826913e+00
Iter = 455, Time = 4.832104e+00
Iter = 456, Time = 4.827144e+00
Iter = 457, Time = 4.824134e+00
Iter = 458, Time = 4.751600e+00
Iter = 459, Time = 4.837988e+00
Iter = 460, Time = 4.722394e+00
Iter = 461, Time = 4.783696e+00
Iter = 462, Time = 4.705669e+00
Iter = 463, Time = 4.968443e+00
Iter = 464, Time = 4.815296e+00
Iter = 465, Time = 4.823824e+00
Iter = 466, Time = 4.814572e+00
Iter = 467, Time = 4.836918e+00
Iter = 468, Time = 4.760905e+00
Iter = 469, Time = 4.767798e+00
Iter = 470, Time = 4.721655e+00
Iter = 471, Time = 4.756613e+00
Iter = 472, Time = 4.920746e+00
Iter = 473, Time = 4.744068e+00
Iter = 474, Time = 4.818250e+00
Iter = 475, Time = 4.844561e+00
Iter = 476, Time = 4.821703e+00
Iter = 477, Time = 4.831358e+00
Iter = 478, Time = 4.824999e+00
Iter = 479, Time = 4.826444e+00
Iter = 480, Time = 4.717777e+00
Iter = 481, Time = 4.958828e+00
Iter = 482, Time = 4.694490e+00
Iter = 483, Time = 4.743188e+00
Iter = 484, Time = 4.828452e+00
Iter = 485, Time = 4.770176e+00
Iter = 486, Time = 4.740067e+00
Iter = 487, Time = 4.833373e+00
Iter = 488, Time = 4.737686e+00
Iter = 489, Time = 4.806564e+00
Iter = 490, Time = 4.877080e+00
Iter = 491, Time = 4.848286e+00
Reweighting: 1

Iter = 492, Time = 4.876666e+00
Iter = 493, Time = 4.845552e+00
Iter = 494, Time = 4.800023e+00
Iter = 495, Time = 4.810315e+00
Iter = 496, Time = 4.872157e+00
Iter = 497, Time = 5.025812e+00
Iter = 498, Time = 4.861749e+00
Iter = 499, Time = 4.800468e+00
Iter = 500, Time = 4.767110e+00
Iter 500
N-norm = 9.816107e+02, L21-norm = 4.808982e+04, rel_fval = 4.430937e-05
 epsilon = 4.107459e+03, residual = 4.113575e+03
 SNR = 2.455651e+01, aSNR = 2.371751e+01

Iter = 501, Time = 4.737784e+00
Iter = 502, Time = 4.738144e+00
Iter = 503, Time = 4.776630e+00
Iter = 504, Time = 4.676696e+00
Iter = 505, Time = 4.755023e+00
Iter = 506, Time = 4.925106e+00
Iter = 507, Time = 4.693466e+00
Iter = 508, Time = 4.614894e+00
Iter = 509, Time = 4.757119e+00
Iter = 510, Time = 4.631455e+00
Iter = 511, Time = 4.712344e+00
Iter = 512, Time = 4.742651e+00
Iter = 513, Time = 4.706485e+00
Iter = 514, Time = 4.612742e+00
Iter = 515, Time = 4.787461e+00
Iter = 516, Time = 4.992777e+00
Iter = 517, Time = 4.861771e+00
Iter = 518, Time = 4.731988e+00
Iter = 519, Time = 4.597413e+00
Iter = 520, Time = 4.691070e+00
Iter = 521, Time = 4.691994e+00
Iter = 522, Time = 4.576657e+00
Iter = 523, Time = 4.780532e+00
Iter = 524, Time = 4.667869e+00
Iter = 525, Time = 4.933831e+00
Iter = 526, Time = 4.625226e+00
Iter = 527, Time = 4.754259e+00
Iter = 528, Time = 4.706291e+00
Iter = 529, Time = 4.748923e+00
Iter = 530, Time = 4.643196e+00
Iter = 531, Time = 4.757147e+00
Iter = 532, Time = 4.616940e+00
Iter = 533, Time = 4.733634e+00
Iter = 534, Time = 4.645152e+00
Iter = 535, Time = 4.732216e+00
Iter = 536, Time = 4.699211e+00
Iter = 537, Time = 4.924107e+00
Iter = 538, Time = 4.767568e+00
Iter = 539, Time = 4.749903e+00
Iter = 540, Time = 4.597423e+00
Iter = 541, Time = 4.747999e+00
Iter = 542, Time = 4.796506e+00
Iter = 543, Time = 4.965938e+00
Iter = 544, Time = 4.670352e+00
Iter = 545, Time = 4.735429e+00
Iter = 546, Time = 4.663955e+00
Iter = 547, Time = 4.753439e+00
Iter = 548, Time = 4.983064e+00
Iter = 549, Time = 4.719200e+00
Iter = 550, Time = 4.724856e+00
Iter = 551, Time = 4.641596e+00
Iter = 552, Time = 4.652324e+00
Iter = 553, Time = 4.720354e+00
Iter = 554, Time = 4.623818e+00
Iter = 555, Time = 4.721557e+00
Iter = 556, Time = 4.642767e+00
Iter = 557, Time = 4.845379e+00
Iter = 558, Time = 4.698087e+00
Iter = 559, Time = 4.603699e+00
Iter = 560, Time = 4.714363e+00
Iter = 561, Time = 4.608809e+00
Iter = 562, Time = 4.705767e+00
Iter = 563, Time = 4.697006e+00
Iter = 564, Time = 4.704822e+00
Iter = 565, Time = 4.740712e+00
Iter = 566, Time = 4.790581e+00
Iter = 567, Time = 4.786462e+00
Iter = 568, Time = 4.789677e+00
Iter = 569, Time = 4.800694e+00
Iter = 570, Time = 4.733584e+00
Iter = 571, Time = 4.692693e+00
Iter = 572, Time = 4.715946e+00
Iter = 573, Time = 4.611428e+00
Iter = 574, Time = 4.605660e+00
Iter = 575, Time = 4.636221e+00
Iter = 576, Time = 4.800944e+00
Iter = 577, Time = 4.795204e+00
Iter = 578, Time = 4.744792e+00
Iter = 579, Time = 4.750879e+00
Iter = 580, Time = 4.648348e+00
Iter = 581, Time = 4.738561e+00
Iter = 582, Time = 4.707103e+00
Iter = 583, Time = 4.623680e+00
Iter = 584, Time = 4.587813e+00
Iter = 585, Time = 4.531519e+00
Iter = 586, Time = 4.697933e+00
Iter = 587, Time = 4.695598e+00
Iter = 588, Time = 4.821658e+00
Iter = 589, Time = 4.703829e+00
Iter = 590, Time = 4.608606e+00
Iter = 591, Time = 4.645305e+00
Iter = 592, Time = 4.674788e+00
Iter = 593, Time = 4.692671e+00
Iter = 594, Time = 4.634684e+00
Iter = 595, Time = 4.607852e+00
Iter = 596, Time = 4.611789e+00
Iter = 597, Time = 4.511550e+00
Iter = 598, Time = 4.807799e+00
Iter = 599, Time = 4.477644e+00
Iter = 600, Time = 4.598070e+00
Iter 600
N-norm = 9.819512e+02, L21-norm = 4.809148e+04, rel_fval = 2.202435e-05
 epsilon = 4.107459e+03, residual = 4.105756e+03
 SNR = 2.456252e+01, aSNR = 2.373044e+01

Iter = 601, Time = 4.462031e+00
Iter = 602, Time = 4.628767e+00
Iter = 603, Time = 4.649989e+00
Iter = 604, Time = 4.623246e+00
Iter = 605, Time = 4.586790e+00
Iter = 606, Time = 4.657985e+00
Iter = 607, Time = 4.717774e+00
Iter = 608, Time = 4.684781e+00
Iter = 609, Time = 4.615620e+00
Iter = 610, Time = 4.778821e+00
Iter = 611, Time = 4.766663e+00
Iter = 612, Time = 4.964222e+00
Iter = 613, Time = 4.761364e+00
Iter = 614, Time = 4.681116e+00
Iter = 615, Time = 4.685425e+00
Iter = 616, Time = 4.681838e+00
Iter = 617, Time = 4.699510e+00
Iter = 618, Time = 4.682892e+00
Iter = 619, Time = 4.596059e+00
Iter = 620, Time = 4.737747e+00
Iter = 621, Time = 4.848597e+00
Iter = 622, Time = 4.588499e+00
Iter = 623, Time = 4.685090e+00
Iter = 624, Time = 4.543516e+00
Iter = 625, Time = 4.679435e+00
Iter = 626, Time = 4.641427e+00
Iter = 627, Time = 4.674876e+00
Iter = 628, Time = 4.634901e+00
Iter = 629, Time = 4.696272e+00
Iter = 630, Time = 4.833968e+00
Iter = 631, Time = 4.661800e+00
Iter = 632, Time = 4.670379e+00
Iter = 633, Time = 4.729656e+00
Iter = 634, Time = 4.563377e+00
Iter = 635, Time = 4.664223e+00
Iter = 636, Time = 4.474916e+00
Iter = 637, Time = 4.641833e+00
Iter = 638, Time = 4.610978e+00
Iter = 639, Time = 4.629698e+00
Iter = 640, Time = 4.558802e+00
Iter = 641, Time = 4.672731e+00
Iter = 642, Time = 4.514504e+00
Iter = 643, Time = 4.657966e+00
Iter = 644, Time = 4.862913e+00
Iter = 645, Time = 4.767681e+00
Iter = 646, Time = 4.684569e+00
Iter = 647, Time = 4.700690e+00
Iter = 648, Time = 4.633375e+00
Iter = 649, Time = 4.607475e+00
Iter = 650, Time = 4.596628e+00
Iter = 651, Time = 4.678181e+00
Iter = 652, Time = 4.573051e+00
Iter = 653, Time = 4.690347e+00
Iter = 654, Time = 4.667320e+00
Iter = 655, Time = 4.597552e+00
Iter = 656, Time = 4.600292e+00
Iter = 657, Time = 4.768676e+00
Iter = 658, Time = 4.595451e+00
Iter = 659, Time = 4.594221e+00
Iter = 660, Time = 4.696073e+00
Iter = 661, Time = 4.617837e+00
Iter = 662, Time = 4.589120e+00
Iter = 663, Time = 4.599140e+00
Iter = 664, Time = 4.580179e+00
Iter = 665, Time = 4.581950e+00
Iter = 666, Time = 4.520432e+00
Iter = 667, Time = 4.576849e+00
Iter = 668, Time = 4.492146e+00
Iter = 669, Time = 4.576949e+00
Iter = 670, Time = 4.595683e+00
Iter = 671, Time = 4.654039e+00
Iter = 672, Time = 4.798059e+00
Iter = 673, Time = 4.606349e+00
Iter = 674, Time = 4.711357e+00
Iter = 675, Time = 4.671186e+00
Iter = 676, Time = 4.751613e+00
Iter = 677, Time = 4.797519e+00
Iter = 678, Time = 4.770438e+00
Iter = 679, Time = 4.694252e+00
Iter = 680, Time = 4.789420e+00
Iter = 681, Time = 5.048864e+00
Iter = 682, Time = 4.859283e+00
Iter = 683, Time = 4.847210e+00
Iter = 684, Time = 4.919417e+00
Iter = 685, Time = 4.780388e+00
Iter = 686, Time = 4.807967e+00
Iter = 687, Time = 4.766430e+00
Iter = 688, Time = 4.747203e+00
Iter = 689, Time = 4.750958e+00
Iter = 690, Time = 4.921135e+00
Iter = 691, Time = 4.840476e+00
Iter = 692, Time = 4.824190e+00
Iter = 693, Time = 4.747587e+00
Iter = 694, Time = 4.882775e+00
Iter = 695, Time = 4.837769e+00
Iter = 696, Time = 4.885248e+00
Iter = 697, Time = 4.774247e+00
Iter = 698, Time = 4.759843e+00
Iter = 699, Time = 4.748815e+00
Iter = 700, Time = 4.739532e+00
Iter 700
N-norm = 9.820241e+02, L21-norm = 4.809772e+04, rel_fval = 1.649408e-05
 epsilon = 4.107459e+03, residual = 4.107792e+03
 SNR = 2.458876e+01, aSNR = 2.376528e+01

Iter = 701, Time = 4.630914e+00
Iter = 702, Time = 4.568082e+00
Iter = 703, Time = 4.971885e+00
Iter = 704, Time = 4.728817e+00
Iter = 705, Time = 4.707511e+00
Iter = 706, Time = 4.677933e+00
Iter = 707, Time = 4.574329e+00
Iter = 708, Time = 4.795099e+00
Iter = 709, Time = 4.633550e+00
Iter = 710, Time = 4.764296e+00
Iter = 711, Time = 4.599306e+00
Iter = 712, Time = 4.882968e+00
Iter = 713, Time = 4.775402e+00
Iter = 714, Time = 4.724931e+00
Iter = 715, Time = 4.749293e+00
Iter = 716, Time = 4.686509e+00
Iter = 717, Time = 4.788958e+00
Iter = 718, Time = 4.674440e+00
Iter = 719, Time = 4.780630e+00
Iter = 720, Time = 4.727392e+00
Iter = 721, Time = 4.971048e+00
Iter = 722, Time = 4.716421e+00
Iter = 723, Time = 4.779272e+00
Iter = 724, Time = 4.743664e+00
Iter = 725, Time = 4.746376e+00
Iter = 726, Time = 4.940875e+00
Iter = 727, Time = 4.652992e+00
Iter = 728, Time = 4.659162e+00
Iter = 729, Time = 4.608319e+00
Iter = 730, Time = 4.754967e+00
Iter = 731, Time = 4.599171e+00
Iter = 732, Time = 4.752841e+00
Iter = 733, Time = 4.531441e+00
Iter = 734, Time = 4.759906e+00
Iter = 735, Time = 4.638390e+00
Iter = 736, Time = 4.967020e+00
Iter = 737, Time = 4.705347e+00
Iter = 738, Time = 4.588409e+00
Iter = 739, Time = 4.688247e+00
Iter = 740, Time = 4.622559e+00
Iter = 741, Time = 4.706545e+00
Iter = 742, Time = 4.584939e+00
Iter = 743, Time = 4.632607e+00
Iter = 744, Time = 4.696336e+00
Iter = 745, Time = 4.596517e+00
Iter = 746, Time = 4.693742e+00
Iter = 747, Time = 4.603970e+00
Iter = 748, Time = 4.698931e+00
Iter = 749, Time = 4.894655e+00
Iter = 750, Time = 4.684551e+00
Iter = 751, Time = 4.703652e+00
Iter = 752, Time = 4.607903e+00
Iter = 753, Time = 4.660569e+00
Iter = 754, Time = 4.596786e+00
Iter = 755, Time = 4.709351e+00
Iter = 756, Time = 4.634742e+00
Iter = 757, Time = 4.705405e+00
Iter = 758, Time = 4.717163e+00
Iter = 759, Time = 4.946757e+00
Iter = 760, Time = 4.851314e+00
Iter = 761, Time = 4.625114e+00
Iter = 762, Time = 4.734519e+00
Iter = 763, Time = 4.764902e+00
Iter = 764, Time = 4.732198e+00
Iter = 765, Time = 4.739584e+00
Iter = 766, Time = 4.680644e+00
Iter = 767, Time = 4.723750e+00
Iter = 768, Time = 4.926701e+00
Iter = 769, Time = 4.616938e+00
Iter = 770, Time = 4.746353e+00
Iter = 771, Time = 4.696487e+00
Iter = 772, Time = 4.641987e+00
Iter = 773, Time = 4.662793e+00
Iter = 774, Time = 4.642689e+00
Iter = 775, Time = 4.595470e+00
Iter = 776, Time = 4.561659e+00
Iter = 777, Time = 4.835566e+00
Iter = 778, Time = 4.645895e+00
Iter = 779, Time = 4.568931e+00
Iter = 780, Time = 4.744959e+00
Iter = 781, Time = 4.796788e+00
Iter = 782, Time = 4.531314e+00
Iter = 783, Time = 4.653208e+00
Iter = 784, Time = 4.499717e+00
Iter = 785, Time = 4.652951e+00
Iter = 786, Time = 4.548775e+00
Iter = 787, Time = 4.638388e+00
Iter = 788, Time = 4.577972e+00
Iter = 789, Time = 4.688510e+00
Iter = 790, Time = 4.526853e+00
Iter = 791, Time = 4.830315e+00
Reweighting: 2

Iter = 792, Time = 4.626943e+00
Iter = 793, Time = 4.825048e+00
Iter = 794, Time = 4.720156e+00
Iter = 795, Time = 4.823305e+00
Iter = 796, Time = 4.814228e+00
Iter = 797, Time = 4.828126e+00
Iter = 798, Time = 4.967675e+00
Iter = 799, Time = 4.836883e+00
Iter = 800, Time = 4.850958e+00
Iter 800
N-norm = 9.820606e+02, L21-norm = 4.810345e+04, rel_fval = 2.588277e-05
 epsilon = 4.107459e+03, residual = 4.103338e+03
 SNR = 2.461738e+01, aSNR = 2.380257e+01

Iter = 801, Time = 4.633283e+00
Iter = 802, Time = 4.784956e+00
Iter = 803, Time = 4.604911e+00
Iter = 804, Time = 4.652280e+00
Iter = 805, Time = 4.756647e+00
Iter = 806, Time = 4.648958e+00
Iter = 807, Time = 4.657864e+00
Iter = 808, Time = 4.831679e+00
Iter = 809, Time = 4.677196e+00
Iter = 810, Time = 4.663687e+00
Iter = 811, Time = 4.556117e+00
Iter = 812, Time = 4.654701e+00
Iter = 813, Time = 4.646749e+00
Iter = 814, Time = 4.652240e+00
Iter = 815, Time = 4.642808e+00
Iter = 816, Time = 4.643572e+00
Iter = 817, Time = 4.858133e+00
Iter = 818, Time = 4.655137e+00
Iter = 819, Time = 4.546463e+00
Iter = 820, Time = 4.678958e+00
Iter = 821, Time = 4.851087e+00
Iter = 822, Time = 4.553138e+00
Iter = 823, Time = 4.775719e+00
Iter = 824, Time = 4.537872e+00
Iter = 825, Time = 4.643372e+00
Iter = 826, Time = 4.628698e+00
Iter = 827, Time = 4.629582e+00
Iter = 828, Time = 4.647808e+00
Iter = 829, Time = 4.647521e+00
Iter = 830, Time = 4.642952e+00
Iter = 831, Time = 4.787250e+00
Iter = 832, Time = 4.632158e+00
Iter = 833, Time = 4.649196e+00
Iter = 834, Time = 4.547982e+00
Iter = 835, Time = 4.644107e+00
Iter = 836, Time = 4.630942e+00
Iter = 837, Time = 4.640170e+00
Iter = 838, Time = 4.570856e+00
Iter = 839, Time = 4.645451e+00
Iter = 840, Time = 4.817302e+00
Iter = 841, Time = 4.548366e+00
Iter = 842, Time = 4.665599e+00
Iter = 843, Time = 4.643761e+00
Iter = 844, Time = 4.648098e+00
Iter = 845, Time = 4.634978e+00
Iter = 846, Time = 4.551786e+00
Iter = 847, Time = 4.744122e+00
Iter = 848, Time = 4.739233e+00
Iter = 849, Time = 4.749851e+00
Iter = 850, Time = 4.731502e+00
Iter = 851, Time = 4.619319e+00
Iter = 852, Time = 4.633580e+00
Iter = 853, Time = 4.654760e+00
Iter = 854, Time = 4.728339e+00
Iter = 855, Time = 4.764403e+00
Iter = 856, Time = 4.781490e+00
Iter = 857, Time = 4.782916e+00
Iter = 858, Time = 4.788477e+00
Iter = 859, Time = 4.776301e+00
Iter = 860, Time = 4.779488e+00
Iter = 861, Time = 4.761400e+00
Iter = 862, Time = 4.880403e+00
Iter = 863, Time = 4.787924e+00
Iter = 864, Time = 4.705458e+00
Iter = 865, Time = 4.791554e+00
Iter = 866, Time = 4.799700e+00
Iter = 867, Time = 4.714189e+00
Iter = 868, Time = 4.791221e+00
Iter = 869, Time = 4.793191e+00
Iter = 870, Time = 4.811538e+00
Iter = 871, Time = 4.945877e+00
Iter = 872, Time = 4.797971e+00
Iter = 873, Time = 4.730649e+00
Iter = 874, Time = 4.809358e+00
Iter = 875, Time = 4.767805e+00
Iter = 876, Time = 4.905594e+00
Iter = 877, Time = 4.814738e+00
Iter = 878, Time = 4.698201e+00
Iter = 879, Time = 4.805056e+00
Iter = 880, Time = 4.802118e+00
Iter = 881, Time = 4.812628e+00
Iter = 882, Time = 4.744424e+00
Iter = 883, Time = 4.757648e+00
Iter = 884, Time = 4.814521e+00
Iter = 885, Time = 4.999163e+00
Iter = 886, Time = 4.741081e+00
Iter = 887, Time = 4.739050e+00
Iter = 888, Time = 4.716735e+00
Iter = 889, Time = 4.710623e+00
Iter = 890, Time = 4.807765e+00
Iter = 891, Time = 4.621489e+00
Iter = 892, Time = 4.805033e+00
Iter = 893, Time = 4.695033e+00
Iter = 894, Time = 4.802372e+00
Iter = 895, Time = 4.778097e+00
Iter = 896, Time = 4.812235e+00
Iter = 897, Time = 4.725926e+00
Iter = 898, Time = 4.923625e+00
Iter = 899, Time = 5.112506e+00
Iter = 900, Time = 4.882898e+00
Iter 900
N-norm = 9.820742e+02, L21-norm = 4.810338e+04, rel_fval = 1.762946e-05
 epsilon = 4.107459e+03, residual = 4.107884e+03
 SNR = 2.463262e+01, aSNR = 2.382643e+01

Iter = 901, Time = 4.855619e+00
Iter = 902, Time = 4.666501e+00
Iter = 903, Time = 4.802272e+00
Iter = 904, Time = 4.710804e+00
Iter = 905, Time = 4.715101e+00
Iter = 906, Time = 4.709407e+00
Iter = 907, Time = 4.691921e+00
Iter = 908, Time = 4.672244e+00
Iter = 909, Time = 4.686035e+00
Iter = 910, Time = 4.514114e+00
Iter = 911, Time = 4.675705e+00
Iter = 912, Time = 4.886392e+00
Iter = 913, Time = 4.664862e+00
Iter = 914, Time = 4.732860e+00
Iter = 915, Time = 4.584462e+00
Iter = 916, Time = 4.822162e+00
Iter = 917, Time = 4.642961e+00
Iter = 918, Time = 4.650801e+00
Iter = 919, Time = 4.574009e+00
Iter = 920, Time = 4.725157e+00
Iter = 921, Time = 4.635928e+00
Iter = 922, Time = 4.751467e+00
Iter = 923, Time = 4.646370e+00
Iter = 924, Time = 4.571535e+00
Iter = 925, Time = 5.068962e+00
Iter = 926, Time = 4.610326e+00
Iter = 927, Time = 4.593723e+00
Iter = 928, Time = 4.621086e+00
Iter = 929, Time = 4.759744e+00
Iter = 930, Time = 4.618569e+00
Iter = 931, Time = 4.756849e+00
Iter = 932, Time = 4.667641e+00
Iter = 933, Time = 4.653885e+00
Iter = 934, Time = 4.656315e+00
Iter = 935, Time = 4.762521e+00
Iter = 936, Time = 4.646149e+00
Iter = 937, Time = 4.651867e+00
Iter = 938, Time = 4.638545e+00
Iter = 939, Time = 4.575443e+00
Iter = 940, Time = 4.639617e+00
Iter = 941, Time = 4.547965e+00
Iter = 942, Time = 4.648247e+00
Iter = 943, Time = 4.553575e+00
Iter = 944, Time = 4.647035e+00
Iter = 945, Time = 4.504184e+00
Iter = 946, Time = 4.643848e+00
Iter = 947, Time = 4.621146e+00
Iter = 948, Time = 4.652642e+00
Iter = 949, Time = 4.762634e+00
Iter = 950, Time = 4.645082e+00
Iter = 951, Time = 4.671913e+00
Iter = 952, Time = 4.654211e+00
Iter = 953, Time = 4.548530e+00
Iter = 954, Time = 4.646116e+00
Iter = 955, Time = 4.549793e+00
Iter = 956, Time = 4.650382e+00
Iter = 957, Time = 4.487803e+00
Iter = 958, Time = 4.657457e+00
Iter = 959, Time = 4.575402e+00
Iter = 960, Time = 4.678769e+00
Iter = 961, Time = 4.663210e+00
Iter = 962, Time = 4.674239e+00
Iter = 963, Time = 4.744683e+00
Iter = 964, Time = 4.665964e+00
Iter = 965, Time = 4.680114e+00
Iter = 966, Time = 4.792897e+00
Iter = 967, Time = 4.630234e+00
Iter = 968, Time = 4.687428e+00
Iter = 969, Time = 4.656906e+00
Iter = 970, Time = 4.665300e+00
Iter = 971, Time = 4.789187e+00
Iter = 972, Time = 4.970361e+00
Iter = 973, Time = 4.782654e+00
Iter = 974, Time = 4.721697e+00
Iter = 975, Time = 4.620597e+00
Iter = 976, Time = 4.782284e+00
Iter = 977, Time = 4.858581e+00
Iter = 978, Time = 4.701281e+00
Iter = 979, Time = 4.654105e+00
Iter = 980, Time = 4.661568e+00
Iter = 981, Time = 4.749883e+00
Iter = 982, Time = 4.703676e+00
Iter = 983, Time = 4.679151e+00
Iter = 984, Time = 4.819786e+00
Iter = 985, Time = 4.683572e+00
Iter = 986, Time = 4.877599e+00
Iter = 987, Time = 4.597725e+00
Iter = 988, Time = 4.791788e+00
Iter = 989, Time = 4.686292e+00
Iter = 990, Time = 4.754677e+00
Iter = 991, Time = 4.687922e+00
Iter = 992, Time = 4.653835e+00
Iter = 993, Time = 4.645832e+00
Iter = 994, Time = 4.600109e+00
Iter = 995, Time = 4.699330e+00
Iter = 996, Time = 4.685638e+00
Iter = 997, Time = 4.598762e+00
Iter = 998, Time = 4.592057e+00
Iter = 999, Time = 4.619183e+00
Iter = 1000, Time = 4.887885e+00
Iter 1000
N-norm = 9.821120e+02, L21-norm = 4.811069e+04, rel_fval = 1.473325e-05
 epsilon = 4.107459e+03, residual = 4.107742e+03
 SNR = 2.465800e+01, aSNR = 2.385969e+01

Iter = 1001, Time = 4.597602e+00
Iter = 1002, Time = 4.668658e+00
Iter = 1003, Time = 4.652887e+00
Iter = 1004, Time = 4.698137e+00
Iter = 1005, Time = 4.691390e+00
Iter = 1006, Time = 4.692179e+00
Iter = 1007, Time = 4.652586e+00
Iter = 1008, Time = 4.683492e+00
Iter = 1009, Time = 4.861998e+00
Iter = 1010, Time = 4.681957e+00
Iter = 1011, Time = 4.646656e+00
Iter = 1012, Time = 4.688391e+00
Iter = 1013, Time = 4.616231e+00
Iter = 1014, Time = 4.676379e+00
Iter = 1015, Time = 4.613293e+00
Iter = 1016, Time = 4.504141e+00
Iter = 1017, Time = 4.696917e+00
Iter = 1018, Time = 4.666271e+00
Iter = 1019, Time = 4.672084e+00
Iter = 1020, Time = 4.664012e+00
Iter = 1021, Time = 4.577287e+00
Iter = 1022, Time = 4.647046e+00
Iter = 1023, Time = 4.795141e+00
Iter = 1024, Time = 4.754386e+00
Iter = 1025, Time = 4.765378e+00
Iter = 1026, Time = 4.649433e+00
Iter = 1027, Time = 4.723106e+00
Iter = 1028, Time = 4.657414e+00
Iter = 1029, Time = 4.654707e+00
Iter = 1030, Time = 4.565623e+00
Iter = 1031, Time = 4.556991e+00
Iter = 1032, Time = 4.760794e+00
Iter = 1033, Time = 4.574660e+00
Iter = 1034, Time = 4.686907e+00
Iter = 1035, Time = 4.645320e+00
Iter = 1036, Time = 4.761855e+00
Iter = 1037, Time = 4.657895e+00
Iter = 1038, Time = 4.663478e+00
Iter = 1039, Time = 4.660451e+00
Iter = 1040, Time = 4.568423e+00
Iter = 1041, Time = 4.649329e+00
Iter = 1042, Time = 4.547607e+00
Iter = 1043, Time = 4.648143e+00
Iter = 1044, Time = 4.668152e+00
Iter = 1045, Time = 4.588643e+00
Iter = 1046, Time = 4.723556e+00
Iter = 1047, Time = 4.640886e+00
Iter = 1048, Time = 4.734339e+00
Iter = 1049, Time = 4.689917e+00
Iter = 1050, Time = 4.704789e+00
Iter = 1051, Time = 4.834956e+00
Iter = 1052, Time = 4.822742e+00
Iter = 1053, Time = 4.846464e+00
Iter = 1054, Time = 5.256078e+00
Iter = 1055, Time = 4.701834e+00
Iter = 1056, Time = 4.706905e+00
Iter = 1057, Time = 4.726799e+00
Iter = 1058, Time = 4.714916e+00
Iter = 1059, Time = 4.657681e+00
Iter = 1060, Time = 4.781552e+00
Iter = 1061, Time = 4.815574e+00
Iter = 1062, Time = 4.633380e+00
Iter = 1063, Time = 4.617108e+00
Iter = 1064, Time = 4.800079e+00
Iter = 1065, Time = 4.578229e+00
Iter = 1066, Time = 4.757148e+00
Iter = 1067, Time = 4.750541e+00
Iter = 1068, Time = 4.699579e+00
Iter = 1069, Time = 4.649948e+00
Iter = 1070, Time = 4.566464e+00
Iter = 1071, Time = 4.750640e+00
Iter = 1072, Time = 4.671498e+00
Iter = 1073, Time = 4.826930e+00
Iter = 1074, Time = 4.595908e+00
Iter = 1075, Time = 4.563523e+00
Iter = 1076, Time = 4.645862e+00
Iter = 1077, Time = 4.696766e+00
Iter = 1078, Time = 4.649463e+00
Iter = 1079, Time = 4.635654e+00
Iter = 1080, Time = 4.631219e+00
Iter = 1081, Time = 4.788182e+00
Iter = 1082, Time = 4.838628e+00
Iter = 1083, Time = 4.778041e+00
Iter = 1084, Time = 4.868157e+00
Iter = 1085, Time = 4.834231e+00
Iter = 1086, Time = 4.680510e+00
Iter = 1087, Time = 4.813568e+00
Iter = 1088, Time = 4.802044e+00
Iter = 1089, Time = 4.762971e+00
Iter = 1090, Time = 4.534016e+00
Iter = 1091, Time = 4.679284e+00
Reweighting: 3

Iter = 1092, Time = 4.565269e+00
Iter = 1093, Time = 4.833668e+00
Iter = 1094, Time = 4.684727e+00
Iter = 1095, Time = 4.709141e+00
Iter = 1096, Time = 4.609820e+00
Iter = 1097, Time = 4.706386e+00
Iter = 1098, Time = 4.675328e+00
Iter = 1099, Time = 4.738877e+00
Iter = 1100, Time = 4.822186e+00
Iter 1100
N-norm = 9.821341e+02, L21-norm = 4.811572e+04, rel_fval = 2.372901e-05
 epsilon = 4.107459e+03, residual = 4.102991e+03
 SNR = 2.468478e+01, aSNR = 2.389315e+01

Iter = 1101, Time = 4.674784e+00
Iter = 1102, Time = 4.772291e+00
Iter = 1103, Time = 4.966795e+00
Iter = 1104, Time = 4.786105e+00
Iter = 1105, Time = 4.671492e+00
Iter = 1106, Time = 4.642858e+00
Iter = 1107, Time = 4.681162e+00
Iter = 1108, Time = 4.588716e+00
Iter = 1109, Time = 4.824538e+00
Iter = 1110, Time = 4.596770e+00
Iter = 1111, Time = 4.680026e+00
Iter = 1112, Time = 4.640420e+00
Iter = 1113, Time = 4.667164e+00
Iter = 1114, Time = 4.657943e+00
Iter = 1115, Time = 4.671499e+00
Iter = 1116, Time = 4.675591e+00
Iter = 1117, Time = 4.594144e+00
Iter = 1118, Time = 4.840609e+00
Iter = 1119, Time = 4.645934e+00
Iter = 1120, Time = 4.664265e+00
Iter = 1121, Time = 4.563193e+00
Iter = 1122, Time = 4.803289e+00
Iter = 1123, Time = 4.760687e+00
Iter = 1124, Time = 4.737965e+00
Iter = 1125, Time = 4.623592e+00
Iter = 1126, Time = 4.751581e+00
Iter = 1127, Time = 4.747636e+00
Iter = 1128, Time = 4.619505e+00
Iter = 1129, Time = 4.823201e+00
Iter = 1130, Time = 4.649434e+00
Iter = 1131, Time = 4.838208e+00
Iter = 1132, Time = 4.557857e+00
Iter = 1133, Time = 4.633401e+00
Iter = 1134, Time = 4.623954e+00
Iter = 1135, Time = 4.642808e+00
Iter = 1136, Time = 4.668610e+00
Iter = 1137, Time = 4.661531e+00
Iter = 1138, Time = 4.585921e+00
Iter = 1139, Time = 4.640759e+00
Iter = 1140, Time = 4.702319e+00
Iter = 1141, Time = 4.864698e+00
Iter = 1142, Time = 4.692109e+00
Iter = 1143, Time = 4.644779e+00
Iter = 1144, Time = 4.687593e+00
Iter = 1145, Time = 4.703905e+00
Iter = 1146, Time = 4.720247e+00
Iter = 1147, Time = 4.745963e+00
Iter = 1148, Time = 4.725843e+00
Iter = 1149, Time = 4.802895e+00
Iter = 1150, Time = 5.016521e+00
Iter = 1151, Time = 4.898642e+00
Iter = 1152, Time = 4.684311e+00
Iter = 1153, Time = 4.700778e+00
Iter = 1154, Time = 4.655120e+00
Iter = 1155, Time = 4.823282e+00
Iter = 1156, Time = 4.662629e+00
Iter = 1157, Time = 4.569323e+00
Iter = 1158, Time = 4.685647e+00
Iter = 1159, Time = 4.816959e+00
Iter = 1160, Time = 4.572774e+00
Iter = 1161, Time = 4.503633e+00
Iter = 1162, Time = 4.661188e+00
Iter = 1163, Time = 4.689927e+00
Iter = 1164, Time = 4.584782e+00
Iter = 1165, Time = 4.731287e+00
Iter = 1166, Time = 4.653391e+00
Iter = 1167, Time = 4.663128e+00
Iter = 1168, Time = 4.813341e+00
Iter = 1169, Time = 4.781128e+00
Iter = 1170, Time = 4.678168e+00
Iter = 1171, Time = 4.779480e+00
Iter = 1172, Time = 4.774919e+00
Iter = 1173, Time = 4.699194e+00
Iter = 1174, Time = 4.678576e+00
Iter = 1175, Time = 4.592686e+00
Iter = 1176, Time = 4.716492e+00
Iter = 1177, Time = 4.809478e+00
Iter = 1178, Time = 4.877926e+00
Iter = 1179, Time = 4.902639e+00
Iter = 1180, Time = 5.067877e+00
Iter = 1181, Time = 4.807204e+00
Iter = 1182, Time = 4.804553e+00
Iter = 1183, Time = 4.791057e+00
Iter = 1184, Time = 4.780958e+00
Iter = 1185, Time = 4.725089e+00
Iter = 1186, Time = 4.939666e+00
Iter = 1187, Time = 4.792408e+00
Iter = 1188, Time = 4.788860e+00
Iter = 1189, Time = 4.749870e+00
Iter = 1190, Time = 4.723541e+00
Iter = 1191, Time = 4.724011e+00
Iter = 1192, Time = 4.720947e+00
Iter = 1193, Time = 4.718694e+00
Iter = 1194, Time = 4.733610e+00
Iter = 1195, Time = 4.983513e+00
Iter = 1196, Time = 4.747041e+00
Iter = 1197, Time = 4.804935e+00
Iter = 1198, Time = 4.752370e+00
Iter = 1199, Time = 4.906902e+00
Iter = 1200, Time = 4.908894e+00
Iter 1200
N-norm = 9.821293e+02, L21-norm = 4.811569e+04, rel_fval = 1.389424e-05
 epsilon = 4.107459e+03, residual = 4.107671e+03
 SNR = 2.470174e+01, aSNR = 2.391624e+01

Iter = 1201, Time = 4.899026e+00
Iter = 1202, Time = 4.889924e+00
Iter = 1203, Time = 5.100816e+00
Iter = 1204, Time = 4.873484e+00
Iter = 1205, Time = 4.708900e+00
Iter = 1206, Time = 4.910678e+00
Iter = 1207, Time = 4.815976e+00
Iter = 1208, Time = 4.792723e+00
Iter = 1209, Time = 4.796121e+00
Iter = 1210, Time = 4.683316e+00
Iter = 1211, Time = 4.793800e+00
Iter = 1212, Time = 5.072419e+00
Iter = 1213, Time = 4.703512e+00
Iter = 1214, Time = 4.846041e+00
Iter = 1215, Time = 4.836557e+00
Iter = 1216, Time = 4.895981e+00
Iter = 1217, Time = 4.940378e+00
Iter = 1218, Time = 4.804252e+00
Iter = 1219, Time = 4.723523e+00
Iter = 1220, Time = 4.778214e+00
Iter = 1221, Time = 4.845787e+00
Iter = 1222, Time = 4.793002e+00
Iter = 1223, Time = 4.789184e+00
Iter = 1224, Time = 4.787404e+00
Iter = 1225, Time = 4.765053e+00
Iter = 1226, Time = 4.997212e+00
Iter = 1227, Time = 4.694934e+00
Iter = 1228, Time = 4.778130e+00
Iter = 1229, Time = 4.806890e+00
Iter = 1230, Time = 4.895166e+00
Iter = 1231, Time = 4.905259e+00
Iter = 1232, Time = 4.781144e+00
Iter = 1233, Time = 4.858672e+00
Iter = 1234, Time = 4.798901e+00
Iter = 1235, Time = 4.850059e+00
Iter = 1236, Time = 4.783665e+00
Iter = 1237, Time = 4.756040e+00
Iter = 1238, Time = 4.625343e+00
Iter = 1239, Time = 4.758530e+00
Iter = 1240, Time = 4.899020e+00
Iter = 1241, Time = 4.745854e+00
Iter = 1242, Time = 4.760416e+00
Iter = 1243, Time = 4.761314e+00
Iter = 1244, Time = 4.654271e+00
Iter = 1245, Time = 4.672895e+00
Iter = 1246, Time = 4.627710e+00
Iter = 1247, Time = 4.651788e+00
Iter = 1248, Time = 4.756457e+00
Iter = 1249, Time = 4.855266e+00
Iter = 1250, Time = 4.651195e+00
Iter = 1251, Time = 4.649480e+00
Iter = 1252, Time = 4.619572e+00
Iter = 1253, Time = 4.624191e+00
Iter = 1254, Time = 4.549611e+00
Iter = 1255, Time = 4.577625e+00
Iter = 1256, Time = 4.664282e+00
Iter = 1257, Time = 4.606582e+00
Iter = 1258, Time = 4.773358e+00
Iter = 1259, Time = 4.695147e+00
Iter = 1260, Time = 4.557449e+00
Iter = 1261, Time = 4.651268e+00
Iter = 1262, Time = 4.630620e+00
Iter = 1263, Time = 4.926392e+00
Iter = 1264, Time = 4.728592e+00
Iter = 1265, Time = 4.660472e+00
Iter = 1266, Time = 4.637057e+00
Iter = 1267, Time = 4.572850e+00
Iter = 1268, Time = 4.653591e+00
Iter = 1269, Time = 4.632826e+00
Iter = 1270, Time = 4.791920e+00
Iter = 1271, Time = 4.616874e+00
Iter = 1272, Time = 4.998400e+00
Iter = 1273, Time = 4.773557e+00
Iter = 1274, Time = 4.699059e+00
Iter = 1275, Time = 4.683146e+00
Iter = 1276, Time = 4.668264e+00
Iter = 1277, Time = 4.785064e+00
Iter = 1278, Time = 4.757765e+00
Iter = 1279, Time = 4.558677e+00
Iter = 1280, Time = 4.646545e+00
Iter = 1281, Time = 4.553948e+00
Iter = 1282, Time = 4.646322e+00
Iter = 1283, Time = 4.664063e+00
Iter = 1284, Time = 4.661637e+00
Iter = 1285, Time = 4.789203e+00
Iter = 1286, Time = 4.644903e+00
Iter = 1287, Time = 4.552950e+00
Iter = 1288, Time = 4.663304e+00
Iter = 1289, Time = 4.492237e+00
Iter = 1290, Time = 4.675226e+00
Iter = 1291, Time = 4.580418e+00
Iter = 1292, Time = 4.469609e+00
Iter = 1293, Time = 4.675707e+00
Iter = 1294, Time = 4.659854e+00
Iter = 1295, Time = 4.827768e+00
Iter = 1296, Time = 4.653799e+00
Iter = 1297, Time = 4.574915e+00
Iter = 1298, Time = 4.655793e+00
Iter = 1299, Time = 4.720829e+00
Iter = 1300, Time = 4.802564e+00
Iter 1300
N-norm = 9.821637e+02, L21-norm = 4.812227e+04, rel_fval = 1.201448e-05
 epsilon = 4.107459e+03, residual = 4.107659e+03
 SNR = 2.472549e+01, aSNR = 2.394552e+01

Iter = 1301, Time = 4.735260e+00
Iter = 1302, Time = 4.855019e+00
Iter = 1303, Time = 4.827294e+00
Iter = 1304, Time = 4.759267e+00
Iter = 1305, Time = 4.809731e+00
Iter = 1306, Time = 4.792662e+00
Iter = 1307, Time = 4.791688e+00
Iter = 1308, Time = 4.989349e+00
Iter = 1309, Time = 4.801233e+00
Iter = 1310, Time = 4.697368e+00
Iter = 1311, Time = 4.807778e+00
Iter = 1312, Time = 4.768188e+00
Iter = 1313, Time = 4.912207e+00
Iter = 1314, Time = 4.746168e+00
Iter = 1315, Time = 4.795161e+00
Iter = 1316, Time = 4.753447e+00
Iter = 1317, Time = 4.977736e+00
Iter = 1318, Time = 4.713554e+00
Iter = 1319, Time = 4.948469e+00
Iter = 1320, Time = 4.986410e+00
Iter = 1321, Time = 4.953556e+00
Iter = 1322, Time = 5.018361e+00
Iter = 1323, Time = 4.680383e+00
Iter = 1324, Time = 4.646537e+00
Iter = 1325, Time = 4.588410e+00
Iter = 1326, Time = 4.740801e+00
Iter = 1327, Time = 4.686065e+00
Iter = 1328, Time = 4.712423e+00
Iter = 1329, Time = 4.616104e+00
Iter = 1330, Time = 4.665596e+00
Iter = 1331, Time = 4.716685e+00
Iter = 1332, Time = 4.610625e+00
Iter = 1333, Time = 4.681439e+00
Iter = 1334, Time = 4.717513e+00
Iter = 1335, Time = 4.772006e+00
Iter = 1336, Time = 4.920783e+00
Iter = 1337, Time = 4.682348e+00
Iter = 1338, Time = 4.644054e+00
Iter = 1339, Time = 4.778874e+00
Iter = 1340, Time = 4.654683e+00
Iter = 1341, Time = 4.630354e+00
Iter = 1342, Time = 4.710086e+00
Iter = 1343, Time = 4.694583e+00
Iter = 1344, Time = 4.705187e+00
Iter = 1345, Time = 4.981885e+00
Iter = 1346, Time = 4.779564e+00
Iter = 1347, Time = 4.646833e+00
Iter = 1348, Time = 4.596760e+00
Iter = 1349, Time = 4.685534e+00
Iter = 1350, Time = 4.685084e+00
Iter = 1351, Time = 4.599635e+00
Iter = 1352, Time = 4.712193e+00
Iter = 1353, Time = 4.756319e+00
Iter = 1354, Time = 4.752762e+00
Iter = 1355, Time = 4.718826e+00
Iter = 1356, Time = 4.799033e+00
Iter = 1357, Time = 4.763891e+00
Iter = 1358, Time = 5.033102e+00
Iter = 1359, Time = 4.819906e+00
Iter = 1360, Time = 4.728760e+00
Iter = 1361, Time = 4.931971e+00
Iter = 1362, Time = 4.859423e+00
Iter = 1363, Time = 4.818888e+00
Iter = 1364, Time = 4.859455e+00
Iter = 1365, Time = 4.915687e+00
Iter = 1366, Time = 4.931199e+00
Iter = 1367, Time = 4.921693e+00
Iter = 1368, Time = 4.931536e+00
Iter = 1369, Time = 4.856831e+00
Iter = 1370, Time = 4.886123e+00
Iter = 1371, Time = 4.827997e+00
Iter = 1372, Time = 5.027377e+00
Iter = 1373, Time = 4.860233e+00
Iter = 1374, Time = 4.829760e+00
Iter = 1375, Time = 4.734526e+00
Iter = 1376, Time = 4.859657e+00
Iter = 1377, Time = 4.831285e+00
Iter = 1378, Time = 4.743481e+00
Iter = 1379, Time = 4.834408e+00
Iter = 1380, Time = 4.771667e+00
Iter = 1381, Time = 5.134369e+00
Iter = 1382, Time = 4.987849e+00
Iter = 1383, Time = 4.821963e+00
Iter = 1384, Time = 4.738052e+00
Iter = 1385, Time = 4.817831e+00
Iter = 1386, Time = 4.811988e+00
Iter = 1387, Time = 4.685740e+00
Iter = 1388, Time = 4.728934e+00
Iter = 1389, Time = 4.681229e+00
Iter = 1390, Time = 4.892958e+00
Iter = 1391, Time = 4.783208e+00
Reweighting: 4

Iter = 1392, Time = 4.694299e+00
Iter = 1393, Time = 4.930568e+00
Iter = 1394, Time = 4.737600e+00
Iter = 1395, Time = 4.688247e+00
Iter = 1396, Time = 4.892320e+00
Iter = 1397, Time = 4.856381e+00
Iter = 1398, Time = 4.720979e+00
Iter = 1399, Time = 4.645436e+00
Iter = 1400, Time = 4.729343e+00
Iter 1400
N-norm = 9.821940e+02, L21-norm = 4.812649e+04, rel_fval = 2.093606e-05
 epsilon = 4.107459e+03, residual = 4.103167e+03
 SNR = 2.474982e+01, aSNR = 2.397401e+01

Iter = 1401, Time = 4.628736e+00
Iter = 1402, Time = 4.943133e+00
Iter = 1403, Time = 4.610708e+00
Iter = 1404, Time = 4.697138e+00
Iter = 1405, Time = 4.574960e+00
Iter = 1406, Time = 4.927865e+00
Iter = 1407, Time = 4.649128e+00
Iter = 1408, Time = 4.637164e+00
Iter = 1409, Time = 4.722231e+00
Iter = 1410, Time = 4.725386e+00
Iter = 1411, Time = 4.706037e+00
Iter = 1412, Time = 4.534658e+00
Iter = 1413, Time = 4.710038e+00
Iter = 1414, Time = 4.618052e+00
Iter = 1415, Time = 5.010516e+00
Iter = 1416, Time = 4.751416e+00
Iter = 1417, Time = 4.715591e+00
Iter = 1418, Time = 4.713179e+00
Iter = 1419, Time = 4.803229e+00
Iter = 1420, Time = 4.813242e+00
Iter = 1421, Time = 4.843273e+00
Iter = 1422, Time = 4.696567e+00
Iter = 1423, Time = 4.683419e+00
Iter = 1424, Time = 4.652084e+00
Iter = 1425, Time = 4.879700e+00
Iter = 1426, Time = 4.626630e+00
Iter = 1427, Time = 4.613980e+00
Iter = 1428, Time = 4.696642e+00
Iter = 1429, Time = 4.703623e+00
Iter = 1430, Time = 4.617292e+00
Iter = 1431, Time = 4.522981e+00
Iter = 1432, Time = 4.687643e+00
Iter = 1433, Time = 4.587256e+00
Iter = 1434, Time = 4.696184e+00
Iter = 1435, Time = 4.745068e+00
Iter = 1436, Time = 4.824210e+00
Iter = 1437, Time = 4.816587e+00
Iter = 1438, Time = 5.005000e+00
Iter = 1439, Time = 4.795474e+00
Iter = 1440, Time = 4.697210e+00
Iter = 1441, Time = 4.796920e+00
Iter = 1442, Time = 4.811304e+00
Iter = 1443, Time = 4.818939e+00
Iter = 1444, Time = 4.753626e+00
Iter = 1445, Time = 4.712513e+00
Iter = 1446, Time = 4.552213e+00
Iter = 1447, Time = 4.786354e+00
Iter = 1448, Time = 4.468689e+00
Iter = 1449, Time = 4.607840e+00
Iter = 1450, Time = 4.606363e+00
Iter = 1451, Time = 4.554127e+00
Iter = 1452, Time = 4.551597e+00
Iter = 1453, Time = 4.624340e+00
Iter = 1454, Time = 4.675767e+00
Iter = 1455, Time = 4.645134e+00
Iter = 1456, Time = 4.618460e+00
Iter = 1457, Time = 4.565754e+00
Iter = 1458, Time = 4.650966e+00
Iter = 1459, Time = 4.658962e+00
Iter = 1460, Time = 4.615487e+00
Iter = 1461, Time = 4.549424e+00
Iter = 1462, Time = 4.777363e+00
Iter = 1463, Time = 4.585899e+00
Iter = 1464, Time = 4.603576e+00
Iter = 1465, Time = 4.552976e+00
Iter = 1466, Time = 4.557855e+00
Iter = 1467, Time = 4.554508e+00
Iter = 1468, Time = 4.546170e+00
Iter = 1469, Time = 4.518351e+00
Iter = 1470, Time = 4.550890e+00
Iter = 1471, Time = 4.539227e+00
Iter = 1472, Time = 4.574355e+00
Iter = 1473, Time = 4.608244e+00
Iter = 1474, Time = 4.669445e+00
Iter = 1475, Time = 4.575751e+00
Iter = 1476, Time = 4.681641e+00
Iter = 1477, Time = 4.752984e+00
Iter = 1478, Time = 4.769905e+00
Iter = 1479, Time = 4.608740e+00
Iter = 1480, Time = 5.027845e+00
Iter = 1481, Time = 4.720467e+00
Iter = 1482, Time = 4.666246e+00
Iter = 1483, Time = 4.693076e+00
Iter = 1484, Time = 4.793581e+00
Iter = 1485, Time = 4.886008e+00
Iter = 1486, Time = 4.675368e+00
Iter = 1487, Time = 4.694878e+00
Iter = 1488, Time = 4.599107e+00
Iter = 1489, Time = 4.927790e+00
Iter = 1490, Time = 4.745362e+00
Iter = 1491, Time = 4.819638e+00
Iter = 1492, Time = 4.605289e+00
Iter = 1493, Time = 4.718728e+00
Iter = 1494, Time = 4.672773e+00
Iter = 1495, Time = 4.642351e+00
Iter = 1496, Time = 4.792462e+00
Iter = 1497, Time = 4.709004e+00
Iter = 1498, Time = 4.972770e+00
Iter = 1499, Time = 4.722797e+00
Iter = 1500, Time = 4.614058e+00
Iter 1500
N-norm = 9.821905e+02, L21-norm = 4.812614e+04, rel_fval = 1.275812e-05
 epsilon = 4.107459e+03, residual = 4.107647e+03
 SNR = 2.477175e+01, aSNR = 2.399949e+01

Iter = 1501, Time = 4.652068e+00
Iter = 1502, Time = 4.700566e+00
Iter = 1503, Time = 4.641991e+00
Iter = 1504, Time = 4.707049e+00
Iter = 1505, Time = 4.693956e+00
Iter = 1506, Time = 4.650851e+00
Iter = 1507, Time = 4.659932e+00
Iter = 1508, Time = 4.749401e+00
Iter = 1509, Time = 4.745156e+00
Iter = 1510, Time = 4.567345e+00
Iter = 1511, Time = 4.701199e+00
Iter = 1512, Time = 4.704729e+00
Iter = 1513, Time = 4.597096e+00
Iter = 1514, Time = 4.660214e+00
Iter = 1515, Time = 4.725549e+00
Iter = 1516, Time = 4.609091e+00
Iter = 1517, Time = 4.653716e+00
Iter = 1518, Time = 4.748642e+00
Iter = 1519, Time = 4.865291e+00
Iter = 1520, Time = 4.700559e+00
Iter = 1521, Time = 5.070521e+00
Iter = 1522, Time = 4.708742e+00
Iter = 1523, Time = 4.688602e+00
Iter = 1524, Time = 4.821649e+00
Iter = 1525, Time = 4.760147e+00
Iter = 1526, Time = 4.744912e+00
Iter = 1527, Time = 4.711063e+00
Iter = 1528, Time = 4.666580e+00
Iter = 1529, Time = 4.855867e+00
Iter = 1530, Time = 4.772005e+00
Iter = 1531, Time = 4.888052e+00
Iter = 1532, Time = 4.839807e+00
Iter = 1533, Time = 4.659610e+00
Iter = 1534, Time = 4.899661e+00
Iter = 1535, Time = 4.659674e+00
Iter = 1536, Time = 4.664139e+00
Iter = 1537, Time = 4.672703e+00
Iter = 1538, Time = 4.757271e+00
Iter = 1539, Time = 4.627116e+00
Iter = 1540, Time = 4.916354e+00
Iter = 1541, Time = 4.731437e+00
Iter = 1542, Time = 4.638458e+00
Iter = 1543, Time = 4.625517e+00
Iter = 1544, Time = 4.738935e+00
Iter = 1545, Time = 4.739565e+00
Iter = 1546, Time = 4.658048e+00
Iter = 1547, Time = 4.749243e+00
Iter = 1548, Time = 4.628641e+00
Iter = 1549, Time = 4.971740e+00
Iter = 1550, Time = 4.757186e+00
Iter = 1551, Time = 4.760500e+00
Iter = 1552, Time = 4.718810e+00
Iter = 1553, Time = 4.751272e+00
Iter = 1554, Time = 4.732089e+00
Iter = 1555, Time = 4.761371e+00
Iter = 1556, Time = 4.646599e+00
Iter = 1557, Time = 4.726471e+00
Iter = 1558, Time = 4.824767e+00
Iter = 1559, Time = 4.623983e+00
Iter = 1560, Time = 4.595012e+00
Iter = 1561, Time = 4.659796e+00
Iter = 1562, Time = 4.715349e+00
Iter = 1563, Time = 4.745341e+00
Iter = 1564, Time = 4.741139e+00
Iter = 1565, Time = 4.600726e+00
Iter = 1566, Time = 4.747310e+00
Iter = 1567, Time = 4.721628e+00
Iter = 1568, Time = 4.709597e+00
Iter = 1569, Time = 4.689421e+00
Iter = 1570, Time = 4.905089e+00
Iter = 1571, Time = 4.991260e+00
Iter = 1572, Time = 4.800393e+00
Iter = 1573, Time = 4.672170e+00
Iter = 1574, Time = 4.635329e+00
Iter = 1575, Time = 4.763240e+00
Iter = 1576, Time = 4.716224e+00
Iter = 1577, Time = 4.598152e+00
Iter = 1578, Time = 4.605132e+00
Iter = 1579, Time = 4.645494e+00
Iter = 1580, Time = 4.582761e+00
Iter = 1581, Time = 4.883662e+00
Iter = 1582, Time = 4.762819e+00
Iter = 1583, Time = 4.753050e+00
Iter = 1584, Time = 4.683352e+00
Iter = 1585, Time = 4.578397e+00
Iter = 1586, Time = 4.596863e+00
Iter = 1587, Time = 4.695410e+00
Iter = 1588, Time = 4.660379e+00
Iter = 1589, Time = 4.657707e+00
Iter = 1590, Time = 4.978674e+00
Iter = 1591, Time = 4.698167e+00
Iter = 1592, Time = 4.656044e+00
Iter = 1593, Time = 4.596324e+00
Iter = 1594, Time = 4.504617e+00
Iter = 1595, Time = 4.606025e+00
Iter = 1596, Time = 4.650993e+00
Iter = 1597, Time = 4.652531e+00
Iter = 1598, Time = 4.656274e+00
Iter = 1599, Time = 4.844143e+00
Iter = 1600, Time = 4.657649e+00
Iter 1600
N-norm = 9.822249e+02, L21-norm = 4.813206e+04, rel_fval = 9.844668e-06
 epsilon = 4.107459e+03, residual = 4.107564e+03
 SNR = 2.479756e+01, aSNR = 2.402915e+01

Iter = 1601, Time = 4.563994e+00
Iter = 1602, Time = 4.736886e+00
Iter = 1603, Time = 4.902029e+00
Iter = 1604, Time = 4.695961e+00
Iter = 1605, Time = 4.662556e+00
Iter = 1606, Time = 4.658565e+00
Iter = 1607, Time = 4.716142e+00
Iter = 1608, Time = 4.750957e+00
Iter = 1609, Time = 4.759738e+00
Iter = 1610, Time = 4.643491e+00
Iter = 1611, Time = 4.658178e+00
Iter = 1612, Time = 5.185366e+00
Iter = 1613, Time = 4.586266e+00
Iter = 1614, Time = 4.524828e+00
Iter = 1615, Time = 4.648765e+00
Iter = 1616, Time = 4.626321e+00
Iter = 1617, Time = 4.636852e+00
Iter = 1618, Time = 4.604654e+00
Iter = 1619, Time = 4.656121e+00
Iter = 1620, Time = 4.485658e+00
Iter = 1621, Time = 4.559590e+00
Iter = 1622, Time = 4.755954e+00
Iter = 1623, Time = 4.634618e+00
Iter = 1624, Time = 4.651842e+00
Iter = 1625, Time = 4.648812e+00
Iter = 1626, Time = 4.810131e+00
Iter = 1627, Time = 4.556117e+00
Iter = 1628, Time = 4.630290e+00
Iter = 1629, Time = 4.707486e+00
Iter = 1630, Time = 4.564655e+00
Iter = 1631, Time = 4.695546e+00
Iter = 1632, Time = 4.523000e+00
Iter = 1633, Time = 4.666457e+00
Iter = 1634, Time = 4.688641e+00
Iter = 1635, Time = 4.656212e+00
Iter = 1636, Time = 4.795285e+00
Iter = 1637, Time = 4.671296e+00
Iter = 1638, Time = 4.551686e+00
Iter = 1639, Time = 4.703818e+00
Iter = 1640, Time = 4.711090e+00
Iter = 1641, Time = 4.743503e+00
Iter = 1642, Time = 4.682759e+00
Iter = 1643, Time = 4.611135e+00
Iter = 1644, Time = 4.741192e+00
Iter = 1645, Time = 4.862452e+00
Iter = 1646, Time = 4.871401e+00
Iter = 1647, Time = 4.856958e+00
Iter = 1648, Time = 4.641161e+00
Iter = 1649, Time = 4.971455e+00
Iter = 1650, Time = 4.646518e+00
Iter = 1651, Time = 4.667779e+00
Iter = 1652, Time = 4.792677e+00
Iter = 1653, Time = 4.679907e+00
Iter = 1654, Time = 4.700683e+00
Iter = 1655, Time = 4.595737e+00
Iter = 1656, Time = 4.759994e+00
Iter = 1657, Time = 4.693492e+00
Iter = 1658, Time = 4.661350e+00
Iter = 1659, Time = 4.807755e+00
Iter = 1660, Time = 4.577436e+00
Iter = 1661, Time = 4.766685e+00
Iter = 1662, Time = 4.598113e+00
Iter = 1663, Time = 4.658480e+00
Iter = 1664, Time = 4.633433e+00
Iter = 1665, Time = 4.648314e+00
Iter = 1666, Time = 4.753206e+00
Iter = 1667, Time = 4.625407e+00
Iter = 1668, Time = 4.594055e+00
Iter = 1669, Time = 4.765142e+00
Iter = 1670, Time = 4.774024e+00
Iter = 1671, Time = 4.776758e+00
Iter = 1672, Time = 4.931828e+00
Iter = 1673, Time = 4.853288e+00
Iter = 1674, Time = 4.838161e+00
Iter = 1675, Time = 4.775468e+00
Iter = 1676, Time = 4.753053e+00
Iter = 1677, Time = 4.657947e+00
Iter = 1678, Time = 4.730727e+00
Iter = 1679, Time = 4.681960e+00
Iter = 1680, Time = 4.762433e+00
Iter = 1681, Time = 4.970435e+00
Iter = 1682, Time = 4.732014e+00
Iter = 1683, Time = 4.759883e+00
Iter = 1684, Time = 4.757772e+00
Iter = 1685, Time = 4.756055e+00
Iter = 1686, Time = 4.597915e+00
Iter = 1687, Time = 4.780269e+00
Iter = 1688, Time = 4.946027e+00
Iter = 1689, Time = 4.734883e+00
Iter = 1690, Time = 4.821099e+00
Iter = 1691, Time = 4.724014e+00
Reweighting: 5



 No more reweights 


end_loop =

   8.0292e+03

Maximum number of iterations reached
Iter 1691
N-norm = 9.822534e+02, L21-norm = 4.813760e+04, rel_fval = 8.919161e-06
 epsilon = 4.107459e+03, residual = 4.107352e+03
 SNR = 2.481931e+01, aSNR = 2.405400e+01


SNR =

   24.8193


SNR_average =

   24.0540


Time_iter_average =

    4.7282

[Warning: Directory already exists.] 
[> In Solver_simulated_data_FINAL_clean (line 188)
  In main_simulated_data_FINAL_clean (line 196)] 
