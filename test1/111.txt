
                            < M A T L A B (R) >
                  Copyright 1984-2018 The MathWorks, Inc.
                   R2018a (9.4.0.813654) 64-bit (glnxa64)
                             February 23, 2018

 
To get started, type one of these: helpwin, helpdesk, or demo.
For product information, visit www.mathworks.com.
 

irtdir =

    '/lustre/home/sc004/aa61/HyperSARA_dist_Full/irt'

Path setup for irt appears to have succeeded.
/*----------------------------------------------------------------*/
 example: Simulation of wide band radio interferometric data
/*----------------------------------------------------------------*/

n_src =

    11


ans =

     9


T =

   100


hrs =

     6


ans =

     0     1


bmax =

    3.1416


ans =

     0     1


bmax =

    3.1416


ans =

       35100           1

Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 2s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Initializing the NUFFT operator


Computing block matrices ...
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Block matrix 1: 1s 
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
Warn: kaiser_bessel_params 137: could not open file "private/kaiser,m=0" so using default alpha = 2.34 J which should be fine.
norm it n=2 norm=55231.1356
norm it n=3 norm=224419.4607
norm it n=4 norm=259236.0951
norm it n=5 norm=277689.5441
norm it n=6 norm=289803.0908
norm it n=7 norm=298829.5135
norm it n=8 norm=306056.6454
norm it n=9 norm=312102.9056
norm it n=10 norm=317312.0017
norm it n=11 norm=321897.5122
norm it n=12 norm=326003.5138
norm it n=13 norm=329732.7839
norm it n=14 norm=333161.1805
norm it n=15 norm=336345.6597
norm it n=16 norm=339329.1632
norm it n=17 norm=342143.8638
norm it n=18 norm=344813.4945
norm it n=19 norm=347355.1297
norm it n=20 norm=349780.6185
norm it n=21 norm=352097.7777
norm it n=22 norm=354311.404
norm it n=23 norm=356424.1385
norm it n=24 norm=358437.1982
norm it n=25 norm=360350.9841
norm it n=26 norm=362165.5694
norm it n=27 norm=363881.075
norm it n=28 norm=365497.9389
norm it n=29 norm=367017.0911
norm it n=30 norm=368440.0463
norm it n=31 norm=369768.9306
norm it n=32 norm=371006.4564
norm it n=33 norm=372155.8614
norm it n=34 norm=373220.8245
norm it n=35 norm=374205.3697
norm it n=36 norm=375113.7677
norm it n=37 norm=375950.4412
norm it n=38 norm=376719.8784
norm it n=39 norm=377426.5575
norm it n=40 norm=378074.8836
norm it n=41 norm=378669.1377
norm it n=42 norm=379213.4372
norm it n=43 norm=379711.7074
norm it n=44 norm=380167.6622
norm it n=45 norm=380584.7923
norm it n=46 norm=380966.3606
norm it n=47 norm=381315.4016
norm it n=48 norm=381634.7265
norm it n=49 norm=381926.9295
norm it n=50 norm=382194.3978
norm it n=51 norm=382439.3219
norm it n=52 norm=382663.7075
norm it n=53 norm=382869.3877
norm it n=54 norm=383058.035
norm it n=55 norm=383231.1734
norm it n=56 norm=383390.1903
norm it n=57 norm=383536.3472
norm it n=58 norm=383670.7906
norm it n=59 norm=383794.5621
norm it n=60 norm=383908.6072
norm it n=61 norm=384013.7842
norm it n=62 norm=384110.8722
norm it n=63 norm=384200.5782
norm it n=64 norm=384283.544
norm it n=65 norm=384360.352
norm it n=66 norm=384431.5311
norm it n=67 norm=384497.5617
norm it n=68 norm=384558.88
norm it n=69 norm=384615.8827
norm it n=70 norm=384668.9302
norm it n=71 norm=384718.3504
norm it n=72 norm=384764.4419
norm it n=73 norm=384807.4764
norm it n=74 norm=384847.7013
norm it n=75 norm=384885.3424
norm it n=76 norm=384920.6054
norm it n=77 norm=384953.6782
norm it n=78 norm=384984.7322
norm it n=79 norm=385013.9242
norm it n=80 norm=385041.3974
norm it n=81 norm=385067.2829
norm it n=82 norm=385091.7008
norm it n=83 norm=385114.7609
norm it n=84 norm=385136.564
norm it n=85 norm=385157.2026
norm it n=86 norm=385176.7615
norm it n=87 norm=385195.3186
norm it n=88 norm=385212.9454
norm it n=89 norm=385229.708
norm it n=90 norm=385245.6668
norm it n=91 norm=385260.8777
norm it n=92 norm=385275.392
norm it n=93 norm=385289.2572
norm it n=94 norm=385302.5169
norm it n=95 norm=385315.2115
norm it n=96 norm=385327.3783
norm it n=97 norm=385339.0517
norm it n=98 norm=385350.2636
norm it n=99 norm=385361.0434
norm it n=100 norm=385371.4183
norm it n=101 norm=385381.4137
norm it n=102 norm=385391.053
norm it n=103 norm=385400.3577
norm it n=104 norm=385409.3482
norm it n=105 norm=385418.0431
norm it n=106 norm=385426.4596
norm it n=107 norm=385434.6141
norm it n=108 norm=385442.5214
norm it n=109 norm=385450.1954
norm it n=110 norm=385457.6493
norm it n=111 norm=385464.895
norm it n=112 norm=385471.9439
norm it n=113 norm=385478.8063
norm it n=114 norm=385485.4921
norm it n=115 norm=385492.0105
norm it n=116 norm=385498.3698
norm it n=117 norm=385504.5782
norm it n=118 norm=385510.643
norm it n=119 norm=385516.5711
norm it n=120 norm=385522.369
norm it n=121 norm=385528.0429
norm it n=122 norm=385533.5984
norm it n=123 norm=385539.0408
norm it n=124 norm=385544.3751
norm it n=125 norm=385549.606
norm it n=126 norm=385554.7379
norm it n=127 norm=385559.7749
norm it n=128 norm=385564.7209
norm it n=129 norm=385569.5794
norm it n=130 norm=385574.3539
norm it n=131 norm=385579.0476
norm it n=132 norm=385583.6635
norm it n=133 norm=385588.2045
norm it n=134 norm=385592.6732
norm it n=135 norm=385597.072
norm it n=136 norm=385601.4035
norm it n=137 norm=385605.6698
norm it n=138 norm=385609.8731
norm it n=139 norm=385614.0153
norm it n=140 norm=385618.0983
norm it n=141 norm=385622.1239
norm it n=142 norm=385626.0938
norm it n=143 norm=385630.0095
norm it n=144 norm=385633.8726
norm it n=145 norm=385637.6845
norm it n=146 norm=385641.4466
norm it n=147 norm=385645.1602
norm it n=148 norm=385648.8263
norm it n=149 norm=385652.4464
norm it n=150 norm=385656.0213
norm it n=151 norm=385659.5522
norm it n=152 norm=385663.0401
norm it n=153 norm=385666.4859
norm it n=154 norm=385669.8905
norm it n=155 norm=385673.2548
norm it n=156 norm=385676.5797
norm it n=157 norm=385679.8658
norm it n=158 norm=385683.1141
norm it n=159 norm=385686.3251
norm it n=160 norm=385689.4995
norm it n=161 norm=385692.6381
norm it n=162 norm=385695.7415
norm it n=163 norm=385698.8103
norm it n=164 norm=385701.8451
norm it n=165 norm=385704.8464
norm it n=166 norm=385707.8147
norm it n=167 norm=385710.7507
norm it n=168 norm=385713.6548
norm it n=169 norm=385716.5274
norm it n=170 norm=385719.3692
norm it n=171 norm=385722.1804
norm it n=172 norm=385724.9616
norm it n=173 norm=385727.7132
norm it n=174 norm=385730.4356
norm it n=175 norm=385733.1291
norm it n=176 norm=385735.7942
norm it n=177 norm=385738.4313
norm it n=178 norm=385741.0407
norm it n=179 norm=385743.6228
norm it n=180 norm=385746.1779
norm it n=181 norm=385748.7063
norm it n=182 norm=385751.2084
norm it n=183 norm=385753.6845
norm it n=184 norm=385756.1349
norm it n=185 norm=385758.5599
norm it n=186 norm=385760.9598
norm it n=187 norm=385763.3349
norm it n=188 norm=385765.6855
norm it n=189 norm=385768.0118
norm it n=190 norm=385770.3142
norm it n=191 norm=385772.5929
norm it n=192 norm=385774.8481
norm it n=193 norm=385777.0801
norm it n=194 norm=385779.2892
norm it n=195 norm=385781.4756
norm it n=196 norm=385783.6396
norm it n=197 norm=385785.7814
norm it n=198 norm=385787.9011
norm it n=199 norm=385789.9992
norm it n=200 norm=385792.0757
 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  WARNING: Change DWT Extension Mode  !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                        
****************************************
**  DWT Extension Mode: Zero Padding  **
****************************************
                                        
                                        
****************************************
**  DWT Extension Mode: Zero Padding  **
****************************************
                                        
norm it n=2 norm=1
norm it n=3 norm=1
-----------------------------------------
HyperSARA - spmd
-----------------------------------------
Starting parallel pool (parpool) using the 'local' profile ...
connected to 3 workers.
                                        
****************************************
**  DWT Extension Mode: Zero Padding  **
****************************************
                                        
xsol NOT uploaded 

Iter = 1, Time = 5.119327e+00
Iter = 2, Time = 4.239472e+00
Iter = 3, Time = 4.100646e+00
Iter = 4, Time = 4.142991e+00
Iter = 5, Time = 4.142563e+00
Iter = 6, Time = 4.033804e+00
Iter = 7, Time = 4.122158e+00
Iter = 8, Time = 3.971514e+00
Iter = 9, Time = 4.047927e+00
Iter = 10, Time = 3.952192e+00
Iter = 11, Time = 3.949397e+00
Iter = 12, Time = 3.938952e+00
Iter = 13, Time = 4.014099e+00
Iter = 14, Time = 3.959023e+00
Iter = 15, Time = 4.029084e+00
Iter = 16, Time = 3.920334e+00
Iter = 17, Time = 3.974536e+00
Iter = 18, Time = 3.894887e+00
Iter = 19, Time = 3.955746e+00
Iter = 20, Time = 3.941879e+00
Iter = 21, Time = 3.949406e+00
Iter = 22, Time = 3.927805e+00
Iter = 23, Time = 4.004481e+00
Iter = 24, Time = 4.018176e+00
Iter = 25, Time = 4.029265e+00
Iter = 26, Time = 3.957616e+00
Iter = 27, Time = 3.998148e+00
Iter = 28, Time = 3.995602e+00
Iter = 29, Time = 3.992583e+00
Iter = 30, Time = 3.964580e+00
Iter = 31, Time = 3.987185e+00
Iter = 32, Time = 3.983465e+00
Iter = 33, Time = 4.064226e+00
Iter = 34, Time = 3.970754e+00
Iter = 35, Time = 3.989845e+00
Iter = 36, Time = 3.983995e+00
Iter = 37, Time = 3.994191e+00
Iter = 38, Time = 3.997378e+00
Iter = 39, Time = 3.974593e+00
Iter = 40, Time = 4.012371e+00
Iter = 41, Time = 3.957370e+00
Iter = 42, Time = 3.998088e+00
Iter = 43, Time = 3.973427e+00
Iter = 44, Time = 3.996038e+00
Iter = 45, Time = 4.013552e+00
Iter = 46, Time = 3.958106e+00
Iter = 47, Time = 4.008445e+00
Iter = 48, Time = 3.989637e+00
Iter = 49, Time = 4.020351e+00
Iter = 50, Time = 3.972364e+00
Iter = 51, Time = 4.006954e+00
Iter = 52, Time = 3.978493e+00
Iter = 53, Time = 3.995030e+00
Iter = 54, Time = 4.096480e+00
Iter = 55, Time = 3.993713e+00
Iter = 56, Time = 4.055335e+00
Iter = 57, Time = 3.996002e+00
Iter = 58, Time = 4.006527e+00
Iter = 59, Time = 4.022670e+00
Iter = 60, Time = 3.980252e+00
Iter = 61, Time = 3.968391e+00
Iter = 62, Time = 3.985451e+00
Iter = 63, Time = 3.969358e+00
Iter = 64, Time = 3.990697e+00
Iter = 65, Time = 3.981166e+00
Iter = 66, Time = 3.957276e+00
Iter = 67, Time = 3.974580e+00
Iter = 68, Time = 4.013951e+00
Iter = 69, Time = 4.045864e+00
Iter = 70, Time = 4.022144e+00
Iter = 71, Time = 4.004953e+00
Iter = 72, Time = 4.074002e+00
Iter = 73, Time = 3.999836e+00
Iter = 74, Time = 3.990854e+00
Iter = 75, Time = 3.992850e+00
Iter = 76, Time = 4.002830e+00
Iter = 77, Time = 3.989214e+00
Iter = 78, Time = 3.972978e+00
Iter = 79, Time = 4.011171e+00
Iter = 80, Time = 3.914314e+00
Iter = 81, Time = 3.939379e+00
Iter = 82, Time = 3.875891e+00
Iter = 83, Time = 3.917471e+00
Iter = 84, Time = 3.947755e+00
Iter = 85, Time = 3.989167e+00
Iter = 86, Time = 3.956302e+00
Iter = 87, Time = 3.967870e+00
Iter = 88, Time = 3.973667e+00
Iter = 89, Time = 3.960750e+00
Iter = 90, Time = 3.915202e+00
Iter = 91, Time = 3.969817e+00
Iter = 92, Time = 3.931647e+00
Iter = 93, Time = 3.980788e+00
Iter = 94, Time = 3.970308e+00
Iter = 95, Time = 3.967133e+00
Iter = 96, Time = 3.963858e+00
Iter = 97, Time = 3.976231e+00
Iter = 98, Time = 3.915473e+00
Iter = 99, Time = 3.976383e+00
Iter = 100, Time = 3.974784e+00
Iter 100
N-norm = 9.758683e+02, L21-norm = 4.531128e+04, rel_fval = 3.690294e-04
 epsilon = 4.107459e+03, residual = 3.651405e+03
 SNR = 2.267817e+01, aSNR = 2.070116e+01

Iter = 101, Time = 3.937029e+00
Iter = 102, Time = 3.870781e+00
Iter = 103, Time = 3.941292e+00
Iter = 104, Time = 3.928551e+00
Iter = 105, Time = 3.969761e+00
Iter = 106, Time = 3.940384e+00
Iter = 107, Time = 3.921372e+00
Iter = 108, Time = 3.950746e+00
Iter = 109, Time = 3.917578e+00
Iter = 110, Time = 3.896187e+00
Iter = 111, Time = 3.956627e+00
Iter = 112, Time = 3.935787e+00
Iter = 113, Time = 3.926377e+00
Iter = 114, Time = 3.967346e+00
Iter = 115, Time = 3.930618e+00
Iter = 116, Time = 3.904373e+00
Iter = 117, Time = 3.946795e+00
Iter = 118, Time = 3.930376e+00
Iter = 119, Time = 3.931657e+00
Iter = 120, Time = 3.918538e+00
Iter = 121, Time = 3.987452e+00
Iter = 122, Time = 3.911290e+00
Iter = 123, Time = 3.953038e+00
Iter = 124, Time = 3.930685e+00
Iter = 125, Time = 3.997579e+00
Iter = 126, Time = 3.992135e+00
Iter = 127, Time = 4.002603e+00
Iter = 128, Time = 3.975720e+00
Iter = 129, Time = 4.116857e+00
Iter = 130, Time = 3.963809e+00
Iter = 131, Time = 4.008697e+00
Iter = 132, Time = 3.963041e+00
Iter = 133, Time = 4.020829e+00
Iter = 134, Time = 3.965518e+00
Iter = 135, Time = 4.013049e+00
Iter = 136, Time = 3.970223e+00
Iter = 137, Time = 3.969757e+00
Iter = 138, Time = 3.932579e+00
Iter = 139, Time = 3.967844e+00
Iter = 140, Time = 3.955748e+00
Iter = 141, Time = 3.990427e+00
Iter = 142, Time = 3.929877e+00
Iter = 143, Time = 3.952492e+00
Iter = 144, Time = 3.928282e+00
Iter = 145, Time = 3.947088e+00
Iter = 146, Time = 3.996166e+00
Iter = 147, Time = 3.984224e+00
Iter = 148, Time = 3.909540e+00
Iter = 149, Time = 3.977828e+00
Iter = 150, Time = 3.918235e+00
Iter = 151, Time = 3.976851e+00
Iter = 152, Time = 3.944443e+00
Iter = 153, Time = 3.998362e+00
Iter = 154, Time = 3.920214e+00
Iter = 155, Time = 3.999279e+00
Iter = 156, Time = 3.926861e+00
Iter = 157, Time = 3.983132e+00
Iter = 158, Time = 3.936347e+00
Iter = 159, Time = 3.951499e+00
Iter = 160, Time = 3.912638e+00
Iter = 161, Time = 3.964629e+00
Iter = 162, Time = 3.943195e+00
Iter = 163, Time = 3.972876e+00
Iter = 164, Time = 3.924849e+00
Iter = 165, Time = 3.971666e+00
Iter = 166, Time = 3.919631e+00
Iter = 167, Time = 3.920338e+00
Iter = 168, Time = 3.924029e+00
Iter = 169, Time = 3.967002e+00
Iter = 170, Time = 3.921831e+00
Iter = 171, Time = 3.980698e+00
Iter = 172, Time = 3.959334e+00
Iter = 173, Time = 3.978168e+00
Iter = 174, Time = 3.944184e+00
Iter = 175, Time = 3.963605e+00
Iter = 176, Time = 3.947937e+00
Iter = 177, Time = 3.968922e+00
Iter = 178, Time = 3.939825e+00
Iter = 179, Time = 3.920519e+00
Iter = 180, Time = 3.903506e+00
Iter = 181, Time = 3.948818e+00
Iter = 182, Time = 3.933212e+00
Iter = 183, Time = 3.974051e+00
Iter = 184, Time = 3.918258e+00
Iter = 185, Time = 3.970925e+00
Iter = 186, Time = 3.943562e+00
Iter = 187, Time = 3.984754e+00
Iter = 188, Time = 3.953622e+00
Iter = 189, Time = 3.994266e+00
Iter = 190, Time = 3.936833e+00
Iter = 191, Time = 3.980115e+00
Iter = 192, Time = 3.952640e+00
Iter = 193, Time = 3.912721e+00
Iter = 194, Time = 3.897488e+00
Iter = 195, Time = 3.950460e+00
Iter = 196, Time = 3.942344e+00
Iter = 197, Time = 3.923016e+00
Iter = 198, Time = 3.918246e+00
Iter = 199, Time = 3.913073e+00
Iter = 200, Time = 3.922197e+00
Iter 200
N-norm = 9.722858e+02, L21-norm = 4.524273e+04, rel_fval = 1.564404e-04
 epsilon = 4.107459e+03, residual = 3.890739e+03
 SNR = 2.166405e+01, aSNR = 1.976565e+01

Iter = 201, Time = 3.949973e+00
Iter = 202, Time = 3.873139e+00
Iter = 203, Time = 3.943035e+00
Iter = 204, Time = 3.926732e+00
Iter = 205, Time = 4.008637e+00
Iter = 206, Time = 3.928250e+00
Iter = 207, Time = 3.990896e+00
Iter = 208, Time = 3.915517e+00
Iter = 209, Time = 4.041630e+00
Iter = 210, Time = 3.949877e+00
Iter = 211, Time = 3.960224e+00
Iter = 212, Time = 3.904528e+00
Iter = 213, Time = 3.941342e+00
Iter = 214, Time = 3.857401e+00
Iter = 215, Time = 3.942882e+00
Iter = 216, Time = 3.961313e+00
Iter = 217, Time = 3.937824e+00
Iter = 218, Time = 3.927337e+00
Iter = 219, Time = 3.949337e+00
Iter = 220, Time = 3.920841e+00
Iter = 221, Time = 3.944096e+00
Iter = 222, Time = 3.904603e+00
Iter = 223, Time = 3.955231e+00
Iter = 224, Time = 3.959987e+00
Iter = 225, Time = 3.951828e+00
Iter = 226, Time = 3.940190e+00
Iter = 227, Time = 3.884576e+00
Iter = 228, Time = 3.945593e+00
Iter = 229, Time = 3.940597e+00
Iter = 230, Time = 3.965098e+00
Iter = 231, Time = 3.979469e+00
Iter = 232, Time = 3.901436e+00
Iter = 233, Time = 3.945509e+00
Iter = 234, Time = 3.916625e+00
Iter = 235, Time = 3.908176e+00
Iter = 236, Time = 3.942229e+00
Iter = 237, Time = 3.898190e+00
Iter = 238, Time = 3.890366e+00
Iter = 239, Time = 3.944883e+00
Iter = 240, Time = 3.921030e+00
Iter = 241, Time = 3.985154e+00
Iter = 242, Time = 3.917309e+00
Iter = 243, Time = 3.914276e+00
Iter = 244, Time = 3.887704e+00
Iter = 245, Time = 3.914899e+00
Iter = 246, Time = 3.910407e+00
Iter = 247, Time = 3.942324e+00
Iter = 248, Time = 3.923538e+00
Iter = 249, Time = 3.929704e+00
Iter = 250, Time = 3.923935e+00
Iter = 251, Time = 3.913402e+00
Iter = 252, Time = 3.950244e+00
Iter = 253, Time = 3.936520e+00
Iter = 254, Time = 3.885232e+00
Iter = 255, Time = 3.934431e+00
Iter = 256, Time = 3.885918e+00
Iter = 257, Time = 3.943529e+00
Iter = 258, Time = 3.921633e+00
Iter = 259, Time = 3.975011e+00
Iter = 260, Time = 3.914154e+00
Iter = 261, Time = 3.976170e+00
Iter = 262, Time = 3.896635e+00
Iter = 263, Time = 3.929554e+00
Iter = 264, Time = 3.897964e+00
Iter = 265, Time = 3.957948e+00
Iter = 266, Time = 3.897832e+00
Iter = 267, Time = 3.934484e+00
Iter = 268, Time = 3.922129e+00
Iter = 269, Time = 3.959394e+00
Iter = 270, Time = 3.920236e+00
Iter = 271, Time = 4.000877e+00
Iter = 272, Time = 3.976163e+00
Iter = 273, Time = 3.987016e+00
Iter = 274, Time = 4.020884e+00
Iter = 275, Time = 4.002326e+00
Iter = 276, Time = 3.989522e+00
Iter = 277, Time = 3.972795e+00
Iter = 278, Time = 4.013435e+00
Iter = 279, Time = 3.966225e+00
Iter = 280, Time = 3.987629e+00
Iter = 281, Time = 3.950295e+00
Iter = 282, Time = 3.953303e+00
Iter = 283, Time = 3.947289e+00
Iter = 284, Time = 3.958265e+00
Iter = 285, Time = 3.922897e+00
Iter = 286, Time = 3.867259e+00
Iter = 287, Time = 3.945007e+00
Iter = 288, Time = 3.863667e+00
Iter = 289, Time = 3.933559e+00
Iter = 290, Time = 3.923161e+00
Iter = 291, Time = 3.956529e+00
Iter = 292, Time = 3.922001e+00
Iter = 293, Time = 3.936108e+00
Iter = 294, Time = 3.905356e+00
Iter = 295, Time = 3.939073e+00
Iter = 296, Time = 3.894116e+00
Iter = 297, Time = 3.932381e+00
Iter = 298, Time = 3.917855e+00
Iter = 299, Time = 3.950305e+00
Iter = 300, Time = 3.945901e+00
Iter 300
N-norm = 9.707015e+02, L21-norm = 4.527707e+04, rel_fval = 1.155281e-04
 epsilon = 4.107459e+03, residual = 4.028461e+03
 SNR = 2.078825e+01, aSNR = 1.900699e+01

Iter = 301, Time = 3.873554e+00
Iter = 302, Time = 3.892147e+00
Iter = 303, Time = 3.951499e+00
Iter = 304, Time = 3.935874e+00
Iter = 305, Time = 4.050329e+00
Iter = 306, Time = 4.055008e+00
Iter = 307, Time = 4.053110e+00
Iter = 308, Time = 3.972942e+00
Iter = 309, Time = 4.018672e+00
Iter = 310, Time = 3.968889e+00
Iter = 311, Time = 3.996306e+00
Iter = 312, Time = 3.966873e+00
Iter = 313, Time = 3.974032e+00
Iter = 314, Time = 3.985865e+00
Iter = 315, Time = 4.014951e+00
Iter = 316, Time = 4.009760e+00
Iter = 317, Time = 4.001433e+00
Iter = 318, Time = 3.964168e+00
Iter = 319, Time = 3.980633e+00
Iter = 320, Time = 3.943073e+00
Iter = 321, Time = 4.007204e+00
Iter = 322, Time = 3.978870e+00
Iter = 323, Time = 3.966048e+00
Iter = 324, Time = 3.969227e+00
Iter = 325, Time = 3.978792e+00
Iter = 326, Time = 3.963347e+00
Iter = 327, Time = 3.984059e+00
Iter = 328, Time = 4.004716e+00
Iter = 329, Time = 4.013957e+00
Iter = 330, Time = 4.000312e+00
Iter = 331, Time = 3.989758e+00
Iter = 332, Time = 3.959698e+00
Iter = 333, Time = 3.997751e+00
Iter = 334, Time = 3.936498e+00
Iter = 335, Time = 3.996384e+00
Iter = 336, Time = 3.965384e+00
Reweighting: 0

Iter = 337, Time = 4.053030e+00
Iter = 338, Time = 4.224443e+00
Iter = 339, Time = 4.194078e+00
Iter = 340, Time = 4.192839e+00
Iter = 341, Time = 4.235690e+00
Iter = 342, Time = 4.219407e+00
Iter = 343, Time = 4.262945e+00
Iter = 344, Time = 4.257515e+00
Iter = 345, Time = 4.219731e+00
Iter = 346, Time = 4.233110e+00
Iter = 347, Time = 4.253207e+00
Iter = 348, Time = 4.250003e+00
Iter = 349, Time = 4.245452e+00
Iter = 350, Time = 4.260688e+00
Iter = 351, Time = 4.239286e+00
Iter = 352, Time = 4.182518e+00
Iter = 353, Time = 4.244965e+00
Iter = 354, Time = 4.239281e+00
Iter = 355, Time = 4.282706e+00
Iter = 356, Time = 4.287833e+00
Iter = 357, Time = 4.334203e+00
Iter = 358, Time = 4.276341e+00
Iter = 359, Time = 4.260448e+00
Iter = 360, Time = 4.270632e+00
Iter = 361, Time = 4.281567e+00
Iter = 362, Time = 4.235446e+00
Iter = 363, Time = 4.349486e+00
Iter = 364, Time = 4.304510e+00
Iter = 365, Time = 4.289785e+00
Iter = 366, Time = 4.262273e+00
Iter = 367, Time = 4.320483e+00
Iter = 368, Time = 4.309571e+00
Iter = 369, Time = 4.290051e+00
Iter = 370, Time = 4.334809e+00
Iter = 371, Time = 4.323153e+00
Iter = 372, Time = 4.319093e+00
Iter = 373, Time = 4.263826e+00
Iter = 374, Time = 4.304872e+00
Iter = 375, Time = 4.209292e+00
Iter = 376, Time = 4.246639e+00
Iter = 377, Time = 4.233439e+00
Iter = 378, Time = 4.218102e+00
Iter = 379, Time = 4.248796e+00
Iter = 380, Time = 4.243404e+00
Iter = 381, Time = 4.364960e+00
Iter = 382, Time = 4.317577e+00
Iter = 383, Time = 4.398925e+00
Iter = 384, Time = 4.307951e+00
Iter = 385, Time = 4.401429e+00
Iter = 386, Time = 4.303300e+00
Iter = 387, Time = 4.414703e+00
Iter = 388, Time = 4.330516e+00
Iter = 389, Time = 4.347703e+00
Iter = 390, Time = 4.323830e+00
Iter = 391, Time = 4.389979e+00
Iter = 392, Time = 4.263430e+00
Iter = 393, Time = 4.240999e+00
Iter = 394, Time = 4.254051e+00
Iter = 395, Time = 4.247012e+00
Iter = 396, Time = 4.241907e+00
Iter = 397, Time = 4.269632e+00
Iter = 398, Time = 4.262362e+00
Iter = 399, Time = 4.268743e+00
Iter = 400, Time = 4.332909e+00
Iter 400
N-norm = 9.729619e+02, L21-norm = 4.544479e+04, rel_fval = 1.006691e-04
 epsilon = 4.107459e+03, residual = 3.961332e+03
 SNR = 2.086917e+01, aSNR = 1.914066e+01

Iter = 401, Time = 4.238260e+00
Iter = 402, Time = 4.253400e+00
Iter = 403, Time = 4.266259e+00
Iter = 404, Time = 4.235143e+00
Iter = 405, Time = 4.284607e+00
Iter = 406, Time = 4.254075e+00
Iter = 407, Time = 4.279734e+00
Iter = 408, Time = 4.223251e+00
Iter = 409, Time = 4.244713e+00
Iter = 410, Time = 4.293214e+00
Iter = 411, Time = 4.217895e+00
Iter = 412, Time = 4.251973e+00
Iter = 413, Time = 4.255302e+00
Iter = 414, Time = 4.240977e+00
Iter = 415, Time = 4.318697e+00
Iter = 416, Time = 4.224931e+00
Iter = 417, Time = 4.236500e+00
Iter = 418, Time = 4.232844e+00
Iter = 419, Time = 4.294843e+00
Iter = 420, Time = 4.310666e+00
Iter = 421, Time = 4.330780e+00
Iter = 422, Time = 4.239858e+00
Iter = 423, Time = 4.262459e+00
Iter = 424, Time = 4.226699e+00
Iter = 425, Time = 4.235850e+00
Iter = 426, Time = 4.234983e+00
Iter = 427, Time = 4.217896e+00
Iter = 428, Time = 4.244472e+00
Iter = 429, Time = 4.245931e+00
Iter = 430, Time = 4.212759e+00
Iter = 431, Time = 4.253247e+00
Iter = 432, Time = 4.210358e+00
Iter = 433, Time = 4.217391e+00
Iter = 434, Time = 4.240254e+00
Iter = 435, Time = 4.231954e+00
Iter = 436, Time = 4.174828e+00
Iter = 437, Time = 4.214940e+00
Iter = 438, Time = 4.177761e+00
Iter = 439, Time = 4.249120e+00
Iter = 440, Time = 4.196440e+00
Iter = 441, Time = 4.232202e+00
Iter = 442, Time = 4.261476e+00
Iter = 443, Time = 4.239261e+00
Iter = 444, Time = 4.262362e+00
Iter = 445, Time = 4.227239e+00
Iter = 446, Time = 4.235801e+00
Iter = 447, Time = 4.271381e+00
Iter = 448, Time = 4.244600e+00
Iter = 449, Time = 4.228717e+00
Iter = 450, Time = 4.211391e+00
Iter = 451, Time = 4.370527e+00
Iter = 452, Time = 4.210242e+00
Iter = 453, Time = 4.139424e+00
Iter = 454, Time = 4.205706e+00
Iter = 455, Time = 4.283205e+00
Iter = 456, Time = 4.265776e+00
Iter = 457, Time = 4.257740e+00
Iter = 458, Time = 4.268769e+00
Iter = 459, Time = 4.283044e+00
Iter = 460, Time = 4.172800e+00
Iter = 461, Time = 4.190910e+00
Iter = 462, Time = 4.153254e+00
Iter = 463, Time = 4.182060e+00
Iter = 464, Time = 4.155385e+00
Iter = 465, Time = 4.180700e+00
Iter = 466, Time = 4.150516e+00
Iter = 467, Time = 4.191856e+00
Iter = 468, Time = 4.159603e+00
Iter = 469, Time = 4.156366e+00
Iter = 470, Time = 4.153079e+00
Iter = 471, Time = 4.159246e+00
Iter = 472, Time = 4.088212e+00
Iter = 473, Time = 4.160201e+00
Iter = 474, Time = 4.138143e+00
Iter = 475, Time = 4.195847e+00
Iter = 476, Time = 4.175589e+00
Iter = 477, Time = 4.120023e+00
Iter = 478, Time = 4.129051e+00
Iter = 479, Time = 4.164280e+00
Iter = 480, Time = 4.106353e+00
Iter = 481, Time = 4.148031e+00
Iter = 482, Time = 4.089331e+00
Iter = 483, Time = 4.110833e+00
Iter = 484, Time = 4.097005e+00
Iter = 485, Time = 4.163074e+00
Iter = 486, Time = 4.184291e+00
Iter = 487, Time = 4.224614e+00
Iter = 488, Time = 4.137746e+00
Iter = 489, Time = 4.229843e+00
Iter = 490, Time = 4.109160e+00
Iter = 491, Time = 4.218796e+00
Iter = 492, Time = 4.134522e+00
Iter = 493, Time = 4.139994e+00
Iter = 494, Time = 4.146604e+00
Iter = 495, Time = 4.190397e+00
Iter = 496, Time = 4.158810e+00
Iter = 497, Time = 4.202720e+00
Iter = 498, Time = 4.170793e+00
Iter = 499, Time = 4.159277e+00
Iter = 500, Time = 4.136580e+00
Iter 500
N-norm = 9.724684e+02, L21-norm = 4.544348e+04, rel_fval = 4.171750e-05
 epsilon = 4.107459e+03, residual = 4.100832e+03
 SNR = 2.085551e+01, aSNR = 1.911851e+01

Iter = 501, Time = 4.244600e+00
Iter = 502, Time = 4.158614e+00
Iter = 503, Time = 4.146191e+00
Iter = 504, Time = 4.143942e+00
Iter = 505, Time = 4.178171e+00
Iter = 506, Time = 4.140583e+00
Iter = 507, Time = 4.199014e+00
Iter = 508, Time = 4.094140e+00
Iter = 509, Time = 4.126074e+00
Iter = 510, Time = 4.113968e+00
Iter = 511, Time = 4.087995e+00
Iter = 512, Time = 4.101139e+00
Iter = 513, Time = 4.084098e+00
Iter = 514, Time = 4.049145e+00
Iter = 515, Time = 4.102238e+00
Iter = 516, Time = 4.142220e+00
Iter = 517, Time = 4.127817e+00
Iter = 518, Time = 4.099466e+00
Iter = 519, Time = 4.064455e+00
Iter = 520, Time = 4.051538e+00
Iter = 521, Time = 4.096283e+00
Iter = 522, Time = 4.106706e+00
Iter = 523, Time = 4.051561e+00
Iter = 524, Time = 4.094312e+00
Iter = 525, Time = 4.096389e+00
Iter = 526, Time = 4.205716e+00
Iter = 527, Time = 4.179748e+00
Iter = 528, Time = 4.102310e+00
Iter = 529, Time = 4.083305e+00
Iter = 530, Time = 4.103210e+00
Iter = 531, Time = 4.080178e+00
Iter = 532, Time = 4.133434e+00
Iter = 533, Time = 4.082628e+00
Iter = 534, Time = 4.079876e+00
Iter = 535, Time = 4.013936e+00
Iter = 536, Time = 3.979173e+00
Iter = 537, Time = 4.116794e+00
Iter = 538, Time = 4.130137e+00
Iter = 539, Time = 4.104254e+00
Iter = 540, Time = 4.163305e+00
Iter = 541, Time = 4.056034e+00
Iter = 542, Time = 4.089668e+00
Iter = 543, Time = 4.056133e+00
Iter = 544, Time = 4.083022e+00
Iter = 545, Time = 4.057243e+00
Iter = 546, Time = 4.083396e+00
Iter = 547, Time = 4.074449e+00
Iter = 548, Time = 4.113046e+00
Iter = 549, Time = 4.081320e+00
Iter = 550, Time = 3.978857e+00
Iter = 551, Time = 4.056650e+00
Iter = 552, Time = 4.195835e+00
Iter = 553, Time = 4.062757e+00
Iter = 554, Time = 4.002977e+00
Iter = 555, Time = 4.016702e+00
Iter = 556, Time = 4.055321e+00
Iter = 557, Time = 4.041454e+00
Iter = 558, Time = 4.117935e+00
Iter = 559, Time = 4.033788e+00
Iter = 560, Time = 4.066720e+00
Iter = 561, Time = 4.016572e+00
Iter = 562, Time = 4.128796e+00
Iter = 563, Time = 4.021963e+00
Iter = 564, Time = 4.103783e+00
Iter = 565, Time = 3.976000e+00
Iter = 566, Time = 4.077952e+00
Iter = 567, Time = 4.061464e+00
Iter = 568, Time = 4.042095e+00
Iter = 569, Time = 4.044556e+00
Iter = 570, Time = 4.109802e+00
Iter = 571, Time = 4.002047e+00
Iter = 572, Time = 4.119107e+00
Iter = 573, Time = 4.091075e+00
Iter = 574, Time = 4.123422e+00
Iter = 575, Time = 4.051265e+00
Iter = 576, Time = 4.103598e+00
Iter = 577, Time = 4.017709e+00
Iter = 578, Time = 4.079992e+00
Iter = 579, Time = 4.059663e+00
Iter = 580, Time = 4.113284e+00
Iter = 581, Time = 4.070244e+00
Iter = 582, Time = 4.154088e+00
Iter = 583, Time = 4.026140e+00
Iter = 584, Time = 4.048243e+00
Iter = 585, Time = 4.000632e+00
Iter = 586, Time = 4.089695e+00
Iter = 587, Time = 4.040058e+00
Iter = 588, Time = 4.121044e+00
Iter = 589, Time = 4.013670e+00
Iter = 590, Time = 4.079304e+00
Iter = 591, Time = 4.060336e+00
Iter = 592, Time = 4.116186e+00
Iter = 593, Time = 4.016315e+00
Iter = 594, Time = 4.203694e+00
Iter = 595, Time = 3.976395e+00
Iter = 596, Time = 4.049258e+00
Iter = 597, Time = 3.978358e+00
Iter = 598, Time = 4.039471e+00
Iter = 599, Time = 4.005386e+00
Iter = 600, Time = 4.032051e+00
Iter 600
N-norm = 9.725652e+02, L21-norm = 4.551071e+04, rel_fval = 3.234680e-05
 epsilon = 4.107459e+03, residual = 4.106867e+03
 SNR = 2.081096e+01, aSNR = 1.908641e+01

Iter = 601, Time = 3.936977e+00
Iter = 602, Time = 4.039615e+00
Iter = 603, Time = 4.081796e+00
Iter = 604, Time = 4.040098e+00
Iter = 605, Time = 4.051635e+00
Iter = 606, Time = 4.025182e+00
Iter = 607, Time = 4.001004e+00
Iter = 608, Time = 4.068298e+00
Iter = 609, Time = 4.098535e+00
Iter = 610, Time = 4.014579e+00
Iter = 611, Time = 4.000918e+00
Iter = 612, Time = 4.024410e+00
Iter = 613, Time = 3.998532e+00
Iter = 614, Time = 4.033058e+00
Iter = 615, Time = 4.015616e+00
Iter = 616, Time = 4.050858e+00
Iter = 617, Time = 4.057039e+00
Iter = 618, Time = 4.047312e+00
Iter = 619, Time = 4.056957e+00
Iter = 620, Time = 4.050832e+00
Iter = 621, Time = 3.958089e+00
Iter = 622, Time = 4.069189e+00
Iter = 623, Time = 4.046609e+00
Iter = 624, Time = 4.058717e+00
Iter = 625, Time = 4.036945e+00
Iter = 626, Time = 4.048410e+00
Iter = 627, Time = 4.007356e+00
Iter = 628, Time = 4.046916e+00
Iter = 629, Time = 4.039607e+00
Iter = 630, Time = 4.000425e+00
Iter = 631, Time = 4.040536e+00
Iter = 632, Time = 3.978576e+00
Iter = 633, Time = 4.068463e+00
Iter = 634, Time = 4.032999e+00
Iter = 635, Time = 3.994153e+00
Iter = 636, Time = 4.071196e+00
Reweighting: 1

Iter = 637, Time = 4.062434e+00
Iter = 638, Time = 4.331166e+00
Iter = 639, Time = 4.261741e+00
Iter = 640, Time = 4.339376e+00
Iter = 641, Time = 4.222931e+00
Iter = 642, Time = 4.284975e+00
Iter = 643, Time = 4.236031e+00
Iter = 644, Time = 4.205236e+00
Iter = 645, Time = 4.207907e+00
Iter = 646, Time = 4.236443e+00
Iter = 647, Time = 4.248208e+00
Iter = 648, Time = 4.163954e+00
Iter = 649, Time = 4.208149e+00
Iter = 650, Time = 4.104544e+00
Iter = 651, Time = 4.159551e+00
Iter = 652, Time = 4.256301e+00
Iter = 653, Time = 4.135929e+00
Iter = 654, Time = 4.176072e+00
Iter = 655, Time = 4.145045e+00
Iter = 656, Time = 4.177461e+00
Iter = 657, Time = 4.141658e+00
Iter = 658, Time = 4.175381e+00
Iter = 659, Time = 4.123029e+00
Iter = 660, Time = 4.179641e+00
Iter = 661, Time = 4.123618e+00
Iter = 662, Time = 4.137397e+00
Iter = 663, Time = 4.113399e+00
Iter = 664, Time = 4.139153e+00
Iter = 665, Time = 4.126260e+00
Iter = 666, Time = 4.151794e+00
Iter = 667, Time = 4.098962e+00
Iter = 668, Time = 4.115480e+00
Iter = 669, Time = 4.160685e+00
Iter = 670, Time = 4.078632e+00
Iter = 671, Time = 4.074620e+00
Iter = 672, Time = 4.075511e+00
Iter = 673, Time = 4.059198e+00
Iter = 674, Time = 4.072475e+00
Iter = 675, Time = 4.067708e+00
Iter = 676, Time = 4.138990e+00
Iter = 677, Time = 4.058202e+00
Iter = 678, Time = 4.117563e+00
Iter = 679, Time = 4.044132e+00
Iter = 680, Time = 4.108315e+00
Iter = 681, Time = 4.026435e+00
Iter = 682, Time = 4.091348e+00
Iter = 683, Time = 4.004013e+00
Iter = 684, Time = 4.068673e+00
Iter = 685, Time = 4.013315e+00
Iter = 686, Time = 4.140027e+00
Iter = 687, Time = 4.017672e+00
Iter = 688, Time = 4.007952e+00
Iter = 689, Time = 4.014778e+00
Iter = 690, Time = 4.040874e+00
Iter = 691, Time = 4.023150e+00
Iter = 692, Time = 4.092867e+00
Iter = 693, Time = 4.040234e+00
Iter = 694, Time = 4.040396e+00
Iter = 695, Time = 4.025752e+00
Iter = 696, Time = 4.033031e+00
Iter = 697, Time = 4.022186e+00
Iter = 698, Time = 4.025841e+00
Iter = 699, Time = 3.991152e+00
Iter = 700, Time = 4.021123e+00
Iter 700
N-norm = 9.727087e+02, L21-norm = 4.557359e+04, rel_fval = 3.140935e-05
 epsilon = 4.107459e+03, residual = 4.105876e+03
 SNR = 2.078140e+01, aSNR = 1.907810e+01

Iter = 701, Time = 4.088367e+00
Iter = 702, Time = 4.063426e+00
Iter = 703, Time = 4.003617e+00
Iter = 704, Time = 4.132510e+00
Iter = 705, Time = 3.955080e+00
Iter = 706, Time = 4.013037e+00
Iter = 707, Time = 3.989522e+00
Iter = 708, Time = 4.023848e+00
Iter = 709, Time = 3.999997e+00
Iter = 710, Time = 4.057010e+00
Iter = 711, Time = 4.122684e+00
Iter = 712, Time = 4.140458e+00
Iter = 713, Time = 4.142700e+00
Iter = 714, Time = 4.124935e+00
Iter = 715, Time = 4.107470e+00
Iter = 716, Time = 4.116793e+00
Iter = 717, Time = 4.088217e+00
Iter = 718, Time = 4.133518e+00
Iter = 719, Time = 4.132823e+00
Iter = 720, Time = 4.188069e+00
Iter = 721, Time = 4.166008e+00
Iter = 722, Time = 4.158719e+00
Iter = 723, Time = 4.087224e+00
Iter = 724, Time = 4.098254e+00
Iter = 725, Time = 4.066017e+00
Iter = 726, Time = 4.053689e+00
Iter = 727, Time = 4.040506e+00
Iter = 728, Time = 4.082272e+00
Iter = 729, Time = 4.066140e+00
Iter = 730, Time = 4.088910e+00
Iter = 731, Time = 4.047551e+00
Iter = 732, Time = 4.175269e+00
Iter = 733, Time = 3.965581e+00
Iter = 734, Time = 4.085140e+00
Iter = 735, Time = 4.018777e+00
Iter = 736, Time = 4.118337e+00
Iter = 737, Time = 4.084303e+00
Iter = 738, Time = 4.204062e+00
Iter = 739, Time = 4.112215e+00
Iter = 740, Time = 4.180253e+00
Iter = 741, Time = 4.136876e+00
Iter = 742, Time = 4.127896e+00
Iter = 743, Time = 4.083171e+00
Iter = 744, Time = 4.106763e+00
Iter = 745, Time = 4.050982e+00
Iter = 746, Time = 4.098201e+00
Iter = 747, Time = 4.065993e+00
Iter = 748, Time = 4.078935e+00
Iter = 749, Time = 4.119893e+00
Iter = 750, Time = 4.162427e+00
Iter = 751, Time = 4.138927e+00
Iter = 752, Time = 4.138214e+00
Iter = 753, Time = 4.114538e+00
Iter = 754, Time = 4.135026e+00
Iter = 755, Time = 4.105379e+00
Iter = 756, Time = 4.131409e+00
Iter = 757, Time = 4.094937e+00
Iter = 758, Time = 4.170801e+00
Iter = 759, Time = 4.084083e+00
Iter = 760, Time = 4.116496e+00
Iter = 761, Time = 4.085792e+00
Iter = 762, Time = 4.095889e+00
Iter = 763, Time = 4.124617e+00
Iter = 764, Time = 4.107337e+00
Iter = 765, Time = 4.129894e+00
Iter = 766, Time = 4.141239e+00
Iter = 767, Time = 4.141611e+00
Iter = 768, Time = 4.269794e+00
Iter = 769, Time = 4.210476e+00
Iter = 770, Time = 4.123679e+00
Iter = 771, Time = 4.075418e+00
Iter = 772, Time = 4.181424e+00
Iter = 773, Time = 4.072194e+00
Iter = 774, Time = 4.152241e+00
Iter = 775, Time = 4.102373e+00
Iter = 776, Time = 4.164011e+00
Iter = 777, Time = 4.117306e+00
Iter = 778, Time = 4.130040e+00
Iter = 779, Time = 4.179127e+00
Iter = 780, Time = 4.168399e+00
Iter = 781, Time = 4.146682e+00
Iter = 782, Time = 4.126440e+00
Iter = 783, Time = 4.124929e+00
Iter = 784, Time = 4.118858e+00
Iter = 785, Time = 4.104569e+00
Iter = 786, Time = 4.113390e+00
Iter = 787, Time = 4.081468e+00
Iter = 788, Time = 4.141221e+00
Iter = 789, Time = 4.097151e+00
Iter = 790, Time = 4.135008e+00
Iter = 791, Time = 4.109202e+00
Iter = 792, Time = 4.139521e+00
Iter = 793, Time = 4.086421e+00
Iter = 794, Time = 4.291162e+00
Iter = 795, Time = 4.145929e+00
Iter = 796, Time = 4.191921e+00
Iter = 797, Time = 4.219792e+00
Iter = 798, Time = 4.223826e+00
Iter = 799, Time = 4.153910e+00
Iter = 800, Time = 4.279684e+00
Iter 800
N-norm = 9.728424e+02, L21-norm = 4.561803e+04, rel_fval = 3.167029e-05
 epsilon = 4.107459e+03, residual = 4.107280e+03
 SNR = 2.074395e+01, aSNR = 1.905150e+01

Iter = 801, Time = 4.114959e+00
Iter = 802, Time = 4.215522e+00
Iter = 803, Time = 4.165720e+00
Iter = 804, Time = 4.233628e+00
Iter = 805, Time = 4.183381e+00
Iter = 806, Time = 4.194036e+00
Iter = 807, Time = 4.170109e+00
Iter = 808, Time = 4.203385e+00
Iter = 809, Time = 4.172782e+00
Iter = 810, Time = 4.146583e+00
Iter = 811, Time = 4.186867e+00
Iter = 812, Time = 4.146702e+00
Iter = 813, Time = 4.156661e+00
Iter = 814, Time = 4.191095e+00
Iter = 815, Time = 4.182254e+00
Iter = 816, Time = 4.154570e+00
Iter = 817, Time = 4.161014e+00
Iter = 818, Time = 4.205869e+00
Iter = 819, Time = 4.146280e+00
Iter = 820, Time = 4.158561e+00
Iter = 821, Time = 4.138622e+00
Iter = 822, Time = 4.154631e+00
Iter = 823, Time = 4.130794e+00
Iter = 824, Time = 4.191107e+00
Iter = 825, Time = 4.160918e+00
Iter = 826, Time = 4.207530e+00
Iter = 827, Time = 4.170704e+00
Iter = 828, Time = 4.203464e+00
Iter = 829, Time = 4.194188e+00
Iter = 830, Time = 4.217419e+00
Iter = 831, Time = 4.177529e+00
Iter = 832, Time = 4.206564e+00
Iter = 833, Time = 4.192517e+00
Iter = 834, Time = 4.222445e+00
Iter = 835, Time = 4.176810e+00
Iter = 836, Time = 4.191478e+00
Iter = 837, Time = 4.191970e+00
Iter = 838, Time = 4.197130e+00
Iter = 839, Time = 4.168330e+00
Iter = 840, Time = 4.133036e+00
Iter = 841, Time = 4.121306e+00
Iter = 842, Time = 4.157987e+00
Iter = 843, Time = 4.119258e+00
Iter = 844, Time = 4.107971e+00
Iter = 845, Time = 4.086805e+00
Iter = 846, Time = 4.150303e+00
Iter = 847, Time = 4.138362e+00
Iter = 848, Time = 4.097467e+00
Iter = 849, Time = 4.074982e+00
Iter = 850, Time = 4.210515e+00
Iter = 851, Time = 4.179453e+00
Iter = 852, Time = 4.161405e+00
Iter = 853, Time = 4.131264e+00
Iter = 854, Time = 4.158560e+00
Iter = 855, Time = 4.162483e+00
Iter = 856, Time = 4.141013e+00
Iter = 857, Time = 4.114419e+00
Iter = 858, Time = 4.154478e+00
Iter = 859, Time = 4.097214e+00
Iter = 860, Time = 4.172989e+00
Iter = 861, Time = 4.170990e+00
Iter = 862, Time = 4.165130e+00
Iter = 863, Time = 4.187732e+00
Iter = 864, Time = 4.200141e+00
Iter = 865, Time = 4.144420e+00
Iter = 866, Time = 4.171713e+00
Iter = 867, Time = 4.118126e+00
Iter = 868, Time = 4.202265e+00
Iter = 869, Time = 4.147173e+00
Iter = 870, Time = 4.191656e+00
Iter = 871, Time = 4.133103e+00
Iter = 872, Time = 4.166892e+00
Iter = 873, Time = 4.133267e+00
Iter = 874, Time = 4.139660e+00
Iter = 875, Time = 4.173942e+00
Iter = 876, Time = 4.186234e+00
Iter = 877, Time = 4.145121e+00
Iter = 878, Time = 4.219249e+00
Iter = 879, Time = 4.092105e+00
Iter = 880, Time = 4.157102e+00
Iter = 881, Time = 4.150711e+00
Iter = 882, Time = 4.180925e+00
Iter = 883, Time = 4.135360e+00
Iter = 884, Time = 4.146755e+00
Iter = 885, Time = 4.180438e+00
Iter = 886, Time = 4.154867e+00
Iter = 887, Time = 4.132492e+00
Iter = 888, Time = 4.178415e+00
Iter = 889, Time = 4.158710e+00
Iter = 890, Time = 4.170518e+00
Iter = 891, Time = 4.178974e+00
Iter = 892, Time = 4.130278e+00
Iter = 893, Time = 4.068988e+00
Iter = 894, Time = 4.099217e+00
Iter = 895, Time = 4.150794e+00
Iter = 896, Time = 4.203031e+00
Iter = 897, Time = 4.168090e+00
Iter = 898, Time = 4.202643e+00
Iter = 899, Time = 4.150274e+00
Iter = 900, Time = 4.168399e+00
Iter 900
N-norm = 9.729845e+02, L21-norm = 4.565780e+04, rel_fval = 3.008044e-05
 epsilon = 4.107459e+03, residual = 4.107551e+03
 SNR = 2.070008e+01, aSNR = 1.901815e+01

Iter = 901, Time = 4.114256e+00
Iter = 902, Time = 4.159230e+00
Iter = 903, Time = 4.136431e+00
Iter = 904, Time = 4.152565e+00
Iter = 905, Time = 4.162859e+00
Iter = 906, Time = 4.190571e+00
Iter = 907, Time = 4.146030e+00
Iter = 908, Time = 4.166456e+00
Iter = 909, Time = 4.155726e+00
Iter = 910, Time = 4.178657e+00
Iter = 911, Time = 4.136667e+00
Iter = 912, Time = 4.192934e+00
Iter = 913, Time = 4.145624e+00
Iter = 914, Time = 4.176200e+00
Iter = 915, Time = 4.186530e+00
Iter = 916, Time = 4.143784e+00
Iter = 917, Time = 4.145426e+00
Iter = 918, Time = 4.174236e+00
Iter = 919, Time = 4.139584e+00
Iter = 920, Time = 4.239485e+00
Iter = 921, Time = 4.163477e+00
Iter = 922, Time = 4.174104e+00
Iter = 923, Time = 4.159868e+00
Iter = 924, Time = 4.188542e+00
Iter = 925, Time = 4.186452e+00
Iter = 926, Time = 4.213656e+00
Iter = 927, Time = 4.038854e+00
Iter = 928, Time = 4.086100e+00
Iter = 929, Time = 4.060001e+00
Iter = 930, Time = 4.103001e+00
Iter = 931, Time = 4.079245e+00
Iter = 932, Time = 4.059339e+00
Iter = 933, Time = 4.039917e+00
Iter = 934, Time = 4.067572e+00
Iter = 935, Time = 3.998615e+00
Iter = 936, Time = 4.078997e+00
Reweighting: 2

Iter = 937, Time = 4.171404e+00
Iter = 938, Time = 4.197299e+00
Iter = 939, Time = 4.213300e+00
Iter = 940, Time = 4.223786e+00
Iter = 941, Time = 4.195338e+00
Iter = 942, Time = 4.188545e+00
Iter = 943, Time = 4.141767e+00
Iter = 944, Time = 4.157106e+00
Iter = 945, Time = 4.086408e+00
Iter = 946, Time = 4.147086e+00
Iter = 947, Time = 4.110554e+00
Iter = 948, Time = 4.137390e+00
Iter = 949, Time = 4.106976e+00
Iter = 950, Time = 4.137037e+00
Iter = 951, Time = 4.240669e+00
Iter = 952, Time = 4.228337e+00
Iter = 953, Time = 4.212671e+00
Iter = 954, Time = 4.230070e+00
Iter = 955, Time = 4.203170e+00
Iter = 956, Time = 4.288418e+00
Iter = 957, Time = 4.177550e+00
Iter = 958, Time = 4.208229e+00
Iter = 959, Time = 4.175639e+00
Iter = 960, Time = 4.200351e+00
Iter = 961, Time = 4.141748e+00
Iter = 962, Time = 4.128907e+00
Iter = 963, Time = 4.064101e+00
Iter = 964, Time = 4.113939e+00
Iter = 965, Time = 4.114987e+00
Iter = 966, Time = 4.122145e+00
Iter = 967, Time = 4.093562e+00
Iter = 968, Time = 4.098198e+00
Iter = 969, Time = 4.100093e+00
Iter = 970, Time = 4.091702e+00
Iter = 971, Time = 4.122961e+00
Iter = 972, Time = 4.120031e+00
Iter = 973, Time = 4.212803e+00
Iter = 974, Time = 4.234794e+00
Iter = 975, Time = 4.183587e+00
Iter = 976, Time = 4.209585e+00
Iter = 977, Time = 4.181026e+00
Iter = 978, Time = 4.208156e+00
Iter = 979, Time = 4.173394e+00
Iter = 980, Time = 4.212374e+00
Iter = 981, Time = 4.183482e+00
Iter = 982, Time = 4.195412e+00
Iter = 983, Time = 4.111858e+00
Iter = 984, Time = 4.190122e+00
Iter = 985, Time = 4.118032e+00
Iter = 986, Time = 4.197347e+00
Iter = 987, Time = 4.138923e+00
Iter = 988, Time = 4.169018e+00
Iter = 989, Time = 4.097780e+00
Iter = 990, Time = 4.188581e+00
Iter = 991, Time = 4.125053e+00
Iter = 992, Time = 4.160651e+00
Iter = 993, Time = 4.130318e+00
Iter = 994, Time = 4.187355e+00
Iter = 995, Time = 4.100846e+00
Iter = 996, Time = 4.146980e+00
Iter = 997, Time = 4.245706e+00
Iter = 998, Time = 4.178210e+00
Iter = 999, Time = 4.167062e+00
Iter = 1000, Time = 4.176576e+00
Iter 1000
N-norm = 9.731685e+02, L21-norm = 4.570357e+04, rel_fval = 3.154457e-05
 epsilon = 4.107459e+03, residual = 4.106097e+03
 SNR = 2.066212e+01, aSNR = 1.899565e+01

Iter = 1001, Time = 4.165679e+00
Iter = 1002, Time = 4.125759e+00
Iter = 1003, Time = 4.137502e+00
Iter = 1004, Time = 4.468731e+00
Iter = 1005, Time = 4.094722e+00
Iter = 1006, Time = 4.119148e+00
Iter = 1007, Time = 4.060284e+00
Iter = 1008, Time = 4.104099e+00
Iter = 1009, Time = 4.165825e+00
Iter = 1010, Time = 4.195994e+00
Iter = 1011, Time = 4.175605e+00
Iter = 1012, Time = 4.195656e+00
Iter = 1013, Time = 4.173748e+00
Iter = 1014, Time = 4.206378e+00
Iter = 1015, Time = 4.158786e+00
Iter = 1016, Time = 4.204042e+00
Iter = 1017, Time = 4.184452e+00
Iter = 1018, Time = 4.226635e+00
Iter = 1019, Time = 4.159294e+00
Iter = 1020, Time = 4.212845e+00
Iter = 1021, Time = 4.191398e+00
Iter = 1022, Time = 4.198285e+00
Iter = 1023, Time = 4.182017e+00
Iter = 1024, Time = 4.191469e+00
Iter = 1025, Time = 4.176883e+00
Iter = 1026, Time = 4.210421e+00
Iter = 1027, Time = 4.129224e+00
Iter = 1028, Time = 4.167522e+00
Iter = 1029, Time = 4.146413e+00
Iter = 1030, Time = 4.202652e+00
Iter = 1031, Time = 4.168291e+00
Iter = 1032, Time = 4.190983e+00
Iter = 1033, Time = 4.169834e+00
Iter = 1034, Time = 4.176176e+00
Iter = 1035, Time = 4.170949e+00
Iter = 1036, Time = 4.189447e+00
Iter = 1037, Time = 4.146648e+00
Iter = 1038, Time = 4.170435e+00
Iter = 1039, Time = 4.176398e+00
Iter = 1040, Time = 4.178199e+00
Iter = 1041, Time = 4.237519e+00
Iter = 1042, Time = 4.172989e+00
Iter = 1043, Time = 4.162775e+00
Iter = 1044, Time = 4.186574e+00
Iter = 1045, Time = 4.139961e+00
Iter = 1046, Time = 4.202894e+00
Iter = 1047, Time = 4.210022e+00
Iter = 1048, Time = 4.136511e+00
Iter = 1049, Time = 4.087673e+00
Iter = 1050, Time = 4.131146e+00
Iter = 1051, Time = 4.102355e+00
Iter = 1052, Time = 4.196575e+00
Iter = 1053, Time = 4.074431e+00
Iter = 1054, Time = 4.144094e+00
Iter = 1055, Time = 4.125945e+00
Iter = 1056, Time = 4.134102e+00
Iter = 1057, Time = 4.109807e+00
Iter = 1058, Time = 4.117512e+00
Iter = 1059, Time = 4.090742e+00
Iter = 1060, Time = 4.113400e+00
Iter = 1061, Time = 4.087733e+00
Iter = 1062, Time = 4.147345e+00
Iter = 1063, Time = 4.120393e+00
Iter = 1064, Time = 4.119046e+00
Iter = 1065, Time = 4.208234e+00
Iter = 1066, Time = 4.230904e+00
Iter = 1067, Time = 4.150257e+00
Iter = 1068, Time = 4.163774e+00
Iter = 1069, Time = 4.121508e+00
Iter = 1070, Time = 4.220452e+00
Iter = 1071, Time = 4.206165e+00
Iter = 1072, Time = 4.216514e+00
Iter = 1073, Time = 4.193961e+00
Iter = 1074, Time = 4.208099e+00
Iter = 1075, Time = 4.185894e+00
Iter = 1076, Time = 4.227944e+00
Iter = 1077, Time = 4.258447e+00
Iter = 1078, Time = 4.224557e+00
Iter = 1079, Time = 4.187550e+00
Iter = 1080, Time = 4.201433e+00
Iter = 1081, Time = 4.262530e+00
Iter = 1082, Time = 4.241618e+00
Iter = 1083, Time = 4.192872e+00
Iter = 1084, Time = 4.222029e+00
Iter = 1085, Time = 4.199233e+00
Iter = 1086, Time = 4.224897e+00
Iter = 1087, Time = 4.166025e+00
Iter = 1088, Time = 4.239361e+00
Iter = 1089, Time = 4.149368e+00
Iter = 1090, Time = 4.236782e+00
Iter = 1091, Time = 4.193610e+00
Iter = 1092, Time = 4.227446e+00
Iter = 1093, Time = 4.180726e+00
Iter = 1094, Time = 4.234170e+00
Iter = 1095, Time = 4.186670e+00
Iter = 1096, Time = 4.229260e+00
Iter = 1097, Time = 4.233612e+00
Iter = 1098, Time = 4.235679e+00
Iter = 1099, Time = 4.203449e+00
Iter = 1100, Time = 4.186034e+00
Iter 1100
N-norm = 9.732935e+02, L21-norm = 4.573587e+04, rel_fval = 3.065716e-05
 epsilon = 4.107459e+03, residual = 4.107370e+03
 SNR = 2.061996e+01, aSNR = 1.896256e+01

Iter = 1101, Time = 4.118157e+00
Iter = 1102, Time = 4.161074e+00
Iter = 1103, Time = 4.137154e+00
Iter = 1104, Time = 4.174979e+00
Iter = 1105, Time = 4.135369e+00
Iter = 1106, Time = 4.208749e+00
Iter = 1107, Time = 4.134479e+00
Iter = 1108, Time = 4.228752e+00
Iter = 1109, Time = 4.155628e+00
Iter = 1110, Time = 4.207889e+00
Iter = 1111, Time = 4.124738e+00
Iter = 1112, Time = 4.245215e+00
Iter = 1113, Time = 4.142923e+00
Iter = 1114, Time = 4.218958e+00
Iter = 1115, Time = 4.161391e+00
Iter = 1116, Time = 4.214915e+00
Iter = 1117, Time = 4.185062e+00
Iter = 1118, Time = 4.205396e+00
Iter = 1119, Time = 4.149929e+00
Iter = 1120, Time = 4.220082e+00
Iter = 1121, Time = 4.130846e+00
Iter = 1122, Time = 4.213772e+00
Iter = 1123, Time = 4.164133e+00
Iter = 1124, Time = 4.228980e+00
Iter = 1125, Time = 4.138956e+00
Iter = 1126, Time = 4.225505e+00
Iter = 1127, Time = 4.155939e+00
Iter = 1128, Time = 4.239850e+00
Iter = 1129, Time = 4.161523e+00
Iter = 1130, Time = 4.228893e+00
Iter = 1131, Time = 4.181435e+00
Iter = 1132, Time = 4.263608e+00
Iter = 1133, Time = 4.175182e+00
Iter = 1134, Time = 4.247586e+00
Iter = 1135, Time = 4.125154e+00
Iter = 1136, Time = 4.164520e+00
Iter = 1137, Time = 4.129031e+00
Iter = 1138, Time = 4.190783e+00
Iter = 1139, Time = 4.145081e+00
Iter = 1140, Time = 4.191843e+00
Iter = 1141, Time = 4.131673e+00
Iter = 1142, Time = 4.201022e+00
Iter = 1143, Time = 4.207395e+00
Iter = 1144, Time = 4.279930e+00
Iter = 1145, Time = 4.183755e+00
Iter = 1146, Time = 4.267077e+00
Iter = 1147, Time = 4.205474e+00
Iter = 1148, Time = 4.296373e+00
Iter = 1149, Time = 4.214944e+00
Iter = 1150, Time = 4.254702e+00
Iter = 1151, Time = 4.193415e+00
Iter = 1152, Time = 4.271753e+00
Iter = 1153, Time = 4.190848e+00
Iter = 1154, Time = 4.210195e+00
Iter = 1155, Time = 4.146626e+00
Iter = 1156, Time = 4.227808e+00
Iter = 1157, Time = 4.177020e+00
Iter = 1158, Time = 4.220992e+00
Iter = 1159, Time = 4.160554e+00
Iter = 1160, Time = 4.244312e+00
Iter = 1161, Time = 4.166542e+00
Iter = 1162, Time = 4.184634e+00
Iter = 1163, Time = 4.159317e+00
Iter = 1164, Time = 4.192507e+00
Iter = 1165, Time = 4.146065e+00
Iter = 1166, Time = 4.195805e+00
Iter = 1167, Time = 4.179484e+00
Iter = 1168, Time = 4.271272e+00
Iter = 1169, Time = 4.167543e+00
Iter = 1170, Time = 4.215187e+00
Iter = 1171, Time = 4.129182e+00
Iter = 1172, Time = 4.220235e+00
Iter = 1173, Time = 4.199386e+00
Iter = 1174, Time = 4.247203e+00
Iter = 1175, Time = 4.158180e+00
Iter = 1176, Time = 4.242509e+00
Iter = 1177, Time = 4.171885e+00
Iter = 1178, Time = 4.187242e+00
Iter = 1179, Time = 4.173590e+00
Iter = 1180, Time = 4.204953e+00
Iter = 1181, Time = 4.173222e+00
Iter = 1182, Time = 4.236225e+00
Iter = 1183, Time = 4.161084e+00
Iter = 1184, Time = 4.221846e+00
Iter = 1185, Time = 4.163503e+00
Iter = 1186, Time = 4.252470e+00
Iter = 1187, Time = 4.170080e+00
Iter = 1188, Time = 4.232331e+00
Iter = 1189, Time = 4.152101e+00
Iter = 1190, Time = 4.239398e+00
Iter = 1191, Time = 4.165935e+00
Iter = 1192, Time = 4.237901e+00
Iter = 1193, Time = 4.175945e+00
Iter = 1194, Time = 4.232172e+00
Iter = 1195, Time = 4.141762e+00
Iter = 1196, Time = 4.182291e+00
Iter = 1197, Time = 4.147003e+00
Iter = 1198, Time = 4.223685e+00
Iter = 1199, Time = 4.202804e+00
Iter = 1200, Time = 4.284334e+00
Iter 1200
N-norm = 9.734343e+02, L21-norm = 4.577009e+04, rel_fval = 3.307669e-05
 epsilon = 4.107459e+03, residual = 4.107496e+03
 SNR = 2.057446e+01, aSNR = 1.892607e+01

Iter = 1201, Time = 4.157879e+00
Iter = 1202, Time = 4.272503e+00
Iter = 1203, Time = 4.127257e+00
Iter = 1204, Time = 4.152240e+00
Iter = 1205, Time = 4.115540e+00
Iter = 1206, Time = 4.171251e+00
Iter = 1207, Time = 4.126617e+00
Iter = 1208, Time = 4.202365e+00
Iter = 1209, Time = 4.112976e+00
Iter = 1210, Time = 4.171202e+00
Iter = 1211, Time = 4.229110e+00
Iter = 1212, Time = 4.255594e+00
Iter = 1213, Time = 4.187316e+00
Iter = 1214, Time = 4.227408e+00
Iter = 1215, Time = 4.180963e+00
Iter = 1216, Time = 4.226836e+00
Iter = 1217, Time = 4.188637e+00
Iter = 1218, Time = 4.201440e+00
Iter = 1219, Time = 4.205213e+00
Iter = 1220, Time = 4.253761e+00
Iter = 1221, Time = 4.192522e+00
Iter = 1222, Time = 4.215998e+00
Iter = 1223, Time = 4.177854e+00
Iter = 1224, Time = 4.157105e+00
Iter = 1225, Time = 4.151483e+00
Iter = 1226, Time = 4.196746e+00
Iter = 1227, Time = 4.159686e+00
Iter = 1228, Time = 4.178433e+00
Iter = 1229, Time = 4.141628e+00
Iter = 1230, Time = 4.208705e+00
Iter = 1231, Time = 4.146187e+00
Iter = 1232, Time = 4.202405e+00
Iter = 1233, Time = 4.152902e+00
Iter = 1234, Time = 4.201660e+00
Iter = 1235, Time = 4.162256e+00
Iter = 1236, Time = 4.127630e+00
Reweighting: 3

Iter = 1237, Time = 4.204387e+00
Iter = 1238, Time = 4.242983e+00
Iter = 1239, Time = 4.471906e+00
Iter = 1240, Time = 5.036383e+00
Iter = 1241, Time = 4.228871e+00
Iter = 1242, Time = 4.217731e+00
Iter = 1243, Time = 4.247030e+00
Iter = 1244, Time = 4.194826e+00
Iter = 1245, Time = 4.220815e+00
Iter = 1246, Time = 4.175067e+00
Iter = 1247, Time = 4.202593e+00
Iter = 1248, Time = 4.191751e+00
Iter = 1249, Time = 4.219368e+00
Iter = 1250, Time = 4.214125e+00
Iter = 1251, Time = 4.239082e+00
Iter = 1252, Time = 4.192642e+00
Iter = 1253, Time = 4.264149e+00
Iter = 1254, Time = 4.217278e+00
Iter = 1255, Time = 4.275840e+00
Iter = 1256, Time = 4.215663e+00
Iter = 1257, Time = 4.251032e+00
Iter = 1258, Time = 4.219714e+00
Iter = 1259, Time = 4.234619e+00
Iter = 1260, Time = 4.197579e+00
Iter = 1261, Time = 4.216633e+00
Iter = 1262, Time = 4.238859e+00
Iter = 1263, Time = 4.210599e+00
Iter = 1264, Time = 4.207523e+00
Iter = 1265, Time = 4.204449e+00
Iter = 1266, Time = 4.203088e+00
Iter = 1267, Time = 4.241835e+00
Iter = 1268, Time = 4.193736e+00
Iter = 1269, Time = 4.188882e+00
Iter = 1270, Time = 4.198826e+00
Iter = 1271, Time = 4.206546e+00
Iter = 1272, Time = 4.212957e+00
Iter = 1273, Time = 4.233816e+00
Iter = 1274, Time = 4.240614e+00
Iter = 1275, Time = 4.199631e+00
Iter = 1276, Time = 4.217850e+00
Iter = 1277, Time = 4.207502e+00
Iter = 1278, Time = 4.185953e+00
Iter = 1279, Time = 4.197990e+00
Iter = 1280, Time = 4.180813e+00
Iter = 1281, Time = 4.183063e+00
Iter = 1282, Time = 4.253718e+00
Iter = 1283, Time = 4.255238e+00
Iter = 1284, Time = 4.194692e+00
Iter = 1285, Time = 4.203609e+00
Iter = 1286, Time = 4.192081e+00
Iter = 1287, Time = 4.208938e+00
Iter = 1288, Time = 4.293860e+00
Iter = 1289, Time = 4.209113e+00
Iter = 1290, Time = 4.182011e+00
Iter = 1291, Time = 4.204271e+00
Iter = 1292, Time = 4.177569e+00
Iter = 1293, Time = 4.214854e+00
Iter = 1294, Time = 4.180206e+00
Iter = 1295, Time = 4.185807e+00
Iter = 1296, Time = 4.188863e+00
Iter = 1297, Time = 4.215364e+00
Iter = 1298, Time = 4.191670e+00
Iter = 1299, Time = 4.221042e+00
Iter = 1300, Time = 4.216012e+00
Iter 1300
N-norm = 9.736351e+02, L21-norm = 4.580429e+04, rel_fval = 4.388382e-05
 epsilon = 4.107459e+03, residual = 4.106378e+03
 SNR = 2.053895e+01, aSNR = 1.890495e+01

Iter = 1301, Time = 4.092204e+00
Iter = 1302, Time = 4.046208e+00
Iter = 1303, Time = 4.108748e+00
Iter = 1304, Time = 4.087880e+00
Iter = 1305, Time = 4.074320e+00
Iter = 1306, Time = 4.198121e+00
Iter = 1307, Time = 4.143511e+00
Iter = 1308, Time = 4.140368e+00
Iter = 1309, Time = 4.121307e+00
Iter = 1310, Time = 4.166138e+00
Iter = 1311, Time = 4.196196e+00
Iter = 1312, Time = 4.169428e+00
Iter = 1313, Time = 4.198897e+00
Iter = 1314, Time = 4.165490e+00
Iter = 1315, Time = 4.177087e+00
Iter = 1316, Time = 4.203494e+00
Iter = 1317, Time = 4.194589e+00
Iter = 1318, Time = 4.167282e+00
Iter = 1319, Time = 4.192311e+00
Iter = 1320, Time = 4.175071e+00
Iter = 1321, Time = 4.210504e+00
Iter = 1322, Time = 4.271330e+00
Iter = 1323, Time = 4.199161e+00
Iter = 1324, Time = 4.184987e+00
Iter = 1325, Time = 4.221930e+00
Iter = 1326, Time = 4.199845e+00
Iter = 1327, Time = 4.291121e+00
Iter = 1328, Time = 4.195407e+00
Iter = 1329, Time = 4.206052e+00
Iter = 1330, Time = 4.162397e+00
Iter = 1331, Time = 4.168281e+00
Iter = 1332, Time = 4.169215e+00
Iter = 1333, Time = 4.219344e+00
Iter = 1334, Time = 4.103204e+00
Iter = 1335, Time = 4.088280e+00
Iter = 1336, Time = 4.109077e+00
Iter = 1337, Time = 4.095924e+00
Iter = 1338, Time = 4.177314e+00
Iter = 1339, Time = 4.182223e+00
Iter = 1340, Time = 4.105602e+00
Iter = 1341, Time = 4.107836e+00
Iter = 1342, Time = 4.091381e+00
Iter = 1343, Time = 4.098946e+00
Iter = 1344, Time = 4.092136e+00
Iter = 1345, Time = 4.109805e+00
Iter = 1346, Time = 4.109759e+00
Iter = 1347, Time = 4.122251e+00
Iter = 1348, Time = 4.139267e+00
Iter = 1349, Time = 4.131984e+00
Iter = 1350, Time = 4.108551e+00
Iter = 1351, Time = 4.115674e+00
Iter = 1352, Time = 4.127166e+00
Iter = 1353, Time = 4.103730e+00
Iter = 1354, Time = 4.211822e+00
Iter = 1355, Time = 4.217595e+00
Iter = 1356, Time = 4.211473e+00
Iter = 1357, Time = 4.189376e+00
Iter = 1358, Time = 4.215360e+00
Iter = 1359, Time = 4.215699e+00
Iter = 1360, Time = 4.199065e+00
Iter = 1361, Time = 4.178587e+00
Iter = 1362, Time = 4.192472e+00
Iter = 1363, Time = 4.216203e+00
Iter = 1364, Time = 4.224417e+00
Iter = 1365, Time = 4.208045e+00
Iter = 1366, Time = 4.191233e+00
Iter = 1367, Time = 4.216751e+00
Iter = 1368, Time = 4.213930e+00
Iter = 1369, Time = 4.240464e+00
Iter = 1370, Time = 4.189912e+00
Iter = 1371, Time = 4.184542e+00
Iter = 1372, Time = 4.197928e+00
Iter = 1373, Time = 4.212220e+00
Iter = 1374, Time = 4.184705e+00
Iter = 1375, Time = 4.181098e+00
Iter = 1376, Time = 4.203260e+00
Iter = 1377, Time = 4.200887e+00
Iter = 1378, Time = 4.229996e+00
Iter = 1379, Time = 4.210988e+00
Iter = 1380, Time = 4.211526e+00
Iter = 1381, Time = 4.215606e+00
Iter = 1382, Time = 4.174088e+00
Iter = 1383, Time = 4.219306e+00
Iter = 1384, Time = 4.183724e+00
Iter = 1385, Time = 4.227041e+00
Iter = 1386, Time = 4.216166e+00
Iter = 1387, Time = 4.219338e+00
Iter = 1388, Time = 4.215658e+00
Iter = 1389, Time = 4.212774e+00
Iter = 1390, Time = 4.213496e+00
Iter = 1391, Time = 4.236468e+00
Iter = 1392, Time = 4.188453e+00
Iter = 1393, Time = 4.220342e+00
Iter = 1394, Time = 4.200882e+00
Iter = 1395, Time = 4.231135e+00
Iter = 1396, Time = 4.211101e+00
Iter = 1397, Time = 4.242027e+00
Iter = 1398, Time = 4.266517e+00
Iter = 1399, Time = 4.203433e+00
Iter = 1400, Time = 4.198952e+00
Iter 1400
N-norm = 9.737477e+02, L21-norm = 4.583273e+04, rel_fval = 4.019584e-05
 epsilon = 4.107459e+03, residual = 4.107348e+03
 SNR = 2.050121e+01, aSNR = 1.887566e+01

Iter = 1401, Time = 4.084320e+00
Iter = 1402, Time = 4.173765e+00
Iter = 1403, Time = 4.190549e+00
Iter = 1404, Time = 4.170891e+00
Iter = 1405, Time = 4.194395e+00
Iter = 1406, Time = 4.150397e+00
Iter = 1407, Time = 4.178156e+00
Iter = 1408, Time = 4.198533e+00
Iter = 1409, Time = 4.186839e+00
Iter = 1410, Time = 4.164224e+00
Iter = 1411, Time = 4.236525e+00
Iter = 1412, Time = 4.152473e+00
Iter = 1413, Time = 4.204171e+00
Iter = 1414, Time = 4.173508e+00
Iter = 1415, Time = 4.166170e+00
Iter = 1416, Time = 4.186534e+00
Iter = 1417, Time = 4.194844e+00
Iter = 1418, Time = 4.165353e+00
Iter = 1419, Time = 4.122158e+00
Iter = 1420, Time = 4.114548e+00
Iter = 1421, Time = 4.149904e+00
Iter = 1422, Time = 4.135503e+00
Iter = 1423, Time = 4.118156e+00
Iter = 1424, Time = 4.096988e+00
Iter = 1425, Time = 4.123235e+00
Iter = 1426, Time = 4.114484e+00
Iter = 1427, Time = 4.140487e+00
Iter = 1428, Time = 4.115441e+00
Iter = 1429, Time = 4.103759e+00
Iter = 1430, Time = 4.100509e+00
Iter = 1431, Time = 4.116264e+00
Iter = 1432, Time = 4.130799e+00
Iter = 1433, Time = 4.105676e+00
Iter = 1434, Time = 4.169448e+00
Iter = 1435, Time = 4.124608e+00
Iter = 1436, Time = 4.084071e+00
Iter = 1437, Time = 4.124693e+00
Iter = 1438, Time = 4.109538e+00
Iter = 1439, Time = 4.142502e+00
Iter = 1440, Time = 4.190102e+00
Iter = 1441, Time = 4.195578e+00
Iter = 1442, Time = 4.148844e+00
Iter = 1443, Time = 4.210502e+00
Iter = 1444, Time = 4.195064e+00
Iter = 1445, Time = 4.187445e+00
Iter = 1446, Time = 4.200051e+00
Iter = 1447, Time = 4.164982e+00
Iter = 1448, Time = 4.181139e+00
Iter = 1449, Time = 4.207277e+00
Iter = 1450, Time = 4.192574e+00
Iter = 1451, Time = 4.182516e+00
Iter = 1452, Time = 4.182949e+00
Iter = 1453, Time = 4.214452e+00
Iter = 1454, Time = 4.205795e+00
Iter = 1455, Time = 4.194269e+00
Iter = 1456, Time = 4.194160e+00
Iter = 1457, Time = 4.190505e+00
Iter = 1458, Time = 4.198362e+00
Iter = 1459, Time = 4.206171e+00
Iter = 1460, Time = 4.169790e+00
Iter = 1461, Time = 4.197273e+00
Iter = 1462, Time = 4.178687e+00
Iter = 1463, Time = 4.198954e+00
Iter = 1464, Time = 4.176092e+00
Iter = 1465, Time = 4.201787e+00
Iter = 1466, Time = 4.190153e+00
Iter = 1467, Time = 4.197888e+00
Iter = 1468, Time = 4.195841e+00
Iter = 1469, Time = 4.172071e+00
Iter = 1470, Time = 4.181222e+00
Iter = 1471, Time = 4.204755e+00
Iter = 1472, Time = 4.170174e+00
Iter = 1473, Time = 4.205963e+00
Iter = 1474, Time = 4.186807e+00
Iter = 1475, Time = 4.203953e+00
Iter = 1476, Time = 4.160525e+00
Iter = 1477, Time = 4.182103e+00
Iter = 1478, Time = 4.190291e+00
Iter = 1479, Time = 4.137830e+00
Iter = 1480, Time = 4.190178e+00
Iter = 1481, Time = 4.181201e+00
Iter = 1482, Time = 4.184636e+00
Iter = 1483, Time = 4.216741e+00
Iter = 1484, Time = 4.178402e+00
Iter = 1485, Time = 4.159214e+00
Iter = 1486, Time = 4.187221e+00
Iter = 1487, Time = 4.167383e+00
Iter = 1488, Time = 4.180766e+00
Iter = 1489, Time = 4.218967e+00
Iter = 1490, Time = 4.158269e+00
Iter = 1491, Time = 4.222483e+00
Iter = 1492, Time = 4.183390e+00
Iter = 1493, Time = 4.220040e+00
Iter = 1494, Time = 4.280817e+00
Iter = 1495, Time = 4.189410e+00
Iter = 1496, Time = 4.177753e+00
Iter = 1497, Time = 4.171876e+00
Iter = 1498, Time = 4.177597e+00
Iter = 1499, Time = 4.189876e+00
Iter = 1500, Time = 4.327367e+00
Iter 1500
N-norm = 9.738625e+02, L21-norm = 4.586416e+04, rel_fval = 3.542388e-05
 epsilon = 4.107459e+03, residual = 4.107324e+03
 SNR = 2.045995e+01, aSNR = 1.884361e+01

Iter = 1501, Time = 4.172709e+00
Iter = 1502, Time = 4.186072e+00
Iter = 1503, Time = 4.280330e+00
Iter = 1504, Time = 4.239567e+00
Iter = 1505, Time = 4.242714e+00
Iter = 1506, Time = 4.225357e+00
Iter = 1507, Time = 4.268539e+00
Iter = 1508, Time = 4.287548e+00
Iter = 1509, Time = 4.246242e+00
Iter = 1510, Time = 4.239674e+00
Iter = 1511, Time = 4.207704e+00
Iter = 1512, Time = 4.272849e+00
Iter = 1513, Time = 4.260829e+00
Iter = 1514, Time = 4.256256e+00
Iter = 1515, Time = 4.176458e+00
Iter = 1516, Time = 4.179647e+00
Iter = 1517, Time = 4.145851e+00
Iter = 1518, Time = 4.153733e+00
Iter = 1519, Time = 4.111164e+00
Iter = 1520, Time = 4.188726e+00
Iter = 1521, Time = 4.116296e+00
Iter = 1522, Time = 4.192578e+00
Iter = 1523, Time = 4.209389e+00
Iter = 1524, Time = 4.157515e+00
Iter = 1525, Time = 4.227738e+00
Iter = 1526, Time = 4.245053e+00
Iter = 1527, Time = 4.255874e+00
Iter = 1528, Time = 4.303352e+00
Iter = 1529, Time = 4.277958e+00
Iter = 1530, Time = 4.178736e+00
Iter = 1531, Time = 4.227461e+00
Iter = 1532, Time = 4.221108e+00
Iter = 1533, Time = 4.247766e+00
Iter = 1534, Time = 4.190526e+00
Iter = 1535, Time = 4.213933e+00
Iter = 1536, Time = 4.246787e+00
Reweighting: 4

Iter = 1537, Time = 4.249834e+00
Iter = 1538, Time = 4.301205e+00
Iter = 1539, Time = 4.248424e+00
Iter = 1540, Time = 4.231849e+00
Iter = 1541, Time = 4.206226e+00
Iter = 1542, Time = 4.196624e+00
Iter = 1543, Time = 4.217129e+00
Iter = 1544, Time = 4.316166e+00
Iter = 1545, Time = 4.168709e+00
Iter = 1546, Time = 4.232674e+00
Iter = 1547, Time = 4.165386e+00
Iter = 1548, Time = 4.225097e+00
Iter = 1549, Time = 4.209733e+00
Iter = 1550, Time = 4.200160e+00
Iter = 1551, Time = 4.179134e+00
Iter = 1552, Time = 4.335906e+00
Iter = 1553, Time = 4.207714e+00
Iter = 1554, Time = 4.289607e+00
Iter = 1555, Time = 4.220350e+00
Iter = 1556, Time = 4.248232e+00
Iter = 1557, Time = 4.225109e+00
Iter = 1558, Time = 4.145794e+00
Iter = 1559, Time = 4.173366e+00
Iter = 1560, Time = 4.183438e+00
Iter = 1561, Time = 4.171559e+00
Iter = 1562, Time = 4.177872e+00
Iter = 1563, Time = 4.140496e+00
Iter = 1564, Time = 4.218690e+00
Iter = 1565, Time = 4.152664e+00
Iter = 1566, Time = 4.182424e+00
Iter = 1567, Time = 4.219229e+00
Iter = 1568, Time = 4.215921e+00
Iter = 1569, Time = 4.274753e+00
Iter = 1570, Time = 4.241715e+00
Iter = 1571, Time = 4.268100e+00
Iter = 1572, Time = 4.296375e+00
Iter = 1573, Time = 4.276982e+00
Iter = 1574, Time = 4.243773e+00
Iter = 1575, Time = 4.188546e+00
Iter = 1576, Time = 4.260317e+00
Iter = 1577, Time = 4.267441e+00
Iter = 1578, Time = 4.227125e+00
Iter = 1579, Time = 4.233795e+00
Iter = 1580, Time = 4.257212e+00
Iter = 1581, Time = 4.335355e+00
Iter = 1582, Time = 4.231267e+00
Iter = 1583, Time = 4.290604e+00
Iter = 1584, Time = 4.270913e+00
Iter = 1585, Time = 4.235344e+00
Iter = 1586, Time = 4.253593e+00
Iter = 1587, Time = 4.251447e+00
Iter = 1588, Time = 4.269278e+00
Iter = 1589, Time = 4.215018e+00
Iter = 1590, Time = 4.173099e+00
Iter = 1591, Time = 4.253775e+00
Iter = 1592, Time = 4.244863e+00
Iter = 1593, Time = 4.284790e+00
Iter = 1594, Time = 4.322527e+00
Iter = 1595, Time = 4.220679e+00
Iter = 1596, Time = 4.344622e+00
Iter = 1597, Time = 4.236235e+00
Iter = 1598, Time = 4.314369e+00
Iter = 1599, Time = 4.231592e+00
Iter = 1600, Time = 4.321600e+00
Iter 1600
N-norm = 9.740396e+02, L21-norm = 4.589661e+04, rel_fval = 3.768724e-05
 epsilon = 4.107459e+03, residual = 4.106551e+03
 SNR = 2.042838e+01, aSNR = 1.882533e+01

Iter = 1601, Time = 4.203536e+00
Iter = 1602, Time = 4.142768e+00
Iter = 1603, Time = 4.191497e+00
Iter = 1604, Time = 4.291835e+00
Iter = 1605, Time = 4.243253e+00
Iter = 1606, Time = 4.231177e+00
Iter = 1607, Time = 4.195966e+00
Iter = 1608, Time = 4.236296e+00
Iter = 1609, Time = 4.192641e+00
Iter = 1610, Time = 4.112859e+00
Iter = 1611, Time = 4.214211e+00
Iter = 1612, Time = 4.191016e+00
Iter = 1613, Time = 4.363866e+00
Iter = 1614, Time = 4.238935e+00
Iter = 1615, Time = 4.134723e+00
Iter = 1616, Time = 4.243556e+00
Iter = 1617, Time = 4.220940e+00
Iter = 1618, Time = 4.330051e+00
Iter = 1619, Time = 4.277197e+00
Iter = 1620, Time = 4.234532e+00
Iter = 1621, Time = 4.218872e+00
Iter = 1622, Time = 4.207428e+00
Iter = 1623, Time = 4.154876e+00
Iter = 1624, Time = 4.266641e+00
Iter = 1625, Time = 4.217307e+00
Iter = 1626, Time = 4.233562e+00
Iter = 1627, Time = 4.195624e+00
Iter = 1628, Time = 4.257230e+00
Iter = 1629, Time = 4.255153e+00
Iter = 1630, Time = 4.247886e+00
Iter = 1631, Time = 4.231279e+00
Iter = 1632, Time = 4.276430e+00
Iter = 1633, Time = 4.236614e+00
Iter = 1634, Time = 4.261634e+00
Iter = 1635, Time = 4.226344e+00
Iter = 1636, Time = 4.227594e+00
Iter = 1637, Time = 4.293370e+00
Iter = 1638, Time = 4.219689e+00
Iter = 1639, Time = 4.188024e+00
Iter = 1640, Time = 4.252621e+00
Iter = 1641, Time = 4.173621e+00
Iter = 1642, Time = 4.269115e+00
Iter = 1643, Time = 4.186541e+00
Iter = 1644, Time = 4.234666e+00
Iter = 1645, Time = 4.240563e+00
Iter = 1646, Time = 4.136286e+00
Iter = 1647, Time = 4.235337e+00
Iter = 1648, Time = 4.194918e+00
Iter = 1649, Time = 4.264786e+00
Iter = 1650, Time = 4.267542e+00
Iter = 1651, Time = 4.235688e+00
Iter = 1652, Time = 4.231222e+00
Iter = 1653, Time = 4.174913e+00
Iter = 1654, Time = 4.238324e+00
Iter = 1655, Time = 4.233556e+00
Iter = 1656, Time = 4.250885e+00
Iter = 1657, Time = 4.186824e+00
Iter = 1658, Time = 4.234777e+00
Iter = 1659, Time = 4.206618e+00
Iter = 1660, Time = 4.281427e+00
Iter = 1661, Time = 4.258431e+00
Iter = 1662, Time = 4.205589e+00
Iter = 1663, Time = 4.189918e+00
Iter = 1664, Time = 4.249660e+00
Iter = 1665, Time = 4.246383e+00
Iter = 1666, Time = 4.231211e+00
Iter = 1667, Time = 4.204910e+00
Iter = 1668, Time = 4.392726e+00
Iter = 1669, Time = 4.270936e+00
Iter = 1670, Time = 4.316204e+00
Iter = 1671, Time = 4.278355e+00
Iter = 1672, Time = 4.243361e+00
Iter = 1673, Time = 4.249656e+00
Iter = 1674, Time = 4.187016e+00
Iter = 1675, Time = 4.282462e+00
Iter = 1676, Time = 4.340505e+00
Iter = 1677, Time = 4.182957e+00
Iter = 1678, Time = 4.307625e+00
Iter = 1679, Time = 4.204041e+00
Iter = 1680, Time = 4.302619e+00
Iter = 1681, Time = 4.302429e+00
Iter = 1682, Time = 4.268878e+00
Iter = 1683, Time = 4.233712e+00
Iter = 1684, Time = 4.276567e+00
Iter = 1685, Time = 4.199201e+00
Iter = 1686, Time = 4.229085e+00
Iter = 1687, Time = 4.230347e+00
Iter = 1688, Time = 4.311016e+00
Iter = 1689, Time = 4.251376e+00
Iter = 1690, Time = 4.212061e+00
Iter = 1691, Time = 4.194264e+00
Iter = 1692, Time = 4.173804e+00
Iter = 1693, Time = 4.140075e+00
Iter = 1694, Time = 4.324706e+00
Iter = 1695, Time = 4.093691e+00
Iter = 1696, Time = 4.113761e+00
Iter = 1697, Time = 4.110219e+00
Iter = 1698, Time = 4.100799e+00
Iter = 1699, Time = 4.139567e+00
Iter = 1700, Time = 4.225516e+00
Iter 1700
N-norm = 9.741443e+02, L21-norm = 4.592263e+04, rel_fval = 3.694298e-05
 epsilon = 4.107459e+03, residual = 4.107307e+03
 SNR = 2.039690e+01, aSNR = 1.880061e+01

Iter = 1701, Time = 4.201226e+00
Iter = 1702, Time = 4.101131e+00
Iter = 1703, Time = 4.187159e+00
Iter = 1704, Time = 4.268159e+00
Iter = 1705, Time = 4.174901e+00
Iter = 1706, Time = 4.264566e+00
Iter = 1707, Time = 4.193219e+00
Iter = 1708, Time = 4.330175e+00
Iter = 1709, Time = 4.248545e+00
Iter = 1710, Time = 4.153370e+00
Iter = 1711, Time = 4.214188e+00
Iter = 1712, Time = 4.223629e+00
Iter = 1713, Time = 4.241004e+00
Iter = 1714, Time = 4.246986e+00
Iter = 1715, Time = 4.183922e+00
Iter = 1716, Time = 4.194625e+00
Iter = 1717, Time = 4.214568e+00
Iter = 1718, Time = 4.209318e+00
Iter = 1719, Time = 4.373484e+00
Iter = 1720, Time = 4.222567e+00
Iter = 1721, Time = 4.279285e+00
Iter = 1722, Time = 4.184122e+00
Iter = 1723, Time = 4.361675e+00
Iter = 1724, Time = 4.292313e+00
Iter = 1725, Time = 4.335636e+00
Iter = 1726, Time = 4.312737e+00
Iter = 1727, Time = 4.224167e+00
Iter = 1728, Time = 4.298815e+00
Iter = 1729, Time = 4.266424e+00
Iter = 1730, Time = 4.264567e+00
Iter = 1731, Time = 4.286710e+00
Iter = 1732, Time = 4.259441e+00
Iter = 1733, Time = 4.323171e+00
Iter = 1734, Time = 4.208321e+00
Iter = 1735, Time = 4.247224e+00
Iter = 1736, Time = 4.265244e+00
Iter = 1737, Time = 4.213458e+00
Iter = 1738, Time = 4.180370e+00
Iter = 1739, Time = 4.215928e+00
Iter = 1740, Time = 4.250818e+00
Iter = 1741, Time = 4.158650e+00
Iter = 1742, Time = 4.215753e+00
Iter = 1743, Time = 4.209104e+00
Iter = 1744, Time = 4.228929e+00
Iter = 1745, Time = 4.223419e+00
Iter = 1746, Time = 4.169107e+00
Iter = 1747, Time = 4.173053e+00
Iter = 1748, Time = 4.244226e+00
Iter = 1749, Time = 4.221307e+00
Iter = 1750, Time = 4.231295e+00
Iter = 1751, Time = 4.158053e+00
Iter = 1752, Time = 4.229510e+00
Iter = 1753, Time = 4.195663e+00
Iter = 1754, Time = 4.206973e+00
Iter = 1755, Time = 4.252071e+00
Iter = 1756, Time = 4.168890e+00
Iter = 1757, Time = 4.206278e+00
Iter = 1758, Time = 4.268000e+00
Iter = 1759, Time = 4.307927e+00
Iter = 1760, Time = 4.302888e+00
Iter = 1761, Time = 4.151216e+00
Iter = 1762, Time = 4.208716e+00
Iter = 1763, Time = 4.246588e+00
Iter = 1764, Time = 4.239649e+00
Iter = 1765, Time = 4.215011e+00
Iter = 1766, Time = 4.253343e+00
Iter = 1767, Time = 4.329247e+00
Iter = 1768, Time = 4.397565e+00
Iter = 1769, Time = 4.189606e+00
Iter = 1770, Time = 4.193054e+00
Iter = 1771, Time = 4.160052e+00
Iter = 1772, Time = 4.190586e+00
Iter = 1773, Time = 4.134184e+00
Iter = 1774, Time = 4.341128e+00
Iter = 1775, Time = 4.156241e+00
Iter = 1776, Time = 4.148169e+00
Iter = 1777, Time = 4.123608e+00
Iter = 1778, Time = 4.119981e+00
Iter = 1779, Time = 4.295609e+00
Iter = 1780, Time = 4.288625e+00
Iter = 1781, Time = 4.206921e+00
Iter = 1782, Time = 4.312195e+00
Iter = 1783, Time = 4.191842e+00
Iter = 1784, Time = 4.304341e+00
Iter = 1785, Time = 4.171530e+00
Iter = 1786, Time = 4.153997e+00
Iter = 1787, Time = 4.196394e+00
Iter = 1788, Time = 4.193058e+00
Iter = 1789, Time = 4.189466e+00
Iter = 1790, Time = 4.193570e+00
Iter = 1791, Time = 4.205640e+00
Iter = 1792, Time = 4.275444e+00
Iter = 1793, Time = 4.246801e+00
Iter = 1794, Time = 4.272830e+00
Iter = 1795, Time = 4.320933e+00
Iter = 1796, Time = 4.171439e+00
Iter = 1797, Time = 4.229544e+00
Iter = 1798, Time = 4.118328e+00
Iter = 1799, Time = 4.078310e+00
Iter = 1800, Time = 4.214225e+00
Iter 1800
N-norm = 9.742411e+02, L21-norm = 4.595289e+04, rel_fval = 3.553899e-05
 epsilon = 4.107459e+03, residual = 4.107358e+03
 SNR = 2.036300e+01, aSNR = 1.877408e+01

Iter = 1801, Time = 3.953111e+00
Iter = 1802, Time = 4.173158e+00
Iter = 1803, Time = 4.132584e+00
Iter = 1804, Time = 4.271759e+00
Iter = 1805, Time = 4.143305e+00
Iter = 1806, Time = 4.196712e+00
Iter = 1807, Time = 4.163938e+00
Iter = 1808, Time = 4.236443e+00
Iter = 1809, Time = 4.237195e+00
Iter = 1810, Time = 4.209715e+00
Iter = 1811, Time = 4.247972e+00
Iter = 1812, Time = 4.304027e+00
Iter = 1813, Time = 4.191577e+00
Iter = 1814, Time = 4.224017e+00
Iter = 1815, Time = 4.301609e+00
Iter = 1816, Time = 4.353302e+00
Iter = 1817, Time = 4.255198e+00
Iter = 1818, Time = 4.199364e+00
Iter = 1819, Time = 4.324682e+00
Iter = 1820, Time = 4.255738e+00
Iter = 1821, Time = 4.267060e+00
Iter = 1822, Time = 4.319619e+00
Iter = 1823, Time = 4.196997e+00
Iter = 1824, Time = 4.360745e+00
Iter = 1825, Time = 4.233863e+00
Iter = 1826, Time = 4.356946e+00
Iter = 1827, Time = 4.304414e+00
Iter = 1828, Time = 4.337277e+00
Iter = 1829, Time = 4.388256e+00
Iter = 1830, Time = 4.192638e+00
Iter = 1831, Time = 4.354246e+00
Iter = 1832, Time = 4.250890e+00
Iter = 1833, Time = 4.357444e+00
Iter = 1834, Time = 4.316500e+00
Iter = 1835, Time = 4.226109e+00
Iter = 1836, Time = 4.258082e+00
Reweighting: 5



 No more reweights 

Elapsed time is 7725.664125 seconds.
Maximum number of iterations reached
Iter 1836
N-norm = 9.742761e+02, L21-norm = 4.596478e+04, rel_fval = 3.646095e-05
epsilon = 4.107459e+03, residual = 4.107358e+03
SNR = 2.035013e+01, aSNR = 1.876360e+01


SNR =

   20.3501


SNR_average =

   18.7636


Time_iter_average =

    0.7603

